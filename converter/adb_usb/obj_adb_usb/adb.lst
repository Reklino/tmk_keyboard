   1               		.file	"adb.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.place_bit0,"ax",@progbits
  12               	place_bit0:
  13               	.LFB18:
  14               		.file 1 "../../tmk_core/protocol/adb.c"
   1:../../tmk_core/protocol/adb.c **** /*
   2:../../tmk_core/protocol/adb.c **** Copyright 2011-19 Jun WAKO <wakojun@gmail.com>
   3:../../tmk_core/protocol/adb.c **** Copyright 2013 Shay Green <gblargg@gmail.com>
   4:../../tmk_core/protocol/adb.c **** 
   5:../../tmk_core/protocol/adb.c **** This software is licensed with a Modified BSD License.
   6:../../tmk_core/protocol/adb.c **** All of this is supposed to be Free Software, Open Source, DFSG-free,
   7:../../tmk_core/protocol/adb.c **** GPL-compatible, and OK to use in both free and proprietary applications.
   8:../../tmk_core/protocol/adb.c **** Additions and corrections to this file are welcome.
   9:../../tmk_core/protocol/adb.c **** 
  10:../../tmk_core/protocol/adb.c **** 
  11:../../tmk_core/protocol/adb.c **** Redistribution and use in source and binary forms, with or without
  12:../../tmk_core/protocol/adb.c **** modification, are permitted provided that the following conditions are met:
  13:../../tmk_core/protocol/adb.c **** 
  14:../../tmk_core/protocol/adb.c **** * Redistributions of source code must retain the above copyright
  15:../../tmk_core/protocol/adb.c ****   notice, this list of conditions and the following disclaimer.
  16:../../tmk_core/protocol/adb.c **** 
  17:../../tmk_core/protocol/adb.c **** * Redistributions in binary form must reproduce the above copyright
  18:../../tmk_core/protocol/adb.c ****   notice, this list of conditions and the following disclaimer in
  19:../../tmk_core/protocol/adb.c ****   the documentation and/or other materials provided with the
  20:../../tmk_core/protocol/adb.c ****   distribution.
  21:../../tmk_core/protocol/adb.c **** 
  22:../../tmk_core/protocol/adb.c **** * Neither the name of the copyright holders nor the names of
  23:../../tmk_core/protocol/adb.c ****   contributors may be used to endorse or promote products derived
  24:../../tmk_core/protocol/adb.c ****   from this software without specific prior written permission.
  25:../../tmk_core/protocol/adb.c **** 
  26:../../tmk_core/protocol/adb.c **** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:../../tmk_core/protocol/adb.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:../../tmk_core/protocol/adb.c **** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  29:../../tmk_core/protocol/adb.c **** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  30:../../tmk_core/protocol/adb.c **** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  31:../../tmk_core/protocol/adb.c **** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  32:../../tmk_core/protocol/adb.c **** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  33:../../tmk_core/protocol/adb.c **** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  34:../../tmk_core/protocol/adb.c **** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  35:../../tmk_core/protocol/adb.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../tmk_core/protocol/adb.c **** POSSIBILITY OF SUCH DAMAGE.
  37:../../tmk_core/protocol/adb.c **** */
  38:../../tmk_core/protocol/adb.c **** 
  39:../../tmk_core/protocol/adb.c **** #include <stdbool.h>
  40:../../tmk_core/protocol/adb.c **** #include <util/delay.h>
  41:../../tmk_core/protocol/adb.c **** #include <avr/io.h>
  42:../../tmk_core/protocol/adb.c **** #include <avr/interrupt.h>
  43:../../tmk_core/protocol/adb.c **** #include "adb.h"
  44:../../tmk_core/protocol/adb.c **** #include "print.h"
  45:../../tmk_core/protocol/adb.c **** 
  46:../../tmk_core/protocol/adb.c **** 
  47:../../tmk_core/protocol/adb.c **** // GCC doesn't inline functions normally
  48:../../tmk_core/protocol/adb.c **** #define data_lo() (ADB_DDR |=  (1<<ADB_DATA_BIT))
  49:../../tmk_core/protocol/adb.c **** #define data_hi() (ADB_DDR &= ~(1<<ADB_DATA_BIT))
  50:../../tmk_core/protocol/adb.c **** #define data_in() (ADB_PIN &   (1<<ADB_DATA_BIT))
  51:../../tmk_core/protocol/adb.c **** 
  52:../../tmk_core/protocol/adb.c **** #ifdef ADB_PSW_BIT
  53:../../tmk_core/protocol/adb.c **** static inline void psw_lo(void);
  54:../../tmk_core/protocol/adb.c **** static inline void psw_hi(void);
  55:../../tmk_core/protocol/adb.c **** static inline bool psw_in(void);
  56:../../tmk_core/protocol/adb.c **** #endif
  57:../../tmk_core/protocol/adb.c **** 
  58:../../tmk_core/protocol/adb.c **** static inline void attention(void);
  59:../../tmk_core/protocol/adb.c **** static inline void place_bit0(void);
  60:../../tmk_core/protocol/adb.c **** static inline void place_bit1(void);
  61:../../tmk_core/protocol/adb.c **** static inline void send_byte(uint8_t data);
  62:../../tmk_core/protocol/adb.c **** static inline uint16_t wait_data_lo(uint16_t us);
  63:../../tmk_core/protocol/adb.c **** static inline uint16_t wait_data_hi(uint16_t us);
  64:../../tmk_core/protocol/adb.c **** 
  65:../../tmk_core/protocol/adb.c **** 
  66:../../tmk_core/protocol/adb.c **** void adb_host_init(void)
  67:../../tmk_core/protocol/adb.c **** {
  68:../../tmk_core/protocol/adb.c ****     ADB_PORT &= ~(1<<ADB_DATA_BIT);
  69:../../tmk_core/protocol/adb.c ****     data_hi();
  70:../../tmk_core/protocol/adb.c **** #ifdef ADB_PSW_BIT
  71:../../tmk_core/protocol/adb.c ****     psw_hi();
  72:../../tmk_core/protocol/adb.c **** #endif
  73:../../tmk_core/protocol/adb.c **** }
  74:../../tmk_core/protocol/adb.c **** 
  75:../../tmk_core/protocol/adb.c **** #ifdef ADB_PSW_BIT
  76:../../tmk_core/protocol/adb.c **** bool adb_host_psw(void)
  77:../../tmk_core/protocol/adb.c **** {
  78:../../tmk_core/protocol/adb.c ****     return psw_in();
  79:../../tmk_core/protocol/adb.c **** }
  80:../../tmk_core/protocol/adb.c **** #endif
  81:../../tmk_core/protocol/adb.c **** 
  82:../../tmk_core/protocol/adb.c **** /*
  83:../../tmk_core/protocol/adb.c ****  * Don't call this in a row without the delay, otherwise it makes some of poor controllers
  84:../../tmk_core/protocol/adb.c ****  * overloaded and misses strokes. Recommended interval is 12ms.
  85:../../tmk_core/protocol/adb.c ****  *
  86:../../tmk_core/protocol/adb.c ****  * Thanks a lot, blargg!
  87:../../tmk_core/protocol/adb.c ****  * <http://geekhack.org/index.php?topic=14290.msg1068919#msg1068919>
  88:../../tmk_core/protocol/adb.c ****  * <http://geekhack.org/index.php?topic=14290.msg1070139#msg1070139>
  89:../../tmk_core/protocol/adb.c ****  */
  90:../../tmk_core/protocol/adb.c **** uint16_t adb_host_kbd_recv(uint8_t addr)
  91:../../tmk_core/protocol/adb.c **** {
  92:../../tmk_core/protocol/adb.c ****     return adb_host_talk(addr, ADB_REG_0);
  93:../../tmk_core/protocol/adb.c **** }
  94:../../tmk_core/protocol/adb.c **** 
  95:../../tmk_core/protocol/adb.c **** #ifdef ADB_MOUSE_ENABLE
  96:../../tmk_core/protocol/adb.c **** __attribute__ ((weak))
  97:../../tmk_core/protocol/adb.c **** void adb_mouse_init(void) {
  98:../../tmk_core/protocol/adb.c ****     return;
  99:../../tmk_core/protocol/adb.c **** }
 100:../../tmk_core/protocol/adb.c **** 
 101:../../tmk_core/protocol/adb.c **** __attribute__ ((weak))
 102:../../tmk_core/protocol/adb.c **** void adb_mouse_task(void) {
 103:../../tmk_core/protocol/adb.c ****     return;
 104:../../tmk_core/protocol/adb.c **** }
 105:../../tmk_core/protocol/adb.c **** #endif
 106:../../tmk_core/protocol/adb.c **** 
 107:../../tmk_core/protocol/adb.c **** // This sends Talk command to read data from register and returns length of the data.
 108:../../tmk_core/protocol/adb.c **** uint8_t adb_host_talk_buf(uint8_t addr, uint8_t reg, uint8_t *buf, uint8_t len)
 109:../../tmk_core/protocol/adb.c **** {
 110:../../tmk_core/protocol/adb.c ****     for (int8_t i =0; i < len; i++) buf[i] = 0;
 111:../../tmk_core/protocol/adb.c **** 
 112:../../tmk_core/protocol/adb.c ****     cli();
 113:../../tmk_core/protocol/adb.c ****     attention();
 114:../../tmk_core/protocol/adb.c ****     send_byte((addr<<4) | ADB_CMD_TALK | reg);
 115:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 116:../../tmk_core/protocol/adb.c ****     // TODO: Service Request(Srq):
 117:../../tmk_core/protocol/adb.c ****     // Device holds low part of comannd stopbit for 140-260us
 118:../../tmk_core/protocol/adb.c ****     //
 119:../../tmk_core/protocol/adb.c ****     // Command:
 120:../../tmk_core/protocol/adb.c ****     // ......._     ______________________    ___ ............_     -------
 121:../../tmk_core/protocol/adb.c ****     //         |   |                      |  |   |             |   |
 122:../../tmk_core/protocol/adb.c ****     // Command |   |                      |  |   | Data bytes  |   |
 123:../../tmk_core/protocol/adb.c ****     // ........|___|  |     140-260       |__|   |_............|___|
 124:../../tmk_core/protocol/adb.c ****     //         |stop0 | Tlt Stop-to-Start |start1|             |stop0 |
 125:../../tmk_core/protocol/adb.c ****     //
 126:../../tmk_core/protocol/adb.c ****     // Command without data:
 127:../../tmk_core/protocol/adb.c ****     // ......._     __________________________
 128:../../tmk_core/protocol/adb.c ****     //         |   |
 129:../../tmk_core/protocol/adb.c ****     // Command |   |
 130:../../tmk_core/protocol/adb.c ****     // ........|___|  |     140-260       |
 131:../../tmk_core/protocol/adb.c ****     //         |stop0 | Tlt Stop-to-Start |
 132:../../tmk_core/protocol/adb.c ****     //
 133:../../tmk_core/protocol/adb.c ****     // Service Request:
 134:../../tmk_core/protocol/adb.c ****     // ......._                     ______    ___ ............_     -------
 135:../../tmk_core/protocol/adb.c ****     //         |     140-260       |      |  |   |             |   |
 136:../../tmk_core/protocol/adb.c ****     // Command |  Service Request  |      |  |   | Data bytes  |   |
 137:../../tmk_core/protocol/adb.c ****     // ........|___________________|      |__|   |_............|___|
 138:../../tmk_core/protocol/adb.c ****     //         |stop0 |                   |start1|             |stop0 |
 139:../../tmk_core/protocol/adb.c ****     // ......._                     __________
 140:../../tmk_core/protocol/adb.c ****     //         |     140-260       |
 141:../../tmk_core/protocol/adb.c ****     // Command |  Service Request  |
 142:../../tmk_core/protocol/adb.c ****     // ........|___________________|
 143:../../tmk_core/protocol/adb.c ****     //         |stop0 |
 144:../../tmk_core/protocol/adb.c ****     // This can be happened?
 145:../../tmk_core/protocol/adb.c ****     // ......._     ______________________    ___ ............_                   -----
 146:../../tmk_core/protocol/adb.c ****     //         |   |                      |  |   |             |    140-260      |
 147:../../tmk_core/protocol/adb.c ****     // Command |   |                      |  |   | Data bytes  | Service Request |
 148:../../tmk_core/protocol/adb.c ****     // ........|___|  |     140-260       |__|   |_............|_________________|
 149:../../tmk_core/protocol/adb.c ****     //         |stop0 | Tlt Stop-to-Start |start1|             |stop0 |
 150:../../tmk_core/protocol/adb.c ****     //
 151:../../tmk_core/protocol/adb.c ****     // "Service requests are issued by the devices during a very specific time at the
 152:../../tmk_core/protocol/adb.c ****     // end of the reception of the command packet.
 153:../../tmk_core/protocol/adb.c ****     // If a device in need of service issues a service request, it must do so within
 154:../../tmk_core/protocol/adb.c ****     // the 65 µs of the Stop Bit’s low time and maintain the line low for a total of 300 µs."
 155:../../tmk_core/protocol/adb.c ****     //
 156:../../tmk_core/protocol/adb.c ****     // "A device sends a Service Request signal by holding the bus low during the low
 157:../../tmk_core/protocol/adb.c ****     // portion of the stop bit of any command or data transaction. The device must lengthen
 158:../../tmk_core/protocol/adb.c ****     // the stop by a minimum of 140 J.lS beyond its normal duration, as shown in Figure 8-15."
 159:../../tmk_core/protocol/adb.c ****     // http://ww1.microchip.com/downloads/en/AppNotes/00591b.pdf
 160:../../tmk_core/protocol/adb.c ****     if (!wait_data_hi(500)) {    // Service Request(310us Adjustable Keyboard): just ignored
 161:../../tmk_core/protocol/adb.c ****         xprintf("R");
 162:../../tmk_core/protocol/adb.c ****         sei();
 163:../../tmk_core/protocol/adb.c ****         return 0;
 164:../../tmk_core/protocol/adb.c ****     }
 165:../../tmk_core/protocol/adb.c ****     if (!wait_data_lo(500)) {   // Tlt/Stop to Start(140-260us)
 166:../../tmk_core/protocol/adb.c ****         sei();
 167:../../tmk_core/protocol/adb.c ****         return 0;               // No data from device(not error);
 168:../../tmk_core/protocol/adb.c ****     }
 169:../../tmk_core/protocol/adb.c **** 
 170:../../tmk_core/protocol/adb.c ****     // start bit(1)
 171:../../tmk_core/protocol/adb.c ****     if (!wait_data_hi(40)) {
 172:../../tmk_core/protocol/adb.c ****         xprintf("S");
 173:../../tmk_core/protocol/adb.c ****         sei();
 174:../../tmk_core/protocol/adb.c ****         return 0;
 175:../../tmk_core/protocol/adb.c ****     }
 176:../../tmk_core/protocol/adb.c ****     if (!wait_data_lo(100)) {
 177:../../tmk_core/protocol/adb.c ****         xprintf("s");
 178:../../tmk_core/protocol/adb.c ****         sei();
 179:../../tmk_core/protocol/adb.c ****         return 0;
 180:../../tmk_core/protocol/adb.c ****     }
 181:../../tmk_core/protocol/adb.c **** 
 182:../../tmk_core/protocol/adb.c ****     uint8_t n = 0; // bit count
 183:../../tmk_core/protocol/adb.c ****     do {
 184:../../tmk_core/protocol/adb.c ****         //
 185:../../tmk_core/protocol/adb.c ****         // |<- bit_cell_max(130) ->|
 186:../../tmk_core/protocol/adb.c ****         // |        |<-   lo     ->|
 187:../../tmk_core/protocol/adb.c ****         // |        |       |<-hi->|
 188:../../tmk_core/protocol/adb.c ****         //           _______
 189:../../tmk_core/protocol/adb.c ****         // |        |       |
 190:../../tmk_core/protocol/adb.c ****         // | 130-lo | lo-hi |
 191:../../tmk_core/protocol/adb.c ****         // |________|       |
 192:../../tmk_core/protocol/adb.c ****         //
 193:../../tmk_core/protocol/adb.c ****         uint8_t lo = (uint8_t) wait_data_hi(130);
 194:../../tmk_core/protocol/adb.c ****         if (!lo)
 195:../../tmk_core/protocol/adb.c ****             goto error; // no more bit or after stop bit
 196:../../tmk_core/protocol/adb.c **** 
 197:../../tmk_core/protocol/adb.c ****         uint8_t hi = (uint8_t) wait_data_lo(lo);
 198:../../tmk_core/protocol/adb.c ****         if (!hi)
 199:../../tmk_core/protocol/adb.c ****             goto error; // stop bit extedned by Srq?
 200:../../tmk_core/protocol/adb.c **** 
 201:../../tmk_core/protocol/adb.c ****         if (n/8 >= len) continue; // can't store in buf
 202:../../tmk_core/protocol/adb.c **** 
 203:../../tmk_core/protocol/adb.c ****         buf[n/8] <<= 1;
 204:../../tmk_core/protocol/adb.c ****         if ((130 - lo) < (lo - hi)) {
 205:../../tmk_core/protocol/adb.c ****             buf[n/8] |= 1;
 206:../../tmk_core/protocol/adb.c ****         }
 207:../../tmk_core/protocol/adb.c ****     }
 208:../../tmk_core/protocol/adb.c ****     while ( ++n );
 209:../../tmk_core/protocol/adb.c **** 
 210:../../tmk_core/protocol/adb.c **** error:
 211:../../tmk_core/protocol/adb.c ****     sei();
 212:../../tmk_core/protocol/adb.c ****     return n/8;
 213:../../tmk_core/protocol/adb.c **** }
 214:../../tmk_core/protocol/adb.c **** 
 215:../../tmk_core/protocol/adb.c **** uint16_t adb_host_talk(uint8_t addr, uint8_t reg)
 216:../../tmk_core/protocol/adb.c **** {
 217:../../tmk_core/protocol/adb.c ****     uint8_t len;
 218:../../tmk_core/protocol/adb.c ****     uint8_t buf[8];
 219:../../tmk_core/protocol/adb.c ****     len = adb_host_talk_buf(addr, reg, buf, 8);
 220:../../tmk_core/protocol/adb.c ****     if (len != 2) return 0;
 221:../../tmk_core/protocol/adb.c ****     return (buf[0]<<8 | buf[1]);
 222:../../tmk_core/protocol/adb.c **** }
 223:../../tmk_core/protocol/adb.c **** 
 224:../../tmk_core/protocol/adb.c **** void adb_host_listen_buf(uint8_t addr, uint8_t reg, uint8_t *buf, uint8_t len)
 225:../../tmk_core/protocol/adb.c **** {
 226:../../tmk_core/protocol/adb.c ****     cli();
 227:../../tmk_core/protocol/adb.c ****     attention();
 228:../../tmk_core/protocol/adb.c ****     send_byte((addr<<4) | ADB_CMD_LISTEN | reg);
 229:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 230:../../tmk_core/protocol/adb.c ****     // TODO: Service Request
 231:../../tmk_core/protocol/adb.c ****     _delay_us(200);             // Tlt/Stop to Start
 232:../../tmk_core/protocol/adb.c ****     place_bit1();               // Startbit(1)
 233:../../tmk_core/protocol/adb.c ****     for (int8_t i = 0; i < len; i++) {
 234:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 235:../../tmk_core/protocol/adb.c ****         //xprintf("%02X ", buf[i]);
 236:../../tmk_core/protocol/adb.c ****     }
 237:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0);
 238:../../tmk_core/protocol/adb.c ****     sei();
 239:../../tmk_core/protocol/adb.c **** }
 240:../../tmk_core/protocol/adb.c **** 
 241:../../tmk_core/protocol/adb.c **** void adb_host_listen(uint8_t addr, uint8_t reg, uint8_t data_h, uint8_t data_l)
 242:../../tmk_core/protocol/adb.c **** {
 243:../../tmk_core/protocol/adb.c ****     uint8_t buf[2] = { data_h, data_l };
 244:../../tmk_core/protocol/adb.c ****     adb_host_listen_buf(addr, reg, buf, 2);
 245:../../tmk_core/protocol/adb.c **** }
 246:../../tmk_core/protocol/adb.c **** 
 247:../../tmk_core/protocol/adb.c **** void adb_host_flush(uint8_t addr)
 248:../../tmk_core/protocol/adb.c **** {
 249:../../tmk_core/protocol/adb.c ****     cli();
 250:../../tmk_core/protocol/adb.c ****     attention();
 251:../../tmk_core/protocol/adb.c ****     send_byte((addr<<4) | ADB_CMD_FLUSH);
 252:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 253:../../tmk_core/protocol/adb.c ****     _delay_us(200);             // Tlt/Stop to Start
 254:../../tmk_core/protocol/adb.c ****     sei();
 255:../../tmk_core/protocol/adb.c **** }
 256:../../tmk_core/protocol/adb.c **** 
 257:../../tmk_core/protocol/adb.c **** // send state of LEDs
 258:../../tmk_core/protocol/adb.c **** void adb_host_kbd_led(uint8_t addr, uint8_t led)
 259:../../tmk_core/protocol/adb.c **** {
 260:../../tmk_core/protocol/adb.c ****     // Listen Register2
 261:../../tmk_core/protocol/adb.c ****     //  upper byte: not used
 262:../../tmk_core/protocol/adb.c ****     //  lower byte: bit2=ScrollLock, bit1=CapsLock, bit0=NumLock
 263:../../tmk_core/protocol/adb.c ****     adb_host_listen(addr, 2, 0, led & 0x07);
 264:../../tmk_core/protocol/adb.c **** }
 265:../../tmk_core/protocol/adb.c **** 
 266:../../tmk_core/protocol/adb.c **** 
 267:../../tmk_core/protocol/adb.c **** #ifdef ADB_PSW_BIT
 268:../../tmk_core/protocol/adb.c **** static inline void psw_lo()
 269:../../tmk_core/protocol/adb.c **** {
 270:../../tmk_core/protocol/adb.c ****     ADB_DDR  |=  (1<<ADB_PSW_BIT);
 271:../../tmk_core/protocol/adb.c ****     ADB_PORT &= ~(1<<ADB_PSW_BIT);
 272:../../tmk_core/protocol/adb.c **** }
 273:../../tmk_core/protocol/adb.c **** static inline void psw_hi()
 274:../../tmk_core/protocol/adb.c **** {
 275:../../tmk_core/protocol/adb.c ****     ADB_PORT |=  (1<<ADB_PSW_BIT);
 276:../../tmk_core/protocol/adb.c ****     ADB_DDR  &= ~(1<<ADB_PSW_BIT);
 277:../../tmk_core/protocol/adb.c **** }
 278:../../tmk_core/protocol/adb.c **** static inline bool psw_in()
 279:../../tmk_core/protocol/adb.c **** {
 280:../../tmk_core/protocol/adb.c ****     ADB_PORT |=  (1<<ADB_PSW_BIT);
 281:../../tmk_core/protocol/adb.c ****     ADB_DDR  &= ~(1<<ADB_PSW_BIT);
 282:../../tmk_core/protocol/adb.c ****     return ADB_PIN&(1<<ADB_PSW_BIT);
 283:../../tmk_core/protocol/adb.c **** }
 284:../../tmk_core/protocol/adb.c **** #endif
 285:../../tmk_core/protocol/adb.c **** 
 286:../../tmk_core/protocol/adb.c **** static inline void attention(void)
 287:../../tmk_core/protocol/adb.c **** {
 288:../../tmk_core/protocol/adb.c ****     data_lo();
 289:../../tmk_core/protocol/adb.c ****     _delay_us(800-35); // bit1 holds lo for 35 more
 290:../../tmk_core/protocol/adb.c ****     place_bit1();
 291:../../tmk_core/protocol/adb.c **** }
 292:../../tmk_core/protocol/adb.c **** 
 293:../../tmk_core/protocol/adb.c **** static inline void place_bit0(void)
 294:../../tmk_core/protocol/adb.c **** {
  15               		.loc 1 294 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 295:../../tmk_core/protocol/adb.c ****     data_lo();
  21               		.loc 1 295 5 view .LVU1
  22 0000 509A      		sbi 0xa,0
 296:../../tmk_core/protocol/adb.c ****     _delay_us(65);
  23               		.loc 1 296 5 view .LVU2
  24               	.LVL0:
  25               	.LBB21:
  26               	.LBI21:
  27               		.file 2 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** _delay_us(double __us)
  28               		.loc 2 255 1 view .LVU3
  29               	.LBB22:
 256:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	double __tmp ;
  30               		.loc 2 257 2 view .LVU4
 258:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  31               		.loc 2 261 2 view .LVU5
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  32               		.loc 2 262 2 view .LVU6
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
  33               		.loc 2 263 2 view .LVU7
 264:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  34               		.loc 2 273 3 view .LVU8
 274:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  35               		.loc 2 276 2 view .LVU9
  36 0002 83E0      		ldi r24,lo8(259)
  37 0004 91E0      		ldi r25,hi8(259)
  38 0006 0197      	1:	sbiw r24,1
  39 0008 01F4      		brne 1b
  40 000a 00C0      		rjmp .
  41 000c 0000      		nop
  42               	.LVL1:
  43               		.loc 2 276 2 is_stmt 0 view .LVU10
  44               	.LBE22:
  45               	.LBE21:
 297:../../tmk_core/protocol/adb.c ****     data_hi();
  46               		.loc 1 297 5 is_stmt 1 view .LVU11
  47 000e 5098      		cbi 0xa,0
 298:../../tmk_core/protocol/adb.c ****     _delay_us(35);
  48               		.loc 1 298 5 view .LVU12
  49               	.LVL2:
  50               	.LBB23:
  51               	.LBI23:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
  52               		.loc 2 255 1 view .LVU13
  53               	.LBB24:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  54               		.loc 2 257 2 view .LVU14
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  55               		.loc 2 261 2 view .LVU15
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
  56               		.loc 2 262 2 view .LVU16
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  57               		.loc 2 263 2 view .LVU17
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
  58               		.loc 2 273 3 view .LVU18
  59               		.loc 2 276 2 view .LVU19
  60 0010 9AEB      		ldi r25,lo8(-70)
  61 0012 9A95      	1:	dec r25
  62 0014 01F4      		brne 1b
  63 0016 00C0      		rjmp .
  64               	.LVL3:
  65               	/* epilogue start */
  66               		.loc 2 276 2 is_stmt 0 view .LVU20
  67               	.LBE24:
  68               	.LBE23:
 299:../../tmk_core/protocol/adb.c **** }
  69               		.loc 1 299 1 view .LVU21
  70 0018 0895      		ret
  71               		.cfi_endproc
  72               	.LFE18:
  74               		.section	.text.place_bit1,"ax",@progbits
  76               	place_bit1:
  77               	.LFB19:
 300:../../tmk_core/protocol/adb.c **** 
 301:../../tmk_core/protocol/adb.c **** static inline void place_bit1(void)
 302:../../tmk_core/protocol/adb.c **** {
  78               		.loc 1 302 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 303:../../tmk_core/protocol/adb.c ****     data_lo();
  84               		.loc 1 303 5 view .LVU23
  85 0000 509A      		sbi 0xa,0
 304:../../tmk_core/protocol/adb.c ****     _delay_us(35);
  86               		.loc 1 304 5 view .LVU24
  87               	.LVL4:
  88               	.LBB25:
  89               	.LBI25:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
  90               		.loc 2 255 1 view .LVU25
  91               	.LBB26:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  92               		.loc 2 257 2 view .LVU26
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  93               		.loc 2 261 2 view .LVU27
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
  94               		.loc 2 262 2 view .LVU28
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  95               		.loc 2 263 2 view .LVU29
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
  96               		.loc 2 273 3 view .LVU30
  97               		.loc 2 276 2 view .LVU31
  98 0002 8AEB      		ldi r24,lo8(-70)
  99 0004 8A95      	1:	dec r24
 100 0006 01F4      		brne 1b
 101 0008 00C0      		rjmp .
 102               	.LVL5:
 103               		.loc 2 276 2 is_stmt 0 view .LVU32
 104               	.LBE26:
 105               	.LBE25:
 305:../../tmk_core/protocol/adb.c ****     data_hi();
 106               		.loc 1 305 5 is_stmt 1 view .LVU33
 107 000a 5098      		cbi 0xa,0
 306:../../tmk_core/protocol/adb.c ****     _delay_us(65);
 108               		.loc 1 306 5 view .LVU34
 109               	.LVL6:
 110               	.LBB27:
 111               	.LBI27:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 112               		.loc 2 255 1 view .LVU35
 113               	.LBB28:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 114               		.loc 2 257 2 view .LVU36
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 115               		.loc 2 261 2 view .LVU37
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 116               		.loc 2 262 2 view .LVU38
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 117               		.loc 2 263 2 view .LVU39
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 118               		.loc 2 273 3 view .LVU40
 119               		.loc 2 276 2 view .LVU41
 120 000c 83E0      		ldi r24,lo8(259)
 121 000e 91E0      		ldi r25,hi8(259)
 122 0010 0197      	1:	sbiw r24,1
 123 0012 01F4      		brne 1b
 124 0014 00C0      		rjmp .
 125 0016 0000      		nop
 126               	.LVL7:
 127               	/* epilogue start */
 128               		.loc 2 276 2 is_stmt 0 view .LVU42
 129               	.LBE28:
 130               	.LBE27:
 307:../../tmk_core/protocol/adb.c **** }
 131               		.loc 1 307 1 view .LVU43
 132 0018 0895      		ret
 133               		.cfi_endproc
 134               	.LFE19:
 136               		.section	.text.send_byte,"ax",@progbits
 138               	send_byte:
 139               	.LVL8:
 140               	.LFB20:
 308:../../tmk_core/protocol/adb.c **** 
 309:../../tmk_core/protocol/adb.c **** static inline void send_byte(uint8_t data)
 310:../../tmk_core/protocol/adb.c **** {
 141               		.loc 1 310 1 is_stmt 1 view -0
 142               		.cfi_startproc
 143               		.loc 1 310 1 is_stmt 0 view .LVU45
 144 0000 EF92      		push r14
 145               	.LCFI0:
 146               		.cfi_def_cfa_offset 3
 147               		.cfi_offset 14, -2
 148 0002 FF92      		push r15
 149               	.LCFI1:
 150               		.cfi_def_cfa_offset 4
 151               		.cfi_offset 15, -3
 152 0004 0F93      		push r16
 153               	.LCFI2:
 154               		.cfi_def_cfa_offset 5
 155               		.cfi_offset 16, -4
 156 0006 1F93      		push r17
 157               	.LCFI3:
 158               		.cfi_def_cfa_offset 6
 159               		.cfi_offset 17, -5
 160 0008 CF93      		push r28
 161               	.LCFI4:
 162               		.cfi_def_cfa_offset 7
 163               		.cfi_offset 28, -6
 164 000a DF93      		push r29
 165               	.LCFI5:
 166               		.cfi_def_cfa_offset 8
 167               		.cfi_offset 29, -7
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 6 */
 171               	.L__stack_usage = 6
 311:../../tmk_core/protocol/adb.c ****     for (int i = 0; i < 8; i++) {
 172               		.loc 1 311 5 is_stmt 1 view .LVU46
 173               	.LBB29:
 174               		.loc 1 311 10 view .LVU47
 175               	.LVL9:
 176               		.loc 1 311 14 is_stmt 0 view .LVU48
 177 000c D0E0      		ldi r29,0
 178 000e C0E0      		ldi r28,0
 312:../../tmk_core/protocol/adb.c ****         if (data&(0x80>>i))
 179               		.loc 1 312 23 view .LVU49
 180 0010 90E8      		ldi r25,lo8(-128)
 181 0012 E92E      		mov r14,r25
 182 0014 F12C      		mov r15,__zero_reg__
 183               		.loc 1 312 17 view .LVU50
 184 0016 082F      		mov r16,r24
 185 0018 10E0      		ldi r17,0
 186               	.LVL10:
 187               	.L6:
 188               		.loc 1 312 9 is_stmt 1 view .LVU51
 189               		.loc 1 312 23 is_stmt 0 view .LVU52
 190 001a C701      		movw r24,r14
 191 001c 0C2E      		mov r0,r28
 192 001e 00C0      		rjmp 2f
 193               		1:
 194 0020 9595      		asr r25
 195 0022 8795      		ror r24
 196               		2:
 197 0024 0A94      		dec r0
 198 0026 02F4      		brpl 1b
 199               		.loc 1 312 17 view .LVU53
 200 0028 8023      		and r24,r16
 201 002a 9123      		and r25,r17
 202               		.loc 1 312 12 view .LVU54
 203 002c 892B      		or r24,r25
 204 002e 01F0      		breq .L4
 313:../../tmk_core/protocol/adb.c ****             place_bit1();
 205               		.loc 1 313 13 is_stmt 1 view .LVU55
 206 0030 0E94 0000 		call place_bit1
 207               	.LVL11:
 208               	.L5:
 311:../../tmk_core/protocol/adb.c ****     for (int i = 0; i < 8; i++) {
 209               		.loc 1 311 29 is_stmt 0 discriminator 2 view .LVU56
 210 0034 2196      		adiw r28,1
 211               	.LVL12:
 311:../../tmk_core/protocol/adb.c ****     for (int i = 0; i < 8; i++) {
 212               		.loc 1 311 5 discriminator 2 view .LVU57
 213 0036 C830      		cpi r28,8
 214 0038 D105      		cpc r29,__zero_reg__
 215 003a 01F4      		brne .L6
 216               	/* epilogue start */
 217               	.LBE29:
 314:../../tmk_core/protocol/adb.c ****         else
 315:../../tmk_core/protocol/adb.c ****             place_bit0();
 316:../../tmk_core/protocol/adb.c ****     }
 317:../../tmk_core/protocol/adb.c **** }
 218               		.loc 1 317 1 view .LVU58
 219 003c DF91      		pop r29
 220 003e CF91      		pop r28
 221               	.LVL13:
 222               		.loc 1 317 1 view .LVU59
 223 0040 1F91      		pop r17
 224 0042 0F91      		pop r16
 225               	.LVL14:
 226               		.loc 1 317 1 view .LVU60
 227 0044 FF90      		pop r15
 228 0046 EF90      		pop r14
 229 0048 0895      		ret
 230               	.LVL15:
 231               	.L4:
 232               	.LBB30:
 315:../../tmk_core/protocol/adb.c ****     }
 233               		.loc 1 315 13 is_stmt 1 view .LVU61
 234 004a 0E94 0000 		call place_bit0
 235               	.LVL16:
 236 004e 00C0      		rjmp .L5
 237               	.LBE30:
 238               		.cfi_endproc
 239               	.LFE20:
 241               		.section	.text.attention,"ax",@progbits
 243               	attention:
 244               	.LFB17:
 287:../../tmk_core/protocol/adb.c ****     data_lo();
 245               		.loc 1 287 1 view -0
 246               		.cfi_startproc
 247               	/* prologue: function */
 248               	/* frame size = 0 */
 249               	/* stack size = 0 */
 250               	.L__stack_usage = 0
 288:../../tmk_core/protocol/adb.c ****     _delay_us(800-35); // bit1 holds lo for 35 more
 251               		.loc 1 288 5 view .LVU63
 252 0000 509A      		sbi 0xa,0
 289:../../tmk_core/protocol/adb.c ****     place_bit1();
 253               		.loc 1 289 5 view .LVU64
 254               	.LVL17:
 255               	.LBB31:
 256               	.LBI31:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 257               		.loc 2 255 1 view .LVU65
 258               	.LBB32:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259               		.loc 2 257 2 view .LVU66
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 260               		.loc 2 261 2 view .LVU67
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 261               		.loc 2 262 2 view .LVU68
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 262               		.loc 2 263 2 view .LVU69
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 263               		.loc 2 273 3 view .LVU70
 264               		.loc 2 276 2 view .LVU71
 265 0002 83EF      		ldi r24,lo8(3059)
 266 0004 9BE0      		ldi r25,hi8(3059)
 267 0006 0197      	1:	sbiw r24,1
 268 0008 01F4      		brne 1b
 269 000a 00C0      		rjmp .
 270 000c 0000      		nop
 271               	.LVL18:
 272               		.loc 2 276 2 is_stmt 0 view .LVU72
 273               	.LBE32:
 274               	.LBE31:
 290:../../tmk_core/protocol/adb.c **** }
 275               		.loc 1 290 5 is_stmt 1 view .LVU73
 276 000e 0C94 0000 		jmp place_bit1
 277               	.LVL19:
 278               		.cfi_endproc
 279               	.LFE17:
 281               		.section	.text.wait_data_lo,"ax",@progbits
 283               	wait_data_lo:
 284               	.LVL20:
 285               	.LFB21:
 318:../../tmk_core/protocol/adb.c **** 
 319:../../tmk_core/protocol/adb.c **** // These are carefully coded to take 6 cycles of overhead.
 320:../../tmk_core/protocol/adb.c **** // inline asm approach became too convoluted
 321:../../tmk_core/protocol/adb.c **** static inline uint16_t wait_data_lo(uint16_t us)
 322:../../tmk_core/protocol/adb.c **** {
 286               		.loc 1 322 1 view -0
 287               		.cfi_startproc
 288               	/* prologue: function */
 289               	/* frame size = 0 */
 290               	/* stack size = 0 */
 291               	.L__stack_usage = 0
 292               	.L11:
 323:../../tmk_core/protocol/adb.c ****     do {
 293               		.loc 1 323 5 view .LVU75
 324:../../tmk_core/protocol/adb.c ****         if ( !data_in() )
 294               		.loc 1 324 9 view .LVU76
 295               		.loc 1 324 12 is_stmt 0 view .LVU77
 296 0000 489B      		sbis 0x9,0
 297 0002 00C0      		rjmp .L9
 325:../../tmk_core/protocol/adb.c ****             break;
 326:../../tmk_core/protocol/adb.c ****         _delay_us(1 - (6 * 1000000.0 / F_CPU));
 298               		.loc 1 326 9 is_stmt 1 view .LVU78
 299               	.LVL21:
 300               	.LBB33:
 301               	.LBI33:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 302               		.loc 2 255 1 view .LVU79
 303               	.LBB34:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 304               		.loc 2 257 2 view .LVU80
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 305               		.loc 2 261 2 view .LVU81
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 306               		.loc 2 262 2 view .LVU82
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 307               		.loc 2 263 2 view .LVU83
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 308               		.loc 2 273 3 view .LVU84
 309               		.loc 2 276 2 view .LVU85
 310 0004 23E0      		ldi r18,lo8(3)
 311 0006 2A95      	1:	dec r18
 312 0008 01F4      		brne 1b
 313 000a 0000      		nop
 314               	.LVL22:
 315               		.loc 2 276 2 is_stmt 0 view .LVU86
 316               	.LBE34:
 317               	.LBE33:
 327:../../tmk_core/protocol/adb.c ****     }
 328:../../tmk_core/protocol/adb.c ****     while ( --us );
 318               		.loc 1 328 5 view .LVU87
 319 000c 0197      		sbiw r24,1
 320               	.LVL23:
 321               		.loc 1 328 5 view .LVU88
 322 000e 01F4      		brne .L11
 323               	.L9:
 324               	/* epilogue start */
 329:../../tmk_core/protocol/adb.c ****     return us;
 330:../../tmk_core/protocol/adb.c **** }
 325               		.loc 1 330 1 view .LVU89
 326 0010 0895      		ret
 327               		.cfi_endproc
 328               	.LFE21:
 330               		.section	.text.wait_data_hi,"ax",@progbits
 332               	wait_data_hi:
 333               	.LVL24:
 334               	.LFB22:
 331:../../tmk_core/protocol/adb.c **** 
 332:../../tmk_core/protocol/adb.c **** static inline uint16_t wait_data_hi(uint16_t us)
 333:../../tmk_core/protocol/adb.c **** {
 335               		.loc 1 333 1 is_stmt 1 view -0
 336               		.cfi_startproc
 337               	/* prologue: function */
 338               	/* frame size = 0 */
 339               	/* stack size = 0 */
 340               	.L__stack_usage = 0
 341               	.L18:
 334:../../tmk_core/protocol/adb.c ****     do {
 342               		.loc 1 334 5 view .LVU91
 335:../../tmk_core/protocol/adb.c ****         if ( data_in() )
 343               		.loc 1 335 9 view .LVU92
 344               		.loc 1 335 12 is_stmt 0 view .LVU93
 345 0000 4899      		sbic 0x9,0
 346 0002 00C0      		rjmp .L16
 336:../../tmk_core/protocol/adb.c ****             break;
 337:../../tmk_core/protocol/adb.c ****         _delay_us(1 - (6 * 1000000.0 / F_CPU));
 347               		.loc 1 337 9 is_stmt 1 view .LVU94
 348               	.LVL25:
 349               	.LBB35:
 350               	.LBI35:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 351               		.loc 2 255 1 view .LVU95
 352               	.LBB36:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 353               		.loc 2 257 2 view .LVU96
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 354               		.loc 2 261 2 view .LVU97
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 355               		.loc 2 262 2 view .LVU98
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 356               		.loc 2 263 2 view .LVU99
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 357               		.loc 2 273 3 view .LVU100
 358               		.loc 2 276 2 view .LVU101
 359 0004 23E0      		ldi r18,lo8(3)
 360 0006 2A95      	1:	dec r18
 361 0008 01F4      		brne 1b
 362 000a 0000      		nop
 363               	.LVL26:
 364               		.loc 2 276 2 is_stmt 0 view .LVU102
 365               	.LBE36:
 366               	.LBE35:
 338:../../tmk_core/protocol/adb.c ****     }
 339:../../tmk_core/protocol/adb.c ****     while ( --us );
 367               		.loc 1 339 5 view .LVU103
 368 000c 0197      		sbiw r24,1
 369               	.LVL27:
 370               		.loc 1 339 5 view .LVU104
 371 000e 01F4      		brne .L18
 372               	.L16:
 373               	/* epilogue start */
 340:../../tmk_core/protocol/adb.c ****     return us;
 341:../../tmk_core/protocol/adb.c **** }
 374               		.loc 1 341 1 view .LVU105
 375 0010 0895      		ret
 376               		.cfi_endproc
 377               	.LFE22:
 379               		.section	.text.adb_host_init,"ax",@progbits
 380               	.global	adb_host_init
 382               	adb_host_init:
 383               	.LFB7:
  67:../../tmk_core/protocol/adb.c ****     ADB_PORT &= ~(1<<ADB_DATA_BIT);
 384               		.loc 1 67 1 is_stmt 1 view -0
 385               		.cfi_startproc
 386               	/* prologue: function */
 387               	/* frame size = 0 */
 388               	/* stack size = 0 */
 389               	.L__stack_usage = 0
  68:../../tmk_core/protocol/adb.c ****     data_hi();
 390               		.loc 1 68 5 view .LVU107
  68:../../tmk_core/protocol/adb.c ****     data_hi();
 391               		.loc 1 68 14 is_stmt 0 view .LVU108
 392 0000 5898      		cbi 0xb,0
  69:../../tmk_core/protocol/adb.c **** #ifdef ADB_PSW_BIT
 393               		.loc 1 69 5 is_stmt 1 view .LVU109
 394 0002 5098      		cbi 0xa,0
 395               	/* epilogue start */
  73:../../tmk_core/protocol/adb.c **** 
 396               		.loc 1 73 1 is_stmt 0 view .LVU110
 397 0004 0895      		ret
 398               		.cfi_endproc
 399               	.LFE7:
 401               		.section	.text.adb_mouse_init,"ax",@progbits
 402               		.weak	adb_mouse_init
 404               	adb_mouse_init:
 405               	.LFB24:
 406               		.cfi_startproc
 407               	/* prologue: function */
 408               	/* frame size = 0 */
 409               	/* stack size = 0 */
 410               	.L__stack_usage = 0
 411               	/* epilogue start */
 412 0000 0895      		ret
 413               		.cfi_endproc
 414               	.LFE24:
 416               		.section	.text.adb_mouse_task,"ax",@progbits
 417               		.weak	adb_mouse_task
 419               	adb_mouse_task:
 420               	.LFB10:
 102:../../tmk_core/protocol/adb.c ****     return;
 421               		.loc 1 102 27 is_stmt 1 view -0
 422               		.cfi_startproc
 423               	/* prologue: function */
 424               	/* frame size = 0 */
 425               	/* stack size = 0 */
 426               	.L__stack_usage = 0
 103:../../tmk_core/protocol/adb.c **** }
 427               		.loc 1 103 5 view .LVU112
 428               	/* epilogue start */
 104:../../tmk_core/protocol/adb.c **** #endif
 429               		.loc 1 104 1 is_stmt 0 view .LVU113
 430 0000 0895      		ret
 431               		.cfi_endproc
 432               	.LFE10:
 434               		.section	.text.adb_host_talk_buf,"ax",@progbits
 435               	.global	adb_host_talk_buf
 437               	adb_host_talk_buf:
 438               	.LVL28:
 439               	.LFB11:
 109:../../tmk_core/protocol/adb.c ****     for (int8_t i =0; i < len; i++) buf[i] = 0;
 440               		.loc 1 109 1 is_stmt 1 view -0
 441               		.cfi_startproc
 109:../../tmk_core/protocol/adb.c ****     for (int8_t i =0; i < len; i++) buf[i] = 0;
 442               		.loc 1 109 1 is_stmt 0 view .LVU115
 443 0000 DF92      		push r13
 444               	.LCFI6:
 445               		.cfi_def_cfa_offset 3
 446               		.cfi_offset 13, -2
 447 0002 EF92      		push r14
 448               	.LCFI7:
 449               		.cfi_def_cfa_offset 4
 450               		.cfi_offset 14, -3
 451 0004 FF92      		push r15
 452               	.LCFI8:
 453               		.cfi_def_cfa_offset 5
 454               		.cfi_offset 15, -4
 455 0006 0F93      		push r16
 456               	.LCFI9:
 457               		.cfi_def_cfa_offset 6
 458               		.cfi_offset 16, -5
 459 0008 1F93      		push r17
 460               	.LCFI10:
 461               		.cfi_def_cfa_offset 7
 462               		.cfi_offset 17, -6
 463 000a CF93      		push r28
 464               	.LCFI11:
 465               		.cfi_def_cfa_offset 8
 466               		.cfi_offset 28, -7
 467 000c DF93      		push r29
 468               	.LCFI12:
 469               		.cfi_def_cfa_offset 9
 470               		.cfi_offset 29, -8
 471               	/* prologue: function */
 472               	/* frame size = 0 */
 473               	/* stack size = 7 */
 474               	.L__stack_usage = 7
 475 000e C82F      		mov r28,r24
 476 0010 D62F      		mov r29,r22
 477 0012 7A01      		movw r14,r20
 478 0014 D22E      		mov r13,r18
 110:../../tmk_core/protocol/adb.c **** 
 479               		.loc 1 110 5 is_stmt 1 view .LVU116
 480               	.LBB37:
 110:../../tmk_core/protocol/adb.c **** 
 481               		.loc 1 110 10 view .LVU117
 482               	.LVL29:
 110:../../tmk_core/protocol/adb.c **** 
 483               		.loc 1 110 17 is_stmt 0 view .LVU118
 484 0016 80E0      		ldi r24,0
 485               	.LVL30:
 110:../../tmk_core/protocol/adb.c **** 
 486               		.loc 1 110 25 view .LVU119
 487 0018 422F      		mov r20,r18
 488               	.LVL31:
 110:../../tmk_core/protocol/adb.c **** 
 489               		.loc 1 110 25 view .LVU120
 490 001a 50E0      		ldi r21,0
 491               	.LVL32:
 492               	.L24:
 110:../../tmk_core/protocol/adb.c **** 
 493               		.loc 1 110 25 discriminator 1 view .LVU121
 494 001c 282F      		mov r18,r24
 495 001e 082E      		mov __tmp_reg__,r24
 496 0020 000C      		lsl r0
 497 0022 330B      		sbc r19,r19
 110:../../tmk_core/protocol/adb.c **** 
 498               		.loc 1 110 5 discriminator 1 view .LVU122
 499 0024 2417      		cp r18,r20
 500 0026 3507      		cpc r19,r21
 501 0028 04F0      		brlt .L25
 502               	.LBE37:
 112:../../tmk_core/protocol/adb.c ****     attention();
 503               		.loc 1 112 5 is_stmt 1 view .LVU123
 504               	/* #APP */
 505               	 ;  112 "../../tmk_core/protocol/adb.c" 1
 506 002a F894      		cli
 507               	 ;  0 "" 2
 113:../../tmk_core/protocol/adb.c ****     send_byte((addr<<4) | ADB_CMD_TALK | reg);
 508               		.loc 1 113 5 view .LVU124
 509               	/* #NOAPP */
 510 002c 0E94 0000 		call attention
 511               	.LVL33:
 114:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 512               		.loc 1 114 5 view .LVU125
 114:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 513               		.loc 1 114 20 is_stmt 0 view .LVU126
 514 0030 8C2F      		mov r24,r28
 515 0032 8295      		swap r24
 516 0034 807F      		andi r24,lo8(-16)
 114:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 517               		.loc 1 114 40 view .LVU127
 518 0036 8D2B      		or r24,r29
 114:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 519               		.loc 1 114 5 view .LVU128
 520 0038 8C60      		ori r24,lo8(12)
 521 003a 0E94 0000 		call send_byte
 522               	.LVL34:
 115:../../tmk_core/protocol/adb.c ****     // TODO: Service Request(Srq):
 523               		.loc 1 115 5 is_stmt 1 view .LVU129
 524 003e 0E94 0000 		call place_bit0
 525               	.LVL35:
 160:../../tmk_core/protocol/adb.c ****         xprintf("R");
 526               		.loc 1 160 5 view .LVU130
 160:../../tmk_core/protocol/adb.c ****         xprintf("R");
 527               		.loc 1 160 10 is_stmt 0 view .LVU131
 528 0042 84EF      		ldi r24,lo8(-12)
 529 0044 91E0      		ldi r25,lo8(1)
 530 0046 0E94 0000 		call wait_data_hi
 531               	.LVL36:
 160:../../tmk_core/protocol/adb.c ****         xprintf("R");
 532               		.loc 1 160 8 view .LVU132
 533 004a 892B      		or r24,r25
 534 004c 01F4      		brne .L26
 161:../../tmk_core/protocol/adb.c ****         sei();
 535               		.loc 1 161 9 is_stmt 1 view .LVU133
 536               	.LBB38:
 161:../../tmk_core/protocol/adb.c ****         sei();
 537               		.loc 1 161 9 view .LVU134
 161:../../tmk_core/protocol/adb.c ****         sei();
 538               		.loc 1 161 9 view .LVU135
 539               	.LBE38:
 540 004e 80E0      		ldi r24,lo8(__c.1915)
 541 0050 90E0      		ldi r25,hi8(__c.1915)
 542               	.LVL37:
 543               	.L45:
 177:../../tmk_core/protocol/adb.c ****         sei();
 544               		.loc 1 177 9 is_stmt 0 view .LVU136
 545 0052 9F93      		push r25
 546               	.LCFI13:
 547               		.cfi_def_cfa_offset 10
 548 0054 8F93      		push r24
 549               	.LCFI14:
 550               		.cfi_def_cfa_offset 11
 551 0056 0E94 0000 		call __xprintf
 552               	.LVL38:
 178:../../tmk_core/protocol/adb.c ****         return 0;
 553               		.loc 1 178 9 is_stmt 1 view .LVU137
 554               	/* #APP */
 555               	 ;  178 "../../tmk_core/protocol/adb.c" 1
 556 005a 7894      		sei
 557               	 ;  0 "" 2
 179:../../tmk_core/protocol/adb.c ****     }
 558               		.loc 1 179 9 view .LVU138
 179:../../tmk_core/protocol/adb.c ****     }
 559               		.loc 1 179 16 is_stmt 0 view .LVU139
 560               	/* #NOAPP */
 561 005c 0F90      		pop __tmp_reg__
 562 005e 0F90      		pop __tmp_reg__
 563               	.LCFI15:
 564               		.cfi_def_cfa_offset 9
 565 0060 00C0      		rjmp .L46
 566               	.LVL39:
 567               	.L25:
 568               	.LBB39:
 110:../../tmk_core/protocol/adb.c **** 
 569               		.loc 1 110 37 is_stmt 1 discriminator 3 view .LVU140
 110:../../tmk_core/protocol/adb.c **** 
 570               		.loc 1 110 44 is_stmt 0 discriminator 3 view .LVU141
 571 0062 2E0D      		add r18,r14
 572 0064 3F1D      		adc r19,r15
 573 0066 F901      		movw r30,r18
 574 0068 1082      		st Z,__zero_reg__
 575 006a 8F5F      		subi r24,lo8(-(1))
 576               	.LVL40:
 110:../../tmk_core/protocol/adb.c **** 
 577               		.loc 1 110 44 discriminator 3 view .LVU142
 578 006c 00C0      		rjmp .L24
 579               	.LVL41:
 580               	.L26:
 110:../../tmk_core/protocol/adb.c **** 
 581               		.loc 1 110 44 discriminator 3 view .LVU143
 582               	.LBE39:
 165:../../tmk_core/protocol/adb.c ****         sei();
 583               		.loc 1 165 5 is_stmt 1 view .LVU144
 165:../../tmk_core/protocol/adb.c ****         sei();
 584               		.loc 1 165 10 is_stmt 0 view .LVU145
 585 006e 84EF      		ldi r24,lo8(-12)
 586 0070 91E0      		ldi r25,lo8(1)
 587 0072 0E94 0000 		call wait_data_lo
 588               	.LVL42:
 165:../../tmk_core/protocol/adb.c ****         sei();
 589               		.loc 1 165 8 view .LVU146
 590 0076 892B      		or r24,r25
 591 0078 01F4      		brne .L28
 166:../../tmk_core/protocol/adb.c ****         return 0;               // No data from device(not error);
 592               		.loc 1 166 9 is_stmt 1 view .LVU147
 593               	/* #APP */
 594               	 ;  166 "../../tmk_core/protocol/adb.c" 1
 595 007a 7894      		sei
 596               	 ;  0 "" 2
 167:../../tmk_core/protocol/adb.c ****     }
 597               		.loc 1 167 9 view .LVU148
 598               	.LVL43:
 599               	/* #NOAPP */
 600               	.L46:
 179:../../tmk_core/protocol/adb.c ****     }
 601               		.loc 1 179 16 is_stmt 0 view .LVU149
 602 007c 80E0      		ldi r24,0
 603               	.LVL44:
 604               	.L23:
 605               	/* epilogue start */
 213:../../tmk_core/protocol/adb.c **** 
 606               		.loc 1 213 1 view .LVU150
 607 007e DF91      		pop r29
 608 0080 CF91      		pop r28
 609 0082 1F91      		pop r17
 610 0084 0F91      		pop r16
 611 0086 FF90      		pop r15
 612 0088 EF90      		pop r14
 613               	.LVL45:
 213:../../tmk_core/protocol/adb.c **** 
 614               		.loc 1 213 1 view .LVU151
 615 008a DF90      		pop r13
 616               	.LVL46:
 213:../../tmk_core/protocol/adb.c **** 
 617               		.loc 1 213 1 view .LVU152
 618 008c 0895      		ret
 619               	.LVL47:
 620               	.L28:
 171:../../tmk_core/protocol/adb.c ****         xprintf("S");
 621               		.loc 1 171 5 is_stmt 1 view .LVU153
 171:../../tmk_core/protocol/adb.c ****         xprintf("S");
 622               		.loc 1 171 10 is_stmt 0 view .LVU154
 623 008e 88E2      		ldi r24,lo8(40)
 624 0090 90E0      		ldi r25,0
 625 0092 0E94 0000 		call wait_data_hi
 626               	.LVL48:
 171:../../tmk_core/protocol/adb.c ****         xprintf("S");
 627               		.loc 1 171 8 view .LVU155
 628 0096 892B      		or r24,r25
 629 0098 01F4      		brne .L29
 172:../../tmk_core/protocol/adb.c ****         sei();
 630               		.loc 1 172 9 is_stmt 1 view .LVU156
 631               	.LBB40:
 172:../../tmk_core/protocol/adb.c ****         sei();
 632               		.loc 1 172 9 view .LVU157
 172:../../tmk_core/protocol/adb.c ****         sei();
 633               		.loc 1 172 9 view .LVU158
 634               	.LBE40:
 635 009a 80E0      		ldi r24,lo8(__c.1917)
 636 009c 90E0      		ldi r25,hi8(__c.1917)
 637 009e 00C0      		rjmp .L45
 638               	.L29:
 176:../../tmk_core/protocol/adb.c ****         xprintf("s");
 639               		.loc 1 176 5 view .LVU159
 176:../../tmk_core/protocol/adb.c ****         xprintf("s");
 640               		.loc 1 176 10 is_stmt 0 view .LVU160
 641 00a0 84E6      		ldi r24,lo8(100)
 642 00a2 90E0      		ldi r25,0
 643 00a4 0E94 0000 		call wait_data_lo
 644               	.LVL49:
 182:../../tmk_core/protocol/adb.c ****     do {
 645               		.loc 1 182 13 view .LVU161
 646 00a8 C0E0      		ldi r28,0
 647               	.LVL50:
 176:../../tmk_core/protocol/adb.c ****         xprintf("s");
 648               		.loc 1 176 8 view .LVU162
 649 00aa 892B      		or r24,r25
 650 00ac 01F4      		brne .L30
 177:../../tmk_core/protocol/adb.c ****         sei();
 651               		.loc 1 177 9 is_stmt 1 view .LVU163
 652               	.LBB41:
 177:../../tmk_core/protocol/adb.c ****         sei();
 653               		.loc 1 177 9 view .LVU164
 177:../../tmk_core/protocol/adb.c ****         sei();
 654               		.loc 1 177 9 view .LVU165
 655               	.LBE41:
 656 00ae 80E0      		ldi r24,lo8(__c.1919)
 657 00b0 90E0      		ldi r25,hi8(__c.1919)
 658 00b2 00C0      		rjmp .L45
 659               	.LVL51:
 660               	.L37:
 177:../../tmk_core/protocol/adb.c ****         sei();
 661               		.loc 1 177 9 is_stmt 0 view .LVU166
 662 00b4 C82F      		mov r28,r24
 663               	.LVL52:
 664               	.L30:
 183:../../tmk_core/protocol/adb.c ****         //
 665               		.loc 1 183 5 is_stmt 1 view .LVU167
 666               	.LBB42:
 193:../../tmk_core/protocol/adb.c ****         if (!lo)
 667               		.loc 1 193 9 view .LVU168
 193:../../tmk_core/protocol/adb.c ****         if (!lo)
 668               		.loc 1 193 32 is_stmt 0 view .LVU169
 669 00b6 82E8      		ldi r24,lo8(-126)
 670 00b8 90E0      		ldi r25,0
 671 00ba 0E94 0000 		call wait_data_hi
 672               	.LVL53:
 673 00be 8C01      		movw r16,r24
 674               	.LVL54:
 194:../../tmk_core/protocol/adb.c ****             goto error; // no more bit or after stop bit
 675               		.loc 1 194 9 is_stmt 1 view .LVU170
 676 00c0 DC2F      		mov r29,r28
 677 00c2 D695      		lsr r29
 678 00c4 D695      		lsr r29
 679 00c6 D695      		lsr r29
 194:../../tmk_core/protocol/adb.c ****             goto error; // no more bit or after stop bit
 680               		.loc 1 194 12 is_stmt 0 view .LVU171
 681 00c8 8823      		tst r24
 682 00ca 01F0      		breq .L31
 197:../../tmk_core/protocol/adb.c ****         if (!hi)
 683               		.loc 1 197 9 is_stmt 1 view .LVU172
 684 00cc 1127      		clr r17
 685               	.LVL55:
 197:../../tmk_core/protocol/adb.c ****         if (!hi)
 686               		.loc 1 197 32 is_stmt 0 view .LVU173
 687 00ce C801      		movw r24,r16
 688               	.LVL56:
 197:../../tmk_core/protocol/adb.c ****         if (!hi)
 689               		.loc 1 197 32 view .LVU174
 690 00d0 0E94 0000 		call wait_data_lo
 691               	.LVL57:
 198:../../tmk_core/protocol/adb.c ****             goto error; // stop bit extedned by Srq?
 692               		.loc 1 198 9 is_stmt 1 view .LVU175
 198:../../tmk_core/protocol/adb.c ****             goto error; // stop bit extedned by Srq?
 693               		.loc 1 198 12 is_stmt 0 view .LVU176
 694 00d4 8823      		tst r24
 695 00d6 01F0      		breq .L31
 201:../../tmk_core/protocol/adb.c **** 
 696               		.loc 1 201 9 is_stmt 1 view .LVU177
 201:../../tmk_core/protocol/adb.c **** 
 697               		.loc 1 201 12 is_stmt 0 view .LVU178
 698 00d8 DD15      		cp r29,r13
 699 00da 00F4      		brsh .L33
 203:../../tmk_core/protocol/adb.c ****         if ((130 - lo) < (lo - hi)) {
 700               		.loc 1 203 9 is_stmt 1 view .LVU179
 203:../../tmk_core/protocol/adb.c ****         if ((130 - lo) < (lo - hi)) {
 701               		.loc 1 203 18 is_stmt 0 view .LVU180
 702 00dc F701      		movw r30,r14
 703 00de ED0F      		add r30,r29
 704 00e0 F11D      		adc r31,__zero_reg__
 705 00e2 9081      		ld r25,Z
 706 00e4 990F      		lsl r25
 204:../../tmk_core/protocol/adb.c ****             buf[n/8] |= 1;
 707               		.loc 1 204 9 is_stmt 1 view .LVU181
 204:../../tmk_core/protocol/adb.c ****             buf[n/8] |= 1;
 708               		.loc 1 204 18 is_stmt 0 view .LVU182
 709 00e6 22E8      		ldi r18,lo8(-126)
 710 00e8 30E0      		ldi r19,0
 711 00ea 201B      		sub r18,r16
 712 00ec 310B      		sbc r19,r17
 204:../../tmk_core/protocol/adb.c ****             buf[n/8] |= 1;
 713               		.loc 1 204 30 view .LVU183
 714 00ee 081B      		sub r16,r24
 715 00f0 1109      		sbc r17,__zero_reg__
 204:../../tmk_core/protocol/adb.c ****             buf[n/8] |= 1;
 716               		.loc 1 204 12 view .LVU184
 717 00f2 2017      		cp r18,r16
 718 00f4 3107      		cpc r19,r17
 719 00f6 04F0      		brlt .L34
 720               	.L44:
 205:../../tmk_core/protocol/adb.c ****         }
 721               		.loc 1 205 22 view .LVU185
 722 00f8 9083      		st Z,r25
 723               	.L33:
 205:../../tmk_core/protocol/adb.c ****         }
 724               		.loc 1 205 22 view .LVU186
 725               	.LBE42:
 208:../../tmk_core/protocol/adb.c **** 
 726               		.loc 1 208 5 view .LVU187
 727 00fa 81E0      		ldi r24,lo8(1)
 728               	.LVL58:
 208:../../tmk_core/protocol/adb.c **** 
 729               		.loc 1 208 5 view .LVU188
 730 00fc 8C0F      		add r24,r28
 731               	.LVL59:
 208:../../tmk_core/protocol/adb.c **** 
 732               		.loc 1 208 5 view .LVU189
 733 00fe CF3F      		cpi r28,lo8(-1)
 734 0100 01F4      		brne .L37
 210:../../tmk_core/protocol/adb.c ****     sei();
 735               		.loc 1 210 1 view .LVU190
 736 0102 C0E0      		ldi r28,0
 737               	.LVL60:
 738               	.L31:
 211:../../tmk_core/protocol/adb.c ****     return n/8;
 739               		.loc 1 211 5 is_stmt 1 view .LVU191
 740               	/* #APP */
 741               	 ;  211 "../../tmk_core/protocol/adb.c" 1
 742 0104 7894      		sei
 743               	 ;  0 "" 2
 212:../../tmk_core/protocol/adb.c **** }
 744               		.loc 1 212 5 view .LVU192
 212:../../tmk_core/protocol/adb.c **** }
 745               		.loc 1 212 13 is_stmt 0 view .LVU193
 746               	/* #NOAPP */
 747 0106 8C2F      		mov r24,r28
 748 0108 8695      		lsr r24
 749 010a 8695      		lsr r24
 750 010c 8695      		lsr r24
 751 010e 00C0      		rjmp .L23
 752               	.LVL61:
 753               	.L34:
 754               	.LBB43:
 205:../../tmk_core/protocol/adb.c ****         }
 755               		.loc 1 205 13 is_stmt 1 view .LVU194
 205:../../tmk_core/protocol/adb.c ****         }
 756               		.loc 1 205 22 is_stmt 0 view .LVU195
 757 0110 9160      		ori r25,lo8(1)
 758 0112 00C0      		rjmp .L44
 759               	.LBE43:
 760               		.cfi_endproc
 761               	.LFE11:
 763               		.section	.text.adb_host_talk,"ax",@progbits
 764               	.global	adb_host_talk
 766               	adb_host_talk:
 767               	.LVL62:
 768               	.LFB12:
 216:../../tmk_core/protocol/adb.c ****     uint8_t len;
 769               		.loc 1 216 1 is_stmt 1 view -0
 770               		.cfi_startproc
 216:../../tmk_core/protocol/adb.c ****     uint8_t len;
 771               		.loc 1 216 1 is_stmt 0 view .LVU197
 772 0000 CF93      		push r28
 773               	.LCFI16:
 774               		.cfi_def_cfa_offset 3
 775               		.cfi_offset 28, -2
 776 0002 DF93      		push r29
 777               	.LCFI17:
 778               		.cfi_def_cfa_offset 4
 779               		.cfi_offset 29, -3
 780 0004 CDB7      		in r28,__SP_L__
 781 0006 DEB7      		in r29,__SP_H__
 782               	.LCFI18:
 783               		.cfi_def_cfa_register 28
 784 0008 2897      		sbiw r28,8
 785               	.LCFI19:
 786               		.cfi_def_cfa_offset 12
 787 000a 0FB6      		in __tmp_reg__,__SREG__
 788 000c F894      		cli
 789 000e DEBF      		out __SP_H__,r29
 790 0010 0FBE      		out __SREG__,__tmp_reg__
 791 0012 CDBF      		out __SP_L__,r28
 792               	/* prologue: function */
 793               	/* frame size = 8 */
 794               	/* stack size = 10 */
 795               	.L__stack_usage = 10
 217:../../tmk_core/protocol/adb.c ****     uint8_t buf[8];
 796               		.loc 1 217 5 is_stmt 1 view .LVU198
 218:../../tmk_core/protocol/adb.c ****     len = adb_host_talk_buf(addr, reg, buf, 8);
 797               		.loc 1 218 5 view .LVU199
 219:../../tmk_core/protocol/adb.c ****     if (len != 2) return 0;
 798               		.loc 1 219 5 view .LVU200
 219:../../tmk_core/protocol/adb.c ****     if (len != 2) return 0;
 799               		.loc 1 219 11 is_stmt 0 view .LVU201
 800 0014 28E0      		ldi r18,lo8(8)
 801 0016 AE01      		movw r20,r28
 802 0018 4F5F      		subi r20,-1
 803 001a 5F4F      		sbci r21,-1
 804 001c 0E94 0000 		call adb_host_talk_buf
 805               	.LVL63:
 220:../../tmk_core/protocol/adb.c ****     return (buf[0]<<8 | buf[1]);
 806               		.loc 1 220 5 is_stmt 1 view .LVU202
 220:../../tmk_core/protocol/adb.c ****     return (buf[0]<<8 | buf[1]);
 807               		.loc 1 220 8 is_stmt 0 view .LVU203
 808 0020 8230      		cpi r24,lo8(2)
 809 0022 01F4      		brne .L49
 221:../../tmk_core/protocol/adb.c **** }
 810               		.loc 1 221 5 is_stmt 1 view .LVU204
 811 0024 8981      		ldd r24,Y+1
 812 0026 9A81      		ldd r25,Y+2
 813               	.LVL64:
 221:../../tmk_core/protocol/adb.c **** }
 814               		.loc 1 221 5 is_stmt 0 view .LVU205
 815 0028 9827      		eor r25,r24
 816 002a 8927      		eor r24,r25
 817 002c 9827      		eor r25,r24
 818               	.L47:
 819               	/* epilogue start */
 222:../../tmk_core/protocol/adb.c **** 
 820               		.loc 1 222 1 view .LVU206
 821 002e 2896      		adiw r28,8
 822 0030 0FB6      		in __tmp_reg__,__SREG__
 823 0032 F894      		cli
 824 0034 DEBF      		out __SP_H__,r29
 825 0036 0FBE      		out __SREG__,__tmp_reg__
 826 0038 CDBF      		out __SP_L__,r28
 827 003a DF91      		pop r29
 828 003c CF91      		pop r28
 829 003e 0895      		ret
 830               	.LVL65:
 831               	.L49:
 220:../../tmk_core/protocol/adb.c ****     return (buf[0]<<8 | buf[1]);
 832               		.loc 1 220 26 view .LVU207
 833 0040 90E0      		ldi r25,0
 834 0042 80E0      		ldi r24,0
 835               	.LVL66:
 220:../../tmk_core/protocol/adb.c ****     return (buf[0]<<8 | buf[1]);
 836               		.loc 1 220 26 view .LVU208
 837 0044 00C0      		rjmp .L47
 838               		.cfi_endproc
 839               	.LFE12:
 841               		.section	.text.adb_host_kbd_recv,"ax",@progbits
 842               	.global	adb_host_kbd_recv
 844               	adb_host_kbd_recv:
 845               	.LVL67:
 846               	.LFB8:
  91:../../tmk_core/protocol/adb.c ****     return adb_host_talk(addr, ADB_REG_0);
 847               		.loc 1 91 1 is_stmt 1 view -0
 848               		.cfi_startproc
 849               	/* prologue: function */
 850               	/* frame size = 0 */
 851               	/* stack size = 0 */
 852               	.L__stack_usage = 0
  92:../../tmk_core/protocol/adb.c **** }
 853               		.loc 1 92 5 view .LVU210
  92:../../tmk_core/protocol/adb.c **** }
 854               		.loc 1 92 12 is_stmt 0 view .LVU211
 855 0000 60E0      		ldi r22,0
 856 0002 0C94 0000 		jmp adb_host_talk
 857               	.LVL68:
  92:../../tmk_core/protocol/adb.c **** }
 858               		.loc 1 92 12 view .LVU212
 859               		.cfi_endproc
 860               	.LFE8:
 862               		.section	.text.adb_host_listen_buf,"ax",@progbits
 863               	.global	adb_host_listen_buf
 865               	adb_host_listen_buf:
 866               	.LVL69:
 867               	.LFB13:
 225:../../tmk_core/protocol/adb.c ****     cli();
 868               		.loc 1 225 1 is_stmt 1 view -0
 869               		.cfi_startproc
 225:../../tmk_core/protocol/adb.c ****     cli();
 870               		.loc 1 225 1 is_stmt 0 view .LVU214
 871 0000 FF92      		push r15
 872               	.LCFI20:
 873               		.cfi_def_cfa_offset 3
 874               		.cfi_offset 15, -2
 875 0002 0F93      		push r16
 876               	.LCFI21:
 877               		.cfi_def_cfa_offset 4
 878               		.cfi_offset 16, -3
 879 0004 1F93      		push r17
 880               	.LCFI22:
 881               		.cfi_def_cfa_offset 5
 882               		.cfi_offset 17, -4
 883 0006 CF93      		push r28
 884               	.LCFI23:
 885               		.cfi_def_cfa_offset 6
 886               		.cfi_offset 28, -5
 887 0008 DF93      		push r29
 888               	.LCFI24:
 889               		.cfi_def_cfa_offset 7
 890               		.cfi_offset 29, -6
 891               	/* prologue: function */
 892               	/* frame size = 0 */
 893               	/* stack size = 5 */
 894               	.L__stack_usage = 5
 895 000a C82F      		mov r28,r24
 896 000c F62E      		mov r15,r22
 897 000e 8A01      		movw r16,r20
 898 0010 D22F      		mov r29,r18
 226:../../tmk_core/protocol/adb.c ****     attention();
 899               		.loc 1 226 5 is_stmt 1 view .LVU215
 900               	/* #APP */
 901               	 ;  226 "../../tmk_core/protocol/adb.c" 1
 902 0012 F894      		cli
 903               	 ;  0 "" 2
 227:../../tmk_core/protocol/adb.c ****     send_byte((addr<<4) | ADB_CMD_LISTEN | reg);
 904               		.loc 1 227 5 view .LVU216
 905               	/* #NOAPP */
 906 0014 0E94 0000 		call attention
 907               	.LVL70:
 228:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 908               		.loc 1 228 5 view .LVU217
 228:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 909               		.loc 1 228 20 is_stmt 0 view .LVU218
 910 0018 8C2F      		mov r24,r28
 911 001a 8295      		swap r24
 912 001c 807F      		andi r24,lo8(-16)
 228:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 913               		.loc 1 228 42 view .LVU219
 914 001e 8F29      		or r24,r15
 228:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 915               		.loc 1 228 5 view .LVU220
 916 0020 8860      		ori r24,lo8(8)
 917 0022 0E94 0000 		call send_byte
 918               	.LVL71:
 229:../../tmk_core/protocol/adb.c ****     // TODO: Service Request
 919               		.loc 1 229 5 is_stmt 1 view .LVU221
 920 0026 0E94 0000 		call place_bit0
 921               	.LVL72:
 231:../../tmk_core/protocol/adb.c ****     place_bit1();               // Startbit(1)
 922               		.loc 1 231 5 view .LVU222
 923               	.LBB44:
 924               	.LBI44:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 925               		.loc 2 255 1 view .LVU223
 926               	.LBB45:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 927               		.loc 2 257 2 view .LVU224
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 928               		.loc 2 261 2 view .LVU225
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 929               		.loc 2 262 2 view .LVU226
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 930               		.loc 2 263 2 view .LVU227
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 931               		.loc 2 273 3 view .LVU228
 932               		.loc 2 276 2 view .LVU229
 933 002a 8FE1      		ldi r24,lo8(799)
 934 002c 93E0      		ldi r25,hi8(799)
 935 002e 0197      	1:	sbiw r24,1
 936 0030 01F4      		brne 1b
 937 0032 00C0      		rjmp .
 938 0034 0000      		nop
 939               	.LVL73:
 940               		.loc 2 276 2 is_stmt 0 view .LVU230
 941               	.LBE45:
 942               	.LBE44:
 232:../../tmk_core/protocol/adb.c ****     for (int8_t i = 0; i < len; i++) {
 943               		.loc 1 232 5 is_stmt 1 view .LVU231
 944 0036 0E94 0000 		call place_bit1
 945               	.LVL74:
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 946               		.loc 1 233 5 view .LVU232
 947               	.LBB46:
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 948               		.loc 1 233 10 view .LVU233
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 949               		.loc 1 233 17 is_stmt 0 view .LVU234
 950 003a F12C      		mov r15,__zero_reg__
 951               	.LVL75:
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 952               		.loc 1 233 26 view .LVU235
 953 003c CD2F      		mov r28,r29
 954               	.LVL76:
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 955               		.loc 1 233 26 view .LVU236
 956 003e D0E0      		ldi r29,0
 957               	.LVL77:
 958               	.L52:
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 959               		.loc 1 233 26 discriminator 1 view .LVU237
 960 0040 8F2D      		mov r24,r15
 961 0042 0F2C      		mov __tmp_reg__,r15
 962 0044 000C      		lsl r0
 963 0046 990B      		sbc r25,r25
 233:../../tmk_core/protocol/adb.c ****         send_byte(buf[i]);
 964               		.loc 1 233 5 discriminator 1 view .LVU238
 965 0048 8C17      		cp r24,r28
 966 004a 9D07      		cpc r25,r29
 967 004c 04F0      		brlt .L53
 968               	.LBE46:
 237:../../tmk_core/protocol/adb.c ****     sei();
 969               		.loc 1 237 5 is_stmt 1 view .LVU239
 970 004e 0E94 0000 		call place_bit0
 971               	.LVL78:
 238:../../tmk_core/protocol/adb.c **** }
 972               		.loc 1 238 5 view .LVU240
 973               	/* #APP */
 974               	 ;  238 "../../tmk_core/protocol/adb.c" 1
 975 0052 7894      		sei
 976               	 ;  0 "" 2
 977               	/* #NOAPP */
 978               	/* epilogue start */
 239:../../tmk_core/protocol/adb.c **** 
 979               		.loc 1 239 1 is_stmt 0 view .LVU241
 980 0054 DF91      		pop r29
 981 0056 CF91      		pop r28
 982               	.LVL79:
 239:../../tmk_core/protocol/adb.c **** 
 983               		.loc 1 239 1 view .LVU242
 984 0058 1F91      		pop r17
 985 005a 0F91      		pop r16
 986               	.LVL80:
 239:../../tmk_core/protocol/adb.c **** 
 987               		.loc 1 239 1 view .LVU243
 988 005c FF90      		pop r15
 989               	.LVL81:
 239:../../tmk_core/protocol/adb.c **** 
 990               		.loc 1 239 1 view .LVU244
 991 005e 0895      		ret
 992               	.LVL82:
 993               	.L53:
 994               	.LBB47:
 234:../../tmk_core/protocol/adb.c ****         //xprintf("%02X ", buf[i]);
 995               		.loc 1 234 9 is_stmt 1 discriminator 3 view .LVU245
 996 0060 800F      		add r24,r16
 997 0062 911F      		adc r25,r17
 998 0064 FC01      		movw r30,r24
 999 0066 8081      		ld r24,Z
 1000 0068 0E94 0000 		call send_byte
 1001               	.LVL83:
 1002 006c F394      		inc r15
 1003               	.LVL84:
 234:../../tmk_core/protocol/adb.c ****         //xprintf("%02X ", buf[i]);
 1004               		.loc 1 234 9 is_stmt 0 discriminator 3 view .LVU246
 1005 006e 00C0      		rjmp .L52
 1006               	.LBE47:
 1007               		.cfi_endproc
 1008               	.LFE13:
 1010               		.section	.text.adb_host_listen,"ax",@progbits
 1011               	.global	adb_host_listen
 1013               	adb_host_listen:
 1014               	.LVL85:
 1015               	.LFB14:
 242:../../tmk_core/protocol/adb.c ****     uint8_t buf[2] = { data_h, data_l };
 1016               		.loc 1 242 1 is_stmt 1 view -0
 1017               		.cfi_startproc
 242:../../tmk_core/protocol/adb.c ****     uint8_t buf[2] = { data_h, data_l };
 1018               		.loc 1 242 1 is_stmt 0 view .LVU248
 1019 0000 CF93      		push r28
 1020               	.LCFI25:
 1021               		.cfi_def_cfa_offset 3
 1022               		.cfi_offset 28, -2
 1023 0002 DF93      		push r29
 1024               	.LCFI26:
 1025               		.cfi_def_cfa_offset 4
 1026               		.cfi_offset 29, -3
 1027 0004 00D0      		rcall .
 1028               	.LCFI27:
 1029               		.cfi_def_cfa_offset 6
 1030 0006 CDB7      		in r28,__SP_L__
 1031 0008 DEB7      		in r29,__SP_H__
 1032               	.LCFI28:
 1033               		.cfi_def_cfa_register 28
 1034               	/* prologue: function */
 1035               	/* frame size = 2 */
 1036               	/* stack size = 4 */
 1037               	.L__stack_usage = 4
 243:../../tmk_core/protocol/adb.c ****     adb_host_listen_buf(addr, reg, buf, 2);
 1038               		.loc 1 243 5 is_stmt 1 view .LVU249
 243:../../tmk_core/protocol/adb.c ****     adb_host_listen_buf(addr, reg, buf, 2);
 1039               		.loc 1 243 13 is_stmt 0 view .LVU250
 1040 000a 4983      		std Y+1,r20
 1041 000c 2A83      		std Y+2,r18
 244:../../tmk_core/protocol/adb.c **** }
 1042               		.loc 1 244 5 is_stmt 1 view .LVU251
 1043 000e 22E0      		ldi r18,lo8(2)
 1044               	.LVL86:
 244:../../tmk_core/protocol/adb.c **** }
 1045               		.loc 1 244 5 is_stmt 0 view .LVU252
 1046 0010 AE01      		movw r20,r28
 1047               	.LVL87:
 244:../../tmk_core/protocol/adb.c **** }
 1048               		.loc 1 244 5 view .LVU253
 1049 0012 4F5F      		subi r20,-1
 1050 0014 5F4F      		sbci r21,-1
 1051 0016 0E94 0000 		call adb_host_listen_buf
 1052               	.LVL88:
 1053               	/* epilogue start */
 245:../../tmk_core/protocol/adb.c **** 
 1054               		.loc 1 245 1 view .LVU254
 1055 001a 0F90      		pop __tmp_reg__
 1056 001c 0F90      		pop __tmp_reg__
 1057 001e DF91      		pop r29
 1058 0020 CF91      		pop r28
 1059 0022 0895      		ret
 1060               		.cfi_endproc
 1061               	.LFE14:
 1063               		.section	.text.adb_host_flush,"ax",@progbits
 1064               	.global	adb_host_flush
 1066               	adb_host_flush:
 1067               	.LVL89:
 1068               	.LFB15:
 248:../../tmk_core/protocol/adb.c ****     cli();
 1069               		.loc 1 248 1 is_stmt 1 view -0
 1070               		.cfi_startproc
 248:../../tmk_core/protocol/adb.c ****     cli();
 1071               		.loc 1 248 1 is_stmt 0 view .LVU256
 1072 0000 CF93      		push r28
 1073               	.LCFI29:
 1074               		.cfi_def_cfa_offset 3
 1075               		.cfi_offset 28, -2
 1076               	/* prologue: function */
 1077               	/* frame size = 0 */
 1078               	/* stack size = 1 */
 1079               	.L__stack_usage = 1
 1080 0002 C82F      		mov r28,r24
 249:../../tmk_core/protocol/adb.c ****     attention();
 1081               		.loc 1 249 5 is_stmt 1 view .LVU257
 1082               	/* #APP */
 1083               	 ;  249 "../../tmk_core/protocol/adb.c" 1
 1084 0004 F894      		cli
 1085               	 ;  0 "" 2
 250:../../tmk_core/protocol/adb.c ****     send_byte((addr<<4) | ADB_CMD_FLUSH);
 1086               		.loc 1 250 5 view .LVU258
 1087               	/* #NOAPP */
 1088 0006 0E94 0000 		call attention
 1089               	.LVL90:
 251:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 1090               		.loc 1 251 5 view .LVU259
 251:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 1091               		.loc 1 251 20 is_stmt 0 view .LVU260
 1092 000a 8C2F      		mov r24,r28
 1093 000c 8295      		swap r24
 1094 000e 807F      		andi r24,lo8(-16)
 251:../../tmk_core/protocol/adb.c ****     place_bit0();               // Stopbit(0)
 1095               		.loc 1 251 5 view .LVU261
 1096 0010 8160      		ori r24,lo8(1)
 1097 0012 0E94 0000 		call send_byte
 1098               	.LVL91:
 252:../../tmk_core/protocol/adb.c ****     _delay_us(200);             // Tlt/Stop to Start
 1099               		.loc 1 252 5 is_stmt 1 view .LVU262
 1100 0016 0E94 0000 		call place_bit0
 1101               	.LVL92:
 253:../../tmk_core/protocol/adb.c ****     sei();
 1102               		.loc 1 253 5 view .LVU263
 1103               	.LBB48:
 1104               	.LBI48:
 255:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 1105               		.loc 2 255 1 view .LVU264
 1106               	.LBB49:
 257:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 1107               		.loc 2 257 2 view .LVU265
 261:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1108               		.loc 2 261 2 view .LVU266
 262:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 1109               		.loc 2 262 2 view .LVU267
 263:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 1110               		.loc 2 263 2 view .LVU268
 273:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 1111               		.loc 2 273 3 view .LVU269
 1112               		.loc 2 276 2 view .LVU270
 1113 001a 8FE1      		ldi r24,lo8(799)
 1114 001c 93E0      		ldi r25,hi8(799)
 1115 001e 0197      	1:	sbiw r24,1
 1116 0020 01F4      		brne 1b
 1117 0022 00C0      		rjmp .
 1118 0024 0000      		nop
 1119               	.LVL93:
 1120               		.loc 2 276 2 is_stmt 0 view .LVU271
 1121               	.LBE49:
 1122               	.LBE48:
 254:../../tmk_core/protocol/adb.c **** }
 1123               		.loc 1 254 5 is_stmt 1 view .LVU272
 1124               	/* #APP */
 1125               	 ;  254 "../../tmk_core/protocol/adb.c" 1
 1126 0026 7894      		sei
 1127               	 ;  0 "" 2
 1128               	/* #NOAPP */
 1129               	/* epilogue start */
 255:../../tmk_core/protocol/adb.c **** 
 1130               		.loc 1 255 1 is_stmt 0 view .LVU273
 1131 0028 CF91      		pop r28
 1132               	.LVL94:
 255:../../tmk_core/protocol/adb.c **** 
 1133               		.loc 1 255 1 view .LVU274
 1134 002a 0895      		ret
 1135               		.cfi_endproc
 1136               	.LFE15:
 1138               		.section	.text.adb_host_kbd_led,"ax",@progbits
 1139               	.global	adb_host_kbd_led
 1141               	adb_host_kbd_led:
 1142               	.LVL95:
 1143               	.LFB16:
 259:../../tmk_core/protocol/adb.c ****     // Listen Register2
 1144               		.loc 1 259 1 is_stmt 1 view -0
 1145               		.cfi_startproc
 1146               	/* prologue: function */
 1147               	/* frame size = 0 */
 1148               	/* stack size = 0 */
 1149               	.L__stack_usage = 0
 263:../../tmk_core/protocol/adb.c **** }
 1150               		.loc 1 263 5 view .LVU276
 1151 0000 262F      		mov r18,r22
 1152 0002 2770      		andi r18,lo8(7)
 1153 0004 40E0      		ldi r20,0
 1154 0006 62E0      		ldi r22,lo8(2)
 1155               	.LVL96:
 263:../../tmk_core/protocol/adb.c **** }
 1156               		.loc 1 263 5 is_stmt 0 view .LVU277
 1157 0008 0C94 0000 		jmp adb_host_listen
 1158               	.LVL97:
 263:../../tmk_core/protocol/adb.c **** }
 1159               		.loc 1 263 5 view .LVU278
 1160               		.cfi_endproc
 1161               	.LFE16:
 1163               		.section	.progmem.data.__c.1919,"a"
 1166               	__c.1919:
 1167 0000 7300      		.string	"s"
 1168               		.section	.progmem.data.__c.1917,"a"
 1171               	__c.1917:
 1172 0000 5300      		.string	"S"
 1173               		.section	.progmem.data.__c.1915,"a"
 1176               	__c.1915:
 1177 0000 5200      		.string	"R"
 1178               		.text
 1179               	.Letext0:
 1180               		.file 3 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdint.h"
 1181               		.file 4 "../../tmk_core/common/avr/xprintf.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 adb.c
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:4      *ABS*:000000000000003f __SREG__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:12     .text.place_bit0:0000000000000000 place_bit0
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:76     .text.place_bit1:0000000000000000 place_bit1
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:138    .text.send_byte:0000000000000000 send_byte
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:243    .text.attention:0000000000000000 attention
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:283    .text.wait_data_lo:0000000000000000 wait_data_lo
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:332    .text.wait_data_hi:0000000000000000 wait_data_hi
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:382    .text.adb_host_init:0000000000000000 adb_host_init
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:404    .text.adb_mouse_init:0000000000000000 adb_mouse_init
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:419    .text.adb_mouse_task:0000000000000000 adb_mouse_task
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:437    .text.adb_host_talk_buf:0000000000000000 adb_host_talk_buf
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:1176   .progmem.data.__c.1915:0000000000000000 __c.1915
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:1171   .progmem.data.__c.1917:0000000000000000 __c.1917
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:1166   .progmem.data.__c.1919:0000000000000000 __c.1919
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:766    .text.adb_host_talk:0000000000000000 adb_host_talk
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:844    .text.adb_host_kbd_recv:0000000000000000 adb_host_kbd_recv
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:865    .text.adb_host_listen_buf:0000000000000000 adb_host_listen_buf
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:1013   .text.adb_host_listen:0000000000000000 adb_host_listen
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:1066   .text.adb_host_flush:0000000000000000 adb_host_flush
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccqpz2H3.s:1141   .text.adb_host_kbd_led:0000000000000000 adb_host_kbd_led

UNDEFINED SYMBOLS
__xprintf
