   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB20:
  14               		.file 1 "../../tmk_core/common/command.c"
   1:../../tmk_core/common/command.c **** /*
   2:../../tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/command.c **** 
   4:../../tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/command.c **** (at your option) any later version.
   8:../../tmk_core/common/command.c **** 
   9:../../tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/command.c **** GNU General Public License for more details.
  13:../../tmk_core/common/command.c **** 
  14:../../tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/command.c **** */
  17:../../tmk_core/common/command.c **** #include <stdint.h>
  18:../../tmk_core/common/command.c **** #include <stdbool.h>
  19:../../tmk_core/common/command.c **** #include "wait.h"
  20:../../tmk_core/common/command.c **** #include "keycode.h"
  21:../../tmk_core/common/command.c **** #include "host.h"
  22:../../tmk_core/common/command.c **** #include "keymap.h"
  23:../../tmk_core/common/command.c **** #include "print.h"
  24:../../tmk_core/common/command.c **** #include "debug.h"
  25:../../tmk_core/common/command.c **** #include "util.h"
  26:../../tmk_core/common/command.c **** #include "timer.h"
  27:../../tmk_core/common/command.c **** #include "keyboard.h"
  28:../../tmk_core/common/command.c **** #include "bootloader.h"
  29:../../tmk_core/common/command.c **** #include "action_layer.h"
  30:../../tmk_core/common/command.c **** #include "action_util.h"
  31:../../tmk_core/common/command.c **** #include "eeconfig.h"
  32:../../tmk_core/common/command.c **** #include "sleep_led.h"
  33:../../tmk_core/common/command.c **** #include "led.h"
  34:../../tmk_core/common/command.c **** #include "command.h"
  35:../../tmk_core/common/command.c **** #include "backlight.h"
  36:../../tmk_core/common/command.c **** 
  37:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:../../tmk_core/common/command.c **** #include "mousekey.h"
  39:../../tmk_core/common/command.c **** #endif
  40:../../tmk_core/common/command.c **** 
  41:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  42:../../tmk_core/common/command.c **** #   include "usb_keyboard.h"
  43:../../tmk_core/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:../../tmk_core/common/command.c **** #       include "usb_extra.h"
  45:../../tmk_core/common/command.c **** #   endif
  46:../../tmk_core/common/command.c **** #endif
  47:../../tmk_core/common/command.c **** 
  48:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  49:../../tmk_core/common/command.c **** #   include "usbdrv.h"
  50:../../tmk_core/common/command.c **** #endif
  51:../../tmk_core/common/command.c **** 
  52:../../tmk_core/common/command.c **** 
  53:../../tmk_core/common/command.c **** static bool command_common(uint8_t code);
  54:../../tmk_core/common/command.c **** static void command_common_help(void);
  55:../../tmk_core/common/command.c **** static bool command_console(uint8_t code);
  56:../../tmk_core/common/command.c **** static void command_console_help(void);
  57:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  58:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  59:../../tmk_core/common/command.c **** static void mousekey_console_help(void);
  60:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code);
  61:../../tmk_core/common/command.c **** #endif
  62:../../tmk_core/common/command.c **** 
  63:../../tmk_core/common/command.c **** 
  64:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  65:../../tmk_core/common/command.c **** 
  66:../../tmk_core/common/command.c **** 
  67:../../tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  68:../../tmk_core/common/command.c **** 
  69:../../tmk_core/common/command.c **** 
  70:../../tmk_core/common/command.c **** bool command_proc(uint8_t code)
  71:../../tmk_core/common/command.c **** {
  72:../../tmk_core/common/command.c ****     switch (command_state) {
  73:../../tmk_core/common/command.c ****         case ONESHOT:
  74:../../tmk_core/common/command.c ****             if (!IS_COMMAND())
  75:../../tmk_core/common/command.c ****                 return false;
  76:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  77:../../tmk_core/common/command.c ****             break;
  78:../../tmk_core/common/command.c ****         case CONSOLE:
  79:../../tmk_core/common/command.c ****             if (IS_COMMAND())
  80:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  81:../../tmk_core/common/command.c ****             else
  82:../../tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  83:../../tmk_core/common/command.c ****             break;
  84:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  85:../../tmk_core/common/command.c ****         case MOUSEKEY:
  86:../../tmk_core/common/command.c ****             mousekey_console(code);
  87:../../tmk_core/common/command.c ****             break;
  88:../../tmk_core/common/command.c **** #endif
  89:../../tmk_core/common/command.c ****         default:
  90:../../tmk_core/common/command.c ****             command_state = ONESHOT;
  91:../../tmk_core/common/command.c ****             return false;
  92:../../tmk_core/common/command.c ****     }
  93:../../tmk_core/common/command.c ****     return true;
  94:../../tmk_core/common/command.c **** }
  95:../../tmk_core/common/command.c **** 
  96:../../tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
  97:../../tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
  98:../../tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
  99:../../tmk_core/common/command.c **** bool command_extra(uint8_t code)
 100:../../tmk_core/common/command.c **** {
 101:../../tmk_core/common/command.c ****     (void)code;
 102:../../tmk_core/common/command.c ****     return false;
 103:../../tmk_core/common/command.c **** }
 104:../../tmk_core/common/command.c **** 
 105:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 106:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 107:../../tmk_core/common/command.c **** {
 108:../../tmk_core/common/command.c ****     (void)code;
 109:../../tmk_core/common/command.c ****     return false;
 110:../../tmk_core/common/command.c **** }
 111:../../tmk_core/common/command.c **** 
 112:../../tmk_core/common/command.c **** 
 113:../../tmk_core/common/command.c **** /***********************************************************
 114:../../tmk_core/common/command.c ****  * Command common
 115:../../tmk_core/common/command.c ****  ***********************************************************/
 116:../../tmk_core/common/command.c **** static void command_common_help(void)
 117:../../tmk_core/common/command.c **** {
 118:../../tmk_core/common/command.c ****     print("\n\t- Magic -\n"
 119:../../tmk_core/common/command.c ****           "d:	debug\n"
 120:../../tmk_core/common/command.c ****           "x:	debug matrix\n"
 121:../../tmk_core/common/command.c ****           "k:	debug keyboard\n"
 122:../../tmk_core/common/command.c ****           "m:	debug mouse\n"
 123:../../tmk_core/common/command.c ****           "v:	version\n"
 124:../../tmk_core/common/command.c ****           "s:	status\n"
 125:../../tmk_core/common/command.c ****           "c:	console mode\n"
 126:../../tmk_core/common/command.c ****           "0-4:	layer0-4(F10-F4)\n"
 127:../../tmk_core/common/command.c ****           "Paus:	bootloader\n"
 128:../../tmk_core/common/command.c **** 
 129:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 130:../../tmk_core/common/command.c ****           "Caps:	Lock\n"
 131:../../tmk_core/common/command.c **** #endif
 132:../../tmk_core/common/command.c **** 
 133:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 134:../../tmk_core/common/command.c ****           "e:	eeprom\n"
 135:../../tmk_core/common/command.c **** #endif
 136:../../tmk_core/common/command.c **** 
 137:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 138:../../tmk_core/common/command.c ****           "n:	NKRO\n"
 139:../../tmk_core/common/command.c **** #endif
 140:../../tmk_core/common/command.c **** 
 141:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 142:../../tmk_core/common/command.c ****           "z:	sleep LED test\n"
 143:../../tmk_core/common/command.c **** #endif
 144:../../tmk_core/common/command.c ****     );
 145:../../tmk_core/common/command.c **** }
 146:../../tmk_core/common/command.c **** 
 147:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 148:../../tmk_core/common/command.c **** static void print_eeconfig(void)
 149:../../tmk_core/common/command.c **** {
 150:../../tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 151:../../tmk_core/common/command.c **** 
 152:../../tmk_core/common/command.c ****     debug_config_t dc;
 153:../../tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 154:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 155:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 156:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 157:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 158:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 159:../../tmk_core/common/command.c **** 
 160:../../tmk_core/common/command.c ****     keymap_config_t kc;
 161:../../tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 162:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 163:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 164:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 165:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 166:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 167:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 168:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 169:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 170:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 171:../../tmk_core/common/command.c **** 
 172:../../tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 173:../../tmk_core/common/command.c ****     backlight_config_t bc;
 174:../../tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 175:../../tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 176:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 177:../../tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 178:../../tmk_core/common/command.c **** #endif
 179:../../tmk_core/common/command.c **** }
 180:../../tmk_core/common/command.c **** #endif
 181:../../tmk_core/common/command.c **** 
 182:../../tmk_core/common/command.c **** static bool command_common(uint8_t code)
 183:../../tmk_core/common/command.c **** {
 184:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 185:../../tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 186:../../tmk_core/common/command.c **** #endif
 187:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 188:../../tmk_core/common/command.c ****     static bool sleep_led_test = false;
 189:../../tmk_core/common/command.c **** #endif
 190:../../tmk_core/common/command.c ****     switch (code) {
 191:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 192:../../tmk_core/common/command.c ****         case KC_Z:
 193:../../tmk_core/common/command.c ****             // test breathing sleep LED
 194:../../tmk_core/common/command.c ****             print("Sleep LED test\n");
 195:../../tmk_core/common/command.c ****             if (sleep_led_test) {
 196:../../tmk_core/common/command.c ****                 sleep_led_disable();
 197:../../tmk_core/common/command.c ****                 led_set(host_keyboard_leds());
 198:../../tmk_core/common/command.c ****             } else {
 199:../../tmk_core/common/command.c ****                 sleep_led_enable();
 200:../../tmk_core/common/command.c ****             }
 201:../../tmk_core/common/command.c ****             sleep_led_test = !sleep_led_test;
 202:../../tmk_core/common/command.c ****             break;
 203:../../tmk_core/common/command.c **** #endif
 204:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 205:../../tmk_core/common/command.c ****         case KC_E:
 206:../../tmk_core/common/command.c ****             print("eeconfig:\n");
 207:../../tmk_core/common/command.c ****             print_eeconfig();
 208:../../tmk_core/common/command.c ****             break;
 209:../../tmk_core/common/command.c **** #endif
 210:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 211:../../tmk_core/common/command.c ****         case KC_CAPSLOCK:
 212:../../tmk_core/common/command.c ****             if (host_get_driver()) {
 213:../../tmk_core/common/command.c ****                 host_driver = host_get_driver();
 214:../../tmk_core/common/command.c ****                 clear_keyboard();
 215:../../tmk_core/common/command.c ****                 host_set_driver(0);
 216:../../tmk_core/common/command.c ****                 print("Locked.\n");
 217:../../tmk_core/common/command.c ****             } else {
 218:../../tmk_core/common/command.c ****                 host_set_driver(host_driver);
 219:../../tmk_core/common/command.c ****                 print("Unlocked.\n");
 220:../../tmk_core/common/command.c ****             }
 221:../../tmk_core/common/command.c ****             break;
 222:../../tmk_core/common/command.c **** #endif
 223:../../tmk_core/common/command.c ****         case KC_H:
 224:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 225:../../tmk_core/common/command.c ****             command_common_help();
 226:../../tmk_core/common/command.c ****             break;
 227:../../tmk_core/common/command.c ****         case KC_C:
 228:../../tmk_core/common/command.c ****             debug_matrix   = false;
 229:../../tmk_core/common/command.c ****             debug_keyboard = false;
 230:../../tmk_core/common/command.c ****             debug_mouse    = false;
 231:../../tmk_core/common/command.c ****             debug_enable   = false;
 232:../../tmk_core/common/command.c ****             command_console_help();
 233:../../tmk_core/common/command.c ****             print("C> ");
 234:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 235:../../tmk_core/common/command.c ****             break;
 236:../../tmk_core/common/command.c ****         case KC_PAUSE:
 237:../../tmk_core/common/command.c ****             clear_keyboard();
 238:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 239:../../tmk_core/common/command.c ****             wait_ms(1000);
 240:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 241:../../tmk_core/common/command.c ****             break;
 242:../../tmk_core/common/command.c ****         case KC_D:
 243:../../tmk_core/common/command.c ****             if (debug_enable) {
 244:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 245:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 246:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 247:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 248:../../tmk_core/common/command.c ****                 debug_enable   = false;
 249:../../tmk_core/common/command.c ****             } else {
 250:../../tmk_core/common/command.c ****                 print("\ndebug: on\n");
 251:../../tmk_core/common/command.c ****                 debug_enable   = true;
 252:../../tmk_core/common/command.c ****             }
 253:../../tmk_core/common/command.c ****             break;
 254:../../tmk_core/common/command.c ****         case KC_X: // debug matrix toggle
 255:../../tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 256:../../tmk_core/common/command.c ****             if (debug_matrix) {
 257:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 258:../../tmk_core/common/command.c ****                 debug_enable = true;
 259:../../tmk_core/common/command.c ****             } else {
 260:../../tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 261:../../tmk_core/common/command.c ****             }
 262:../../tmk_core/common/command.c ****             break;
 263:../../tmk_core/common/command.c ****         case KC_K: // debug keyboard toggle
 264:../../tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 265:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 266:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 267:../../tmk_core/common/command.c ****                 debug_enable = true;
 268:../../tmk_core/common/command.c ****             } else {
 269:../../tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 270:../../tmk_core/common/command.c ****             }
 271:../../tmk_core/common/command.c ****             break;
 272:../../tmk_core/common/command.c ****         case KC_M: // debug mouse toggle
 273:../../tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 274:../../tmk_core/common/command.c ****             if (debug_mouse) {
 275:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 276:../../tmk_core/common/command.c ****                 debug_enable = true;
 277:../../tmk_core/common/command.c ****             } else {
 278:../../tmk_core/common/command.c ****                 print("\nmouse: off\n");
 279:../../tmk_core/common/command.c ****             }
 280:../../tmk_core/common/command.c ****             break;
 281:../../tmk_core/common/command.c ****         case KC_V: // print version & information
 282:../../tmk_core/common/command.c ****             print("\n\t- Version -\n");
 283:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 284:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 285:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 286:../../tmk_core/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 287:../../tmk_core/common/command.c ****             print("BUILD: " STR(TMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 288:../../tmk_core/common/command.c ****             /* build options */
 289:../../tmk_core/common/command.c ****             print("OPTIONS:"
 290:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 291:../../tmk_core/common/command.c ****             " PJRC"
 292:../../tmk_core/common/command.c **** #endif
 293:../../tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 294:../../tmk_core/common/command.c ****             " LUFA"
 295:../../tmk_core/common/command.c **** #endif
 296:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 297:../../tmk_core/common/command.c ****             " VUSB"
 298:../../tmk_core/common/command.c **** #endif
 299:../../tmk_core/common/command.c **** #ifdef PROTOCOL_CHIBIOS
 300:../../tmk_core/common/command.c ****             " CHIBIOS"
 301:../../tmk_core/common/command.c **** #endif
 302:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 303:../../tmk_core/common/command.c ****             " BOOTMAGIC"
 304:../../tmk_core/common/command.c **** #endif
 305:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 306:../../tmk_core/common/command.c ****             " MOUSEKEY"
 307:../../tmk_core/common/command.c **** #endif
 308:../../tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 309:../../tmk_core/common/command.c ****             " EXTRAKEY"
 310:../../tmk_core/common/command.c **** #endif
 311:../../tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 312:../../tmk_core/common/command.c ****             " CONSOLE"
 313:../../tmk_core/common/command.c **** #endif
 314:../../tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 315:../../tmk_core/common/command.c ****             " COMMAND"
 316:../../tmk_core/common/command.c **** #endif
 317:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 318:../../tmk_core/common/command.c ****             " NKRO"
 319:../../tmk_core/common/command.c **** #endif
 320:../../tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 321:../../tmk_core/common/command.c ****             " KEYMAP_SECTION"
 322:../../tmk_core/common/command.c **** #endif
 323:../../tmk_core/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 324:../../tmk_core/common/command.c **** 
 325:../../tmk_core/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 326:../../tmk_core/common/command.c **** #if defined(__AVR__)
 327:../../tmk_core/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 328:../../tmk_core/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 329:../../tmk_core/common/command.c **** #elif defined(__arm__)
 330:../../tmk_core/common/command.c ****             // TODO
 331:../../tmk_core/common/command.c ****             );
 332:../../tmk_core/common/command.c **** #endif
 333:../../tmk_core/common/command.c ****             break;
 334:../../tmk_core/common/command.c ****         case KC_S:
 335:../../tmk_core/common/command.c ****             print("\n\t- Status -\n");
 336:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 338:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 339:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 340:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_nkro);
 341:../../tmk_core/common/command.c **** #endif
 342:../../tmk_core/common/command.c ****             print_val_hex32(timer_read32());
 343:../../tmk_core/common/command.c **** 
 344:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 345:../../tmk_core/common/command.c ****             print_val_hex8(UDCON);
 346:../../tmk_core/common/command.c ****             print_val_hex8(UDIEN);
 347:../../tmk_core/common/command.c ****             print_val_hex8(UDINT);
 348:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 349:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 350:../../tmk_core/common/command.c **** #endif
 351:../../tmk_core/common/command.c **** 
 352:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 353:../../tmk_core/common/command.c **** #   if USB_COUNT_SOF
 354:../../tmk_core/common/command.c ****             print_val_hex8(usbSofCount);
 355:../../tmk_core/common/command.c **** #   endif
 356:../../tmk_core/common/command.c **** #endif
 357:../../tmk_core/common/command.c ****             break;
 358:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 359:../../tmk_core/common/command.c ****         case KC_N:
 360:../../tmk_core/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 361:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 362:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 363:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 364:../../tmk_core/common/command.c ****             } else {
 365:../../tmk_core/common/command.c ****                 print("NKRO: off\n");
 366:../../tmk_core/common/command.c ****             }
 367:../../tmk_core/common/command.c ****             break;
 368:../../tmk_core/common/command.c **** #endif
 369:../../tmk_core/common/command.c ****         case KC_ESC:
 370:../../tmk_core/common/command.c ****         case KC_GRV:
 371:../../tmk_core/common/command.c ****         case KC_0:
 372:../../tmk_core/common/command.c ****         case KC_F10:
 373:../../tmk_core/common/command.c ****             switch_default_layer(0);
 374:../../tmk_core/common/command.c ****             break;
 375:../../tmk_core/common/command.c ****         case KC_1 ... KC_9:
 376:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 377:../../tmk_core/common/command.c ****             break;
 378:../../tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 379:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 380:../../tmk_core/common/command.c ****             break;
 381:../../tmk_core/common/command.c ****         default:
 382:../../tmk_core/common/command.c ****             print("?");
 383:../../tmk_core/common/command.c ****             return false;
 384:../../tmk_core/common/command.c ****     }
 385:../../tmk_core/common/command.c ****     return true;
 386:../../tmk_core/common/command.c **** }
 387:../../tmk_core/common/command.c **** 
 388:../../tmk_core/common/command.c **** 
 389:../../tmk_core/common/command.c **** /***********************************************************
 390:../../tmk_core/common/command.c ****  * Command console
 391:../../tmk_core/common/command.c ****  ***********************************************************/
 392:../../tmk_core/common/command.c **** static void command_console_help(void)
 393:../../tmk_core/common/command.c **** {
 394:../../tmk_core/common/command.c ****     print("\n\t- Console -\n"
 395:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 396:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 397:../../tmk_core/common/command.c ****           "m:	mousekey\n"
 398:../../tmk_core/common/command.c **** #endif
 399:../../tmk_core/common/command.c ****     );
 400:../../tmk_core/common/command.c **** }
 401:../../tmk_core/common/command.c **** 
 402:../../tmk_core/common/command.c **** static bool command_console(uint8_t code)
 403:../../tmk_core/common/command.c **** {
 404:../../tmk_core/common/command.c ****     switch (code) {
 405:../../tmk_core/common/command.c ****         case KC_H:
 406:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 407:../../tmk_core/common/command.c ****             command_console_help();
 408:../../tmk_core/common/command.c ****             break;
 409:../../tmk_core/common/command.c ****         case KC_Q:
 410:../../tmk_core/common/command.c ****         case KC_ESC:
 411:../../tmk_core/common/command.c ****             command_state = ONESHOT;
 412:../../tmk_core/common/command.c ****             return false;
 413:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 414:../../tmk_core/common/command.c ****         case KC_M:
 415:../../tmk_core/common/command.c ****             mousekey_console_help();
 416:../../tmk_core/common/command.c ****             print("M> ");
 417:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 418:../../tmk_core/common/command.c ****             return true;
 419:../../tmk_core/common/command.c **** #endif
 420:../../tmk_core/common/command.c ****         default:
 421:../../tmk_core/common/command.c ****             print("?");
 422:../../tmk_core/common/command.c ****             return false;
 423:../../tmk_core/common/command.c ****     }
 424:../../tmk_core/common/command.c ****     print("C> ");
 425:../../tmk_core/common/command.c ****     return true;
 426:../../tmk_core/common/command.c **** }
 427:../../tmk_core/common/command.c **** 
 428:../../tmk_core/common/command.c **** 
 429:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 430:../../tmk_core/common/command.c **** /***********************************************************
 431:../../tmk_core/common/command.c ****  * Mousekey console
 432:../../tmk_core/common/command.c ****  ***********************************************************/
 433:../../tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 434:../../tmk_core/common/command.c **** 
 435:../../tmk_core/common/command.c **** static void mousekey_param_print(void)
 436:../../tmk_core/common/command.c **** {
 437:../../tmk_core/common/command.c ****     print("\n\t- Values -\n");
 438:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 439:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 440:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 441:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 442:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 443:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 444:../../tmk_core/common/command.c **** }
 445:../../tmk_core/common/command.c **** 
 446:../../tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 447:../../tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 448:../../tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 449:../../tmk_core/common/command.c **** {
 450:../../tmk_core/common/command.c ****     switch (param) {
 451:../../tmk_core/common/command.c ****         case 1:
 452:../../tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 453:../../tmk_core/common/command.c ****                 mk_delay += inc;
 454:../../tmk_core/common/command.c ****             else
 455:../../tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 456:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 457:../../tmk_core/common/command.c ****             break;
 458:../../tmk_core/common/command.c ****         case 2:
 459:../../tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 460:../../tmk_core/common/command.c ****                 mk_interval += inc;
 461:../../tmk_core/common/command.c ****             else
 462:../../tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 463:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 464:../../tmk_core/common/command.c ****             break;
 465:../../tmk_core/common/command.c ****         case 3:
 466:../../tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 467:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 468:../../tmk_core/common/command.c ****             else
 469:../../tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 470:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 471:../../tmk_core/common/command.c ****             break;
 472:../../tmk_core/common/command.c ****         case 4:
 473:../../tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 474:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 475:../../tmk_core/common/command.c ****             else
 476:../../tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 477:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 478:../../tmk_core/common/command.c ****             break;
 479:../../tmk_core/common/command.c ****         case 5:
 480:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 481:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 482:../../tmk_core/common/command.c ****             else
 483:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 484:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 485:../../tmk_core/common/command.c ****             break;
 486:../../tmk_core/common/command.c ****         case 6:
 487:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 488:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 489:../../tmk_core/common/command.c ****             else
 490:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 491:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 492:../../tmk_core/common/command.c ****             break;
 493:../../tmk_core/common/command.c ****     }
 494:../../tmk_core/common/command.c **** }
 495:../../tmk_core/common/command.c **** 
 496:../../tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 497:../../tmk_core/common/command.c **** {
 498:../../tmk_core/common/command.c ****     switch (param) {
 499:../../tmk_core/common/command.c ****         case 1:
 500:../../tmk_core/common/command.c ****             if (mk_delay > dec)
 501:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 502:../../tmk_core/common/command.c ****             else
 503:../../tmk_core/common/command.c ****                 mk_delay = 0;
 504:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 505:../../tmk_core/common/command.c ****             break;
 506:../../tmk_core/common/command.c ****         case 2:
 507:../../tmk_core/common/command.c ****             if (mk_interval > dec)
 508:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 509:../../tmk_core/common/command.c ****             else
 510:../../tmk_core/common/command.c ****                 mk_interval = 0;
 511:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 512:../../tmk_core/common/command.c ****             break;
 513:../../tmk_core/common/command.c ****         case 3:
 514:../../tmk_core/common/command.c ****             if (mk_max_speed > dec)
 515:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 516:../../tmk_core/common/command.c ****             else
 517:../../tmk_core/common/command.c ****                 mk_max_speed = 0;
 518:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 519:../../tmk_core/common/command.c ****             break;
 520:../../tmk_core/common/command.c ****         case 4:
 521:../../tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 522:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 523:../../tmk_core/common/command.c ****             else
 524:../../tmk_core/common/command.c ****                 mk_time_to_max = 0;
 525:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 526:../../tmk_core/common/command.c ****             break;
 527:../../tmk_core/common/command.c ****         case 5:
 528:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 529:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 530:../../tmk_core/common/command.c ****             else
 531:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 532:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 533:../../tmk_core/common/command.c ****             break;
 534:../../tmk_core/common/command.c ****         case 6:
 535:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 536:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 537:../../tmk_core/common/command.c ****             else
 538:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 539:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 540:../../tmk_core/common/command.c ****             break;
 541:../../tmk_core/common/command.c ****     }
 542:../../tmk_core/common/command.c **** }
 543:../../tmk_core/common/command.c **** 
 544:../../tmk_core/common/command.c **** static void mousekey_console_help(void)
 545:../../tmk_core/common/command.c **** {
  15               		.loc 1 545 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 546:../../tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 546 5 view .LVU1
  22               	.LBB26:
  23               		.loc 1 546 5 view .LVU2
  24               		.loc 1 546 5 view .LVU3
  25               	.LBE26:
  26 0000 80E0      		ldi r24,lo8(__c.2828)
  27 0002 90E0      		ldi r25,hi8(__c.2828)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 547:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 548:../../tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 549:../../tmk_core/common/command.c ****           "2:	interval(ms)\n"
 550:../../tmk_core/common/command.c ****           "3:	max_speed\n"
 551:../../tmk_core/common/command.c ****           "4:	time_to_max\n"
 552:../../tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 553:../../tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 554:../../tmk_core/common/command.c ****           "\n"
 555:../../tmk_core/common/command.c ****           "p:	print values\n"
 556:../../tmk_core/common/command.c ****           "d:	set defaults\n"
 557:../../tmk_core/common/command.c ****           "up:	+1\n"
 558:../../tmk_core/common/command.c ****           "down:	-1\n"
 559:../../tmk_core/common/command.c ****           "pgup:	+10\n"
 560:../../tmk_core/common/command.c ****           "pgdown:	-10\n"
 561:../../tmk_core/common/command.c ****           "\n"
 562:../../tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 563:../../tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n" 
  30               		.loc 1 563 5 view .LVU4
  31               	.LBB27:
  32               		.loc 1 563 5 view .LVU5
  33               		.loc 1 563 5 view .LVU6
  34               	.LBE27:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.2830)
  50 0016 90E0      		ldi r25,hi8(__c.2830)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 564:../../tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 565:../../tmk_core/common/command.c **** }
  59               		.loc 1 565 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE20:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB18:
 449:../../tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 449 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 450:../../tmk_core/common/command.c ****         case 1:
  84               		.loc 1 450 5 view .LVU9
  85 0000 8430      		cpi r24,lo8(4)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8230      		cpi r24,lo8(2)
  90 000a 01F0      		breq .L5
  91 000c 8330      		cpi r24,lo8(3)
  92 000e 01F4      		brne .+2
  93 0010 00C0      		rjmp .L6
  94 0012 8130      		cpi r24,lo8(1)
  95 0014 01F0      		breq .L7
  96 0016 0895      		ret
  97               	.L4:
  98 0018 8530      		cpi r24,lo8(5)
  99 001a 01F4      		brne .+2
 100 001c 00C0      		rjmp .L9
 101 001e 8630      		cpi r24,lo8(6)
 102 0020 01F4      		brne .+2
 103 0022 00C0      		rjmp .L10
 104 0024 0895      		ret
 105               	.L7:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 452 13 view .LVU10
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 107               		.loc 1 452 26 is_stmt 0 view .LVU11
 108 0026 8091 0000 		lds r24,mk_delay
 109               	.LVL3:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 110               		.loc 1 452 26 view .LVU12
 111 002a 482F      		mov r20,r24
 112 002c 460F      		add r20,r22
 113 002e 5527      		clr r21
 114 0030 551F      		rol r21
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 115               		.loc 1 452 16 view .LVU13
 116 0032 4F3F      		cpi r20,-1
 117 0034 5105      		cpc r21,__zero_reg__
 118 0036 04F4      		brge .L11
 453:../../tmk_core/common/command.c ****             else
 119               		.loc 1 453 17 is_stmt 1 view .LVU14
 453:../../tmk_core/common/command.c ****             else
 120               		.loc 1 453 26 is_stmt 0 view .LVU15
 121 0038 680F      		add r22,r24
 122               	.LVL4:
 453:../../tmk_core/common/command.c ****             else
 123               		.loc 1 453 26 view .LVU16
 124 003a 6093 0000 		sts mk_delay,r22
 125               	.L12:
 456:../../tmk_core/common/command.c ****             break;
 126               		.loc 1 456 13 is_stmt 1 view .LVU17
 127               	.LBB28:
 456:../../tmk_core/common/command.c ****             break;
 128               		.loc 1 456 13 view .LVU18
 456:../../tmk_core/common/command.c ****             break;
 129               		.loc 1 456 13 view .LVU19
 130               	.LBE28:
 131 003e 8091 0000 		lds r24,mk_delay
 132 0042 1F92      		push __zero_reg__
 133               	.LCFI7:
 134               		.cfi_def_cfa_offset 3
 135 0044 8F93      		push r24
 136               	.LCFI8:
 137               		.cfi_def_cfa_offset 4
 138 0046 80E0      		ldi r24,lo8(__c.2784)
 139 0048 90E0      		ldi r25,hi8(__c.2784)
 140               	.L23:
 491:../../tmk_core/common/command.c ****             break;
 141               		.loc 1 491 13 is_stmt 0 view .LVU20
 142 004a 9F93      		push r25
 143               	.LCFI9:
 144               		.cfi_def_cfa_offset 5
 145 004c 8F93      		push r24
 146               	.LCFI10:
 147               		.cfi_def_cfa_offset 6
 148 004e 0E94 0000 		call __xprintf
 149               	.LVL5:
 492:../../tmk_core/common/command.c ****     }
 150               		.loc 1 492 13 is_stmt 1 view .LVU21
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154 0058 0F90      		pop __tmp_reg__
 155               	.LCFI11:
 156               		.cfi_def_cfa_offset 2
 157               	/* epilogue start */
 494:../../tmk_core/common/command.c **** 
 158               		.loc 1 494 1 is_stmt 0 view .LVU22
 159 005a 0895      		ret
 160               	.LVL6:
 161               	.L11:
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 455 17 is_stmt 1 view .LVU23
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 163               		.loc 1 455 26 is_stmt 0 view .LVU24
 164 005c 8FEF      		ldi r24,lo8(-1)
 165 005e 8093 0000 		sts mk_delay,r24
 166 0062 00C0      		rjmp .L12
 167               	.LVL7:
 168               	.L5:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 459 13 is_stmt 1 view .LVU25
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 170               		.loc 1 459 29 is_stmt 0 view .LVU26
 171 0064 8091 0000 		lds r24,mk_interval
 172               	.LVL8:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 173               		.loc 1 459 29 view .LVU27
 174 0068 482F      		mov r20,r24
 175 006a 460F      		add r20,r22
 176 006c 5527      		clr r21
 177 006e 551F      		rol r21
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 178               		.loc 1 459 16 view .LVU28
 179 0070 4F3F      		cpi r20,-1
 180 0072 5105      		cpc r21,__zero_reg__
 181 0074 04F4      		brge .L13
 460:../../tmk_core/common/command.c ****             else
 182               		.loc 1 460 17 is_stmt 1 view .LVU29
 460:../../tmk_core/common/command.c ****             else
 183               		.loc 1 460 29 is_stmt 0 view .LVU30
 184 0076 680F      		add r22,r24
 185               	.LVL9:
 460:../../tmk_core/common/command.c ****             else
 186               		.loc 1 460 29 view .LVU31
 187 0078 6093 0000 		sts mk_interval,r22
 188               	.L14:
 463:../../tmk_core/common/command.c ****             break;
 189               		.loc 1 463 13 is_stmt 1 view .LVU32
 190               	.LBB29:
 463:../../tmk_core/common/command.c ****             break;
 191               		.loc 1 463 13 view .LVU33
 463:../../tmk_core/common/command.c ****             break;
 192               		.loc 1 463 13 view .LVU34
 193               	.LBE29:
 194 007c 8091 0000 		lds r24,mk_interval
 195 0080 1F92      		push __zero_reg__
 196               	.LCFI12:
 197               		.cfi_remember_state
 198               		.cfi_def_cfa_offset 3
 199 0082 8F93      		push r24
 200               	.LCFI13:
 201               		.cfi_def_cfa_offset 4
 202 0084 80E0      		ldi r24,lo8(__c.2788)
 203 0086 90E0      		ldi r25,hi8(__c.2788)
 204 0088 00C0      		rjmp .L23
 205               	.LVL10:
 206               	.L13:
 207               	.LCFI14:
 208               		.cfi_restore_state
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 462 17 view .LVU35
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 210               		.loc 1 462 29 is_stmt 0 view .LVU36
 211 008a 8FEF      		ldi r24,lo8(-1)
 212 008c 8093 0000 		sts mk_interval,r24
 213 0090 00C0      		rjmp .L14
 214               	.LVL11:
 215               	.L6:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 466 13 is_stmt 1 view .LVU37
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 217               		.loc 1 466 30 is_stmt 0 view .LVU38
 218 0092 8091 0000 		lds r24,mk_max_speed
 219               	.LVL12:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 220               		.loc 1 466 30 view .LVU39
 221 0096 482F      		mov r20,r24
 222 0098 460F      		add r20,r22
 223 009a 5527      		clr r21
 224 009c 551F      		rol r21
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 225               		.loc 1 466 16 view .LVU40
 226 009e 4F3F      		cpi r20,-1
 227 00a0 5105      		cpc r21,__zero_reg__
 228 00a2 04F4      		brge .L15
 467:../../tmk_core/common/command.c ****             else
 229               		.loc 1 467 17 is_stmt 1 view .LVU41
 467:../../tmk_core/common/command.c ****             else
 230               		.loc 1 467 30 is_stmt 0 view .LVU42
 231 00a4 680F      		add r22,r24
 232               	.LVL13:
 467:../../tmk_core/common/command.c ****             else
 233               		.loc 1 467 30 view .LVU43
 234 00a6 6093 0000 		sts mk_max_speed,r22
 235               	.L16:
 470:../../tmk_core/common/command.c ****             break;
 236               		.loc 1 470 13 is_stmt 1 view .LVU44
 237               	.LBB30:
 470:../../tmk_core/common/command.c ****             break;
 238               		.loc 1 470 13 view .LVU45
 470:../../tmk_core/common/command.c ****             break;
 239               		.loc 1 470 13 view .LVU46
 240               	.LBE30:
 241 00aa 8091 0000 		lds r24,mk_max_speed
 242 00ae 1F92      		push __zero_reg__
 243               	.LCFI15:
 244               		.cfi_remember_state
 245               		.cfi_def_cfa_offset 3
 246 00b0 8F93      		push r24
 247               	.LCFI16:
 248               		.cfi_def_cfa_offset 4
 249 00b2 80E0      		ldi r24,lo8(__c.2791)
 250 00b4 90E0      		ldi r25,hi8(__c.2791)
 251 00b6 00C0      		rjmp .L23
 252               	.LVL14:
 253               	.L15:
 254               	.LCFI17:
 255               		.cfi_restore_state
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 469 17 view .LVU47
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 257               		.loc 1 469 30 is_stmt 0 view .LVU48
 258 00b8 8FEF      		ldi r24,lo8(-1)
 259 00ba 8093 0000 		sts mk_max_speed,r24
 260 00be 00C0      		rjmp .L16
 261               	.LVL15:
 262               	.L3:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 473 13 is_stmt 1 view .LVU49
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 264               		.loc 1 473 32 is_stmt 0 view .LVU50
 265 00c0 8091 0000 		lds r24,mk_time_to_max
 266               	.LVL16:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 267               		.loc 1 473 32 view .LVU51
 268 00c4 482F      		mov r20,r24
 269 00c6 460F      		add r20,r22
 270 00c8 5527      		clr r21
 271 00ca 551F      		rol r21
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 272               		.loc 1 473 16 view .LVU52
 273 00cc 4F3F      		cpi r20,-1
 274 00ce 5105      		cpc r21,__zero_reg__
 275 00d0 04F4      		brge .L17
 474:../../tmk_core/common/command.c ****             else
 276               		.loc 1 474 17 is_stmt 1 view .LVU53
 474:../../tmk_core/common/command.c ****             else
 277               		.loc 1 474 32 is_stmt 0 view .LVU54
 278 00d2 680F      		add r22,r24
 279               	.LVL17:
 474:../../tmk_core/common/command.c ****             else
 280               		.loc 1 474 32 view .LVU55
 281 00d4 6093 0000 		sts mk_time_to_max,r22
 282               	.L18:
 477:../../tmk_core/common/command.c ****             break;
 283               		.loc 1 477 13 is_stmt 1 view .LVU56
 284               	.LBB31:
 477:../../tmk_core/common/command.c ****             break;
 285               		.loc 1 477 13 view .LVU57
 477:../../tmk_core/common/command.c ****             break;
 286               		.loc 1 477 13 view .LVU58
 287               	.LBE31:
 288 00d8 8091 0000 		lds r24,mk_time_to_max
 289 00dc 1F92      		push __zero_reg__
 290               	.LCFI18:
 291               		.cfi_remember_state
 292               		.cfi_def_cfa_offset 3
 293 00de 8F93      		push r24
 294               	.LCFI19:
 295               		.cfi_def_cfa_offset 4
 296 00e0 80E0      		ldi r24,lo8(__c.2794)
 297 00e2 90E0      		ldi r25,hi8(__c.2794)
 298 00e4 00C0      		rjmp .L23
 299               	.LVL18:
 300               	.L17:
 301               	.LCFI20:
 302               		.cfi_restore_state
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 476 17 view .LVU59
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 304               		.loc 1 476 32 is_stmt 0 view .LVU60
 305 00e6 8FEF      		ldi r24,lo8(-1)
 306 00e8 8093 0000 		sts mk_time_to_max,r24
 307 00ec 00C0      		rjmp .L18
 308               	.LVL19:
 309               	.L9:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 480 13 is_stmt 1 view .LVU61
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 311               		.loc 1 480 36 is_stmt 0 view .LVU62
 312 00ee 8091 0000 		lds r24,mk_wheel_max_speed
 313               	.LVL20:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 314               		.loc 1 480 36 view .LVU63
 315 00f2 482F      		mov r20,r24
 316 00f4 460F      		add r20,r22
 317 00f6 5527      		clr r21
 318 00f8 551F      		rol r21
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 319               		.loc 1 480 16 view .LVU64
 320 00fa 4F3F      		cpi r20,-1
 321 00fc 5105      		cpc r21,__zero_reg__
 322 00fe 04F4      		brge .L19
 481:../../tmk_core/common/command.c ****             else
 323               		.loc 1 481 17 is_stmt 1 view .LVU65
 481:../../tmk_core/common/command.c ****             else
 324               		.loc 1 481 36 is_stmt 0 view .LVU66
 325 0100 680F      		add r22,r24
 326               	.LVL21:
 481:../../tmk_core/common/command.c ****             else
 327               		.loc 1 481 36 view .LVU67
 328 0102 6093 0000 		sts mk_wheel_max_speed,r22
 329               	.L20:
 484:../../tmk_core/common/command.c ****             break;
 330               		.loc 1 484 13 is_stmt 1 view .LVU68
 331               	.LBB32:
 484:../../tmk_core/common/command.c ****             break;
 332               		.loc 1 484 13 view .LVU69
 484:../../tmk_core/common/command.c ****             break;
 333               		.loc 1 484 13 view .LVU70
 334               	.LBE32:
 335 0106 8091 0000 		lds r24,mk_wheel_max_speed
 336 010a 1F92      		push __zero_reg__
 337               	.LCFI21:
 338               		.cfi_remember_state
 339               		.cfi_def_cfa_offset 3
 340 010c 8F93      		push r24
 341               	.LCFI22:
 342               		.cfi_def_cfa_offset 4
 343 010e 80E0      		ldi r24,lo8(__c.2797)
 344 0110 90E0      		ldi r25,hi8(__c.2797)
 345 0112 00C0      		rjmp .L23
 346               	.LVL22:
 347               	.L19:
 348               	.LCFI23:
 349               		.cfi_restore_state
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 483 17 view .LVU71
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 351               		.loc 1 483 36 is_stmt 0 view .LVU72
 352 0114 8FEF      		ldi r24,lo8(-1)
 353 0116 8093 0000 		sts mk_wheel_max_speed,r24
 354 011a 00C0      		rjmp .L20
 355               	.LVL23:
 356               	.L10:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 487 13 is_stmt 1 view .LVU73
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 358               		.loc 1 487 38 is_stmt 0 view .LVU74
 359 011c 8091 0000 		lds r24,mk_wheel_time_to_max
 360               	.LVL24:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 361               		.loc 1 487 38 view .LVU75
 362 0120 482F      		mov r20,r24
 363 0122 460F      		add r20,r22
 364 0124 5527      		clr r21
 365 0126 551F      		rol r21
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 366               		.loc 1 487 16 view .LVU76
 367 0128 4F3F      		cpi r20,-1
 368 012a 5105      		cpc r21,__zero_reg__
 369 012c 04F4      		brge .L21
 488:../../tmk_core/common/command.c ****             else
 370               		.loc 1 488 17 is_stmt 1 view .LVU77
 488:../../tmk_core/common/command.c ****             else
 371               		.loc 1 488 38 is_stmt 0 view .LVU78
 372 012e 680F      		add r22,r24
 373               	.LVL25:
 488:../../tmk_core/common/command.c ****             else
 374               		.loc 1 488 38 view .LVU79
 375 0130 6093 0000 		sts mk_wheel_time_to_max,r22
 376               	.L22:
 491:../../tmk_core/common/command.c ****             break;
 377               		.loc 1 491 13 is_stmt 1 view .LVU80
 378               	.LBB33:
 491:../../tmk_core/common/command.c ****             break;
 379               		.loc 1 491 13 view .LVU81
 491:../../tmk_core/common/command.c ****             break;
 380               		.loc 1 491 13 view .LVU82
 381               	.LBE33:
 382 0134 8091 0000 		lds r24,mk_wheel_time_to_max
 383 0138 1F92      		push __zero_reg__
 384               	.LCFI24:
 385               		.cfi_remember_state
 386               		.cfi_def_cfa_offset 3
 387 013a 8F93      		push r24
 388               	.LCFI25:
 389               		.cfi_def_cfa_offset 4
 390 013c 80E0      		ldi r24,lo8(__c.2800)
 391 013e 90E0      		ldi r25,hi8(__c.2800)
 392 0140 00C0      		rjmp .L23
 393               	.LVL26:
 394               	.L21:
 395               	.LCFI26:
 396               		.cfi_restore_state
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 490 17 view .LVU83
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 398               		.loc 1 490 38 is_stmt 0 view .LVU84
 399 0142 8FEF      		ldi r24,lo8(-1)
 400 0144 8093 0000 		sts mk_wheel_time_to_max,r24
 401 0148 00C0      		rjmp .L22
 402               		.cfi_endproc
 403               	.LFE18:
 405               		.section	.text.mousekey_param_dec,"ax",@progbits
 407               	mousekey_param_dec:
 408               	.LVL27:
 409               	.LFB19:
 497:../../tmk_core/common/command.c ****     switch (param) {
 410               		.loc 1 497 1 is_stmt 1 view -0
 411               		.cfi_startproc
 412               	/* prologue: function */
 413               	/* frame size = 0 */
 414               	/* stack size = 0 */
 415               	.L__stack_usage = 0
 498:../../tmk_core/common/command.c ****         case 1:
 416               		.loc 1 498 5 view .LVU86
 417 0000 8430      		cpi r24,lo8(4)
 418 0002 01F4      		brne .+2
 419 0004 00C0      		rjmp .L25
 420 0006 00F4      		brsh .L26
 421 0008 8230      		cpi r24,lo8(2)
 422 000a 01F0      		breq .L27
 423 000c 8330      		cpi r24,lo8(3)
 424 000e 01F0      		breq .L28
 425 0010 8130      		cpi r24,lo8(1)
 426 0012 01F0      		breq .L29
 427 0014 0895      		ret
 428               	.L26:
 429 0016 8530      		cpi r24,lo8(5)
 430 0018 01F4      		brne .+2
 431 001a 00C0      		rjmp .L31
 432 001c 8630      		cpi r24,lo8(6)
 433 001e 01F4      		brne .+2
 434 0020 00C0      		rjmp .L32
 435 0022 0895      		ret
 436               	.L29:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 437               		.loc 1 500 13 view .LVU87
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 438               		.loc 1 500 26 is_stmt 0 view .LVU88
 439 0024 8091 0000 		lds r24,mk_delay
 440               	.LVL28:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 441               		.loc 1 500 16 view .LVU89
 442 0028 6817      		cp r22,r24
 443 002a 00F4      		brsh .L33
 501:../../tmk_core/common/command.c ****             else
 444               		.loc 1 501 17 is_stmt 1 view .LVU90
 501:../../tmk_core/common/command.c ****             else
 445               		.loc 1 501 26 is_stmt 0 view .LVU91
 446 002c 861B      		sub r24,r22
 447 002e 8093 0000 		sts mk_delay,r24
 448               	.L34:
 504:../../tmk_core/common/command.c ****             break;
 449               		.loc 1 504 13 is_stmt 1 view .LVU92
 450               	.LBB34:
 504:../../tmk_core/common/command.c ****             break;
 451               		.loc 1 504 13 view .LVU93
 504:../../tmk_core/common/command.c ****             break;
 452               		.loc 1 504 13 view .LVU94
 453               	.LBE34:
 454 0032 8091 0000 		lds r24,mk_delay
 455 0036 1F92      		push __zero_reg__
 456               	.LCFI27:
 457               		.cfi_def_cfa_offset 3
 458 0038 8F93      		push r24
 459               	.LCFI28:
 460               		.cfi_def_cfa_offset 4
 461 003a 80E0      		ldi r24,lo8(__c.2807)
 462 003c 90E0      		ldi r25,hi8(__c.2807)
 463               	.L45:
 539:../../tmk_core/common/command.c ****             break;
 464               		.loc 1 539 13 is_stmt 0 view .LVU95
 465 003e 9F93      		push r25
 466               	.LCFI29:
 467               		.cfi_def_cfa_offset 5
 468 0040 8F93      		push r24
 469               	.LCFI30:
 470               		.cfi_def_cfa_offset 6
 471 0042 0E94 0000 		call __xprintf
 472               	.LVL29:
 540:../../tmk_core/common/command.c ****     }
 473               		.loc 1 540 13 is_stmt 1 view .LVU96
 474 0046 0F90      		pop __tmp_reg__
 475 0048 0F90      		pop __tmp_reg__
 476 004a 0F90      		pop __tmp_reg__
 477 004c 0F90      		pop __tmp_reg__
 478               	.LCFI31:
 479               		.cfi_def_cfa_offset 2
 480               	/* epilogue start */
 542:../../tmk_core/common/command.c **** 
 481               		.loc 1 542 1 is_stmt 0 view .LVU97
 482 004e 0895      		ret
 483               	.LVL30:
 484               	.L33:
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 485               		.loc 1 503 17 is_stmt 1 view .LVU98
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 486               		.loc 1 503 26 is_stmt 0 view .LVU99
 487 0050 1092 0000 		sts mk_delay,__zero_reg__
 488 0054 00C0      		rjmp .L34
 489               	.LVL31:
 490               	.L27:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 491               		.loc 1 507 13 is_stmt 1 view .LVU100
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 492               		.loc 1 507 29 is_stmt 0 view .LVU101
 493 0056 8091 0000 		lds r24,mk_interval
 494               	.LVL32:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 495               		.loc 1 507 16 view .LVU102
 496 005a 6817      		cp r22,r24
 497 005c 00F4      		brsh .L35
 508:../../tmk_core/common/command.c ****             else
 498               		.loc 1 508 17 is_stmt 1 view .LVU103
 508:../../tmk_core/common/command.c ****             else
 499               		.loc 1 508 29 is_stmt 0 view .LVU104
 500 005e 861B      		sub r24,r22
 501 0060 8093 0000 		sts mk_interval,r24
 502               	.L36:
 511:../../tmk_core/common/command.c ****             break;
 503               		.loc 1 511 13 is_stmt 1 view .LVU105
 504               	.LBB35:
 511:../../tmk_core/common/command.c ****             break;
 505               		.loc 1 511 13 view .LVU106
 511:../../tmk_core/common/command.c ****             break;
 506               		.loc 1 511 13 view .LVU107
 507               	.LBE35:
 508 0064 8091 0000 		lds r24,mk_interval
 509 0068 1F92      		push __zero_reg__
 510               	.LCFI32:
 511               		.cfi_remember_state
 512               		.cfi_def_cfa_offset 3
 513 006a 8F93      		push r24
 514               	.LCFI33:
 515               		.cfi_def_cfa_offset 4
 516 006c 80E0      		ldi r24,lo8(__c.2811)
 517 006e 90E0      		ldi r25,hi8(__c.2811)
 518 0070 00C0      		rjmp .L45
 519               	.L35:
 520               	.LCFI34:
 521               		.cfi_restore_state
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 522               		.loc 1 510 17 view .LVU108
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 523               		.loc 1 510 29 is_stmt 0 view .LVU109
 524 0072 1092 0000 		sts mk_interval,__zero_reg__
 525 0076 00C0      		rjmp .L36
 526               	.LVL33:
 527               	.L28:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 528               		.loc 1 514 13 is_stmt 1 view .LVU110
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 529               		.loc 1 514 30 is_stmt 0 view .LVU111
 530 0078 8091 0000 		lds r24,mk_max_speed
 531               	.LVL34:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 532               		.loc 1 514 16 view .LVU112
 533 007c 6817      		cp r22,r24
 534 007e 00F4      		brsh .L37
 515:../../tmk_core/common/command.c ****             else
 535               		.loc 1 515 17 is_stmt 1 view .LVU113
 515:../../tmk_core/common/command.c ****             else
 536               		.loc 1 515 30 is_stmt 0 view .LVU114
 537 0080 861B      		sub r24,r22
 538 0082 8093 0000 		sts mk_max_speed,r24
 539               	.L38:
 518:../../tmk_core/common/command.c ****             break;
 540               		.loc 1 518 13 is_stmt 1 view .LVU115
 541               	.LBB36:
 518:../../tmk_core/common/command.c ****             break;
 542               		.loc 1 518 13 view .LVU116
 518:../../tmk_core/common/command.c ****             break;
 543               		.loc 1 518 13 view .LVU117
 544               	.LBE36:
 545 0086 8091 0000 		lds r24,mk_max_speed
 546 008a 1F92      		push __zero_reg__
 547               	.LCFI35:
 548               		.cfi_remember_state
 549               		.cfi_def_cfa_offset 3
 550 008c 8F93      		push r24
 551               	.LCFI36:
 552               		.cfi_def_cfa_offset 4
 553 008e 80E0      		ldi r24,lo8(__c.2814)
 554 0090 90E0      		ldi r25,hi8(__c.2814)
 555 0092 00C0      		rjmp .L45
 556               	.L37:
 557               	.LCFI37:
 558               		.cfi_restore_state
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 559               		.loc 1 517 17 view .LVU118
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 560               		.loc 1 517 30 is_stmt 0 view .LVU119
 561 0094 1092 0000 		sts mk_max_speed,__zero_reg__
 562 0098 00C0      		rjmp .L38
 563               	.LVL35:
 564               	.L25:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 565               		.loc 1 521 13 is_stmt 1 view .LVU120
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 566               		.loc 1 521 32 is_stmt 0 view .LVU121
 567 009a 8091 0000 		lds r24,mk_time_to_max
 568               	.LVL36:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 569               		.loc 1 521 16 view .LVU122
 570 009e 6817      		cp r22,r24
 571 00a0 00F4      		brsh .L39
 522:../../tmk_core/common/command.c ****             else
 572               		.loc 1 522 17 is_stmt 1 view .LVU123
 522:../../tmk_core/common/command.c ****             else
 573               		.loc 1 522 32 is_stmt 0 view .LVU124
 574 00a2 861B      		sub r24,r22
 575 00a4 8093 0000 		sts mk_time_to_max,r24
 576               	.L40:
 525:../../tmk_core/common/command.c ****             break;
 577               		.loc 1 525 13 is_stmt 1 view .LVU125
 578               	.LBB37:
 525:../../tmk_core/common/command.c ****             break;
 579               		.loc 1 525 13 view .LVU126
 525:../../tmk_core/common/command.c ****             break;
 580               		.loc 1 525 13 view .LVU127
 581               	.LBE37:
 582 00a8 8091 0000 		lds r24,mk_time_to_max
 583 00ac 1F92      		push __zero_reg__
 584               	.LCFI38:
 585               		.cfi_remember_state
 586               		.cfi_def_cfa_offset 3
 587 00ae 8F93      		push r24
 588               	.LCFI39:
 589               		.cfi_def_cfa_offset 4
 590 00b0 80E0      		ldi r24,lo8(__c.2817)
 591 00b2 90E0      		ldi r25,hi8(__c.2817)
 592 00b4 00C0      		rjmp .L45
 593               	.L39:
 594               	.LCFI40:
 595               		.cfi_restore_state
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 596               		.loc 1 524 17 view .LVU128
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 597               		.loc 1 524 32 is_stmt 0 view .LVU129
 598 00b6 1092 0000 		sts mk_time_to_max,__zero_reg__
 599 00ba 00C0      		rjmp .L40
 600               	.LVL37:
 601               	.L31:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 602               		.loc 1 528 13 is_stmt 1 view .LVU130
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 603               		.loc 1 528 36 is_stmt 0 view .LVU131
 604 00bc 8091 0000 		lds r24,mk_wheel_max_speed
 605               	.LVL38:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 606               		.loc 1 528 16 view .LVU132
 607 00c0 6817      		cp r22,r24
 608 00c2 00F4      		brsh .L41
 529:../../tmk_core/common/command.c ****             else
 609               		.loc 1 529 17 is_stmt 1 view .LVU133
 529:../../tmk_core/common/command.c ****             else
 610               		.loc 1 529 36 is_stmt 0 view .LVU134
 611 00c4 861B      		sub r24,r22
 612 00c6 8093 0000 		sts mk_wheel_max_speed,r24
 613               	.L42:
 532:../../tmk_core/common/command.c ****             break;
 614               		.loc 1 532 13 is_stmt 1 view .LVU135
 615               	.LBB38:
 532:../../tmk_core/common/command.c ****             break;
 616               		.loc 1 532 13 view .LVU136
 532:../../tmk_core/common/command.c ****             break;
 617               		.loc 1 532 13 view .LVU137
 618               	.LBE38:
 619 00ca 8091 0000 		lds r24,mk_wheel_max_speed
 620 00ce 1F92      		push __zero_reg__
 621               	.LCFI41:
 622               		.cfi_remember_state
 623               		.cfi_def_cfa_offset 3
 624 00d0 8F93      		push r24
 625               	.LCFI42:
 626               		.cfi_def_cfa_offset 4
 627 00d2 80E0      		ldi r24,lo8(__c.2820)
 628 00d4 90E0      		ldi r25,hi8(__c.2820)
 629 00d6 00C0      		rjmp .L45
 630               	.L41:
 631               	.LCFI43:
 632               		.cfi_restore_state
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 633               		.loc 1 531 17 view .LVU138
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 634               		.loc 1 531 36 is_stmt 0 view .LVU139
 635 00d8 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 636 00dc 00C0      		rjmp .L42
 637               	.LVL39:
 638               	.L32:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 639               		.loc 1 535 13 is_stmt 1 view .LVU140
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 640               		.loc 1 535 38 is_stmt 0 view .LVU141
 641 00de 8091 0000 		lds r24,mk_wheel_time_to_max
 642               	.LVL40:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 643               		.loc 1 535 16 view .LVU142
 644 00e2 6817      		cp r22,r24
 645 00e4 00F4      		brsh .L43
 536:../../tmk_core/common/command.c ****             else
 646               		.loc 1 536 17 is_stmt 1 view .LVU143
 536:../../tmk_core/common/command.c ****             else
 647               		.loc 1 536 38 is_stmt 0 view .LVU144
 648 00e6 861B      		sub r24,r22
 649 00e8 8093 0000 		sts mk_wheel_time_to_max,r24
 650               	.L44:
 539:../../tmk_core/common/command.c ****             break;
 651               		.loc 1 539 13 is_stmt 1 view .LVU145
 652               	.LBB39:
 539:../../tmk_core/common/command.c ****             break;
 653               		.loc 1 539 13 view .LVU146
 539:../../tmk_core/common/command.c ****             break;
 654               		.loc 1 539 13 view .LVU147
 655               	.LBE39:
 656 00ec 8091 0000 		lds r24,mk_wheel_time_to_max
 657 00f0 1F92      		push __zero_reg__
 658               	.LCFI44:
 659               		.cfi_remember_state
 660               		.cfi_def_cfa_offset 3
 661 00f2 8F93      		push r24
 662               	.LCFI45:
 663               		.cfi_def_cfa_offset 4
 664 00f4 80E0      		ldi r24,lo8(__c.2823)
 665 00f6 90E0      		ldi r25,hi8(__c.2823)
 666 00f8 00C0      		rjmp .L45
 667               	.L43:
 668               	.LCFI46:
 669               		.cfi_restore_state
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 670               		.loc 1 538 17 view .LVU148
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 671               		.loc 1 538 38 is_stmt 0 view .LVU149
 672 00fa 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 673 00fe 00C0      		rjmp .L44
 674               		.cfi_endproc
 675               	.LFE19:
 677               		.section	.text.switch_default_layer,"ax",@progbits
 679               	switch_default_layer:
 680               	.LVL41:
 681               	.LFB23:
 566:../../tmk_core/common/command.c **** 
 567:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 568:../../tmk_core/common/command.c **** {
 569:../../tmk_core/common/command.c ****     switch (code) {
 570:../../tmk_core/common/command.c ****         case KC_H:
 571:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 572:../../tmk_core/common/command.c ****             mousekey_console_help();
 573:../../tmk_core/common/command.c ****             break;
 574:../../tmk_core/common/command.c ****         case KC_Q:
 575:../../tmk_core/common/command.c ****         case KC_ESC:
 576:../../tmk_core/common/command.c ****             if (mousekey_param) {
 577:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 578:../../tmk_core/common/command.c ****             } else {
 579:../../tmk_core/common/command.c ****                 print("C> ");
 580:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 581:../../tmk_core/common/command.c ****                 return false;
 582:../../tmk_core/common/command.c ****             }
 583:../../tmk_core/common/command.c ****             break;
 584:../../tmk_core/common/command.c ****         case KC_P:
 585:../../tmk_core/common/command.c ****             mousekey_param_print();
 586:../../tmk_core/common/command.c ****             break;
 587:../../tmk_core/common/command.c ****         case KC_1:
 588:../../tmk_core/common/command.c ****         case KC_2:
 589:../../tmk_core/common/command.c ****         case KC_3:
 590:../../tmk_core/common/command.c ****         case KC_4:
 591:../../tmk_core/common/command.c ****         case KC_5:
 592:../../tmk_core/common/command.c ****         case KC_6:
 593:../../tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 594:../../tmk_core/common/command.c ****             break;
 595:../../tmk_core/common/command.c ****         case KC_UP:
 596:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 597:../../tmk_core/common/command.c ****             break;
 598:../../tmk_core/common/command.c ****         case KC_DOWN:
 599:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 600:../../tmk_core/common/command.c ****             break;
 601:../../tmk_core/common/command.c ****         case KC_PGUP:
 602:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 603:../../tmk_core/common/command.c ****             break;
 604:../../tmk_core/common/command.c ****         case KC_PGDN:
 605:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 606:../../tmk_core/common/command.c ****             break;
 607:../../tmk_core/common/command.c ****         case KC_D:
 608:../../tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 609:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 610:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 611:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 612:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 613:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 614:../../tmk_core/common/command.c ****             print("set default\n");
 615:../../tmk_core/common/command.c ****             break;
 616:../../tmk_core/common/command.c ****         default:
 617:../../tmk_core/common/command.c ****             print("?");
 618:../../tmk_core/common/command.c ****             return false;
 619:../../tmk_core/common/command.c ****     }
 620:../../tmk_core/common/command.c ****     if (mousekey_param) {
 621:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 622:../../tmk_core/common/command.c ****     } else {
 623:../../tmk_core/common/command.c ****         print("M>" );
 624:../../tmk_core/common/command.c ****     }
 625:../../tmk_core/common/command.c ****     return true;
 626:../../tmk_core/common/command.c **** }
 627:../../tmk_core/common/command.c **** #endif
 628:../../tmk_core/common/command.c **** 
 629:../../tmk_core/common/command.c **** 
 630:../../tmk_core/common/command.c **** /***********************************************************
 631:../../tmk_core/common/command.c ****  * Utilities
 632:../../tmk_core/common/command.c ****  ***********************************************************/
 633:../../tmk_core/common/command.c **** #if MOUSEKEY_ENABLE
 634:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code)
 635:../../tmk_core/common/command.c **** {
 636:../../tmk_core/common/command.c ****     switch (code) {
 637:../../tmk_core/common/command.c ****         case KC_1: return 1;
 638:../../tmk_core/common/command.c ****         case KC_2: return 2;
 639:../../tmk_core/common/command.c ****         case KC_3: return 3;
 640:../../tmk_core/common/command.c ****         case KC_4: return 4;
 641:../../tmk_core/common/command.c ****         case KC_5: return 5;
 642:../../tmk_core/common/command.c ****         case KC_6: return 6;
 643:../../tmk_core/common/command.c ****         case KC_7: return 7;
 644:../../tmk_core/common/command.c ****         case KC_8: return 8;
 645:../../tmk_core/common/command.c ****         case KC_9: return 9;
 646:../../tmk_core/common/command.c ****         case KC_0: return 0;
 647:../../tmk_core/common/command.c ****     }
 648:../../tmk_core/common/command.c ****     return 0;
 649:../../tmk_core/common/command.c **** }
 650:../../tmk_core/common/command.c **** #endif
 651:../../tmk_core/common/command.c **** 
 652:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 653:../../tmk_core/common/command.c **** {
 682               		.loc 1 653 1 is_stmt 1 view -0
 683               		.cfi_startproc
 684               		.loc 1 653 1 is_stmt 0 view .LVU151
 685 0000 CF93      		push r28
 686               	.LCFI47:
 687               		.cfi_def_cfa_offset 3
 688               		.cfi_offset 28, -2
 689 0002 DF93      		push r29
 690               	.LCFI48:
 691               		.cfi_def_cfa_offset 4
 692               		.cfi_offset 29, -3
 693 0004 00D0      		rcall .
 694 0006 00D0      		rcall .
 695               	.LCFI49:
 696               		.cfi_def_cfa_offset 8
 697 0008 CDB7      		in r28,__SP_L__
 698 000a DEB7      		in r29,__SP_H__
 699               	.LCFI50:
 700               		.cfi_def_cfa_register 28
 701               	/* prologue: function */
 702               	/* frame size = 4 */
 703               	/* stack size = 6 */
 704               	.L__stack_usage = 6
 705 000c 8983      		std Y+1,r24
 654:../../tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 706               		.loc 1 654 5 is_stmt 1 view .LVU152
 707               	.LBB40:
 708               		.loc 1 654 5 view .LVU153
 709               		.loc 1 654 5 view .LVU154
 710               	.LBE40:
 711 000e 1F92      		push __zero_reg__
 712 0010 8F93      		push r24
 713 0012 80E0      		ldi r24,lo8(__c.2879)
 714 0014 90E0      		ldi r25,hi8(__c.2879)
 715               	.LVL42:
 716               		.loc 1 654 5 is_stmt 0 view .LVU155
 717 0016 9F93      		push r25
 718 0018 8F93      		push r24
 719 001a 0E94 0000 		call __xprintf
 720               	.LVL43:
 655:../../tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 721               		.loc 1 655 5 is_stmt 1 view .LVU156
 722 001e 81E0      		ldi r24,lo8(1)
 723 0020 90E0      		ldi r25,0
 724 0022 A0E0      		ldi r26,0
 725 0024 B0E0      		ldi r27,0
 726 0026 9C01      		movw r18,r24
 727 0028 AD01      		movw r20,r26
 728 002a 0980      		ldd r0,Y+1
 729 002c 00C0      		rjmp 2f
 730               		1:
 731 002e 220F      		lsl r18
 732 0030 331F      		rol r19
 733 0032 441F      		rol r20
 734 0034 551F      		rol r21
 735               		2:
 736 0036 0A94      		dec r0
 737 0038 02F4      		brpl 1b
 738 003a 2983      		std Y+1,r18
 739 003c 3A83      		std Y+2,r19
 740 003e 4B83      		std Y+3,r20
 741 0040 5C83      		std Y+4,r21
 742               	.LVL44:
 743               		.loc 1 655 5 is_stmt 0 view .LVU157
 744 0042 CA01      		movw r24,r20
 745 0044 B901      		movw r22,r18
 746 0046 0E94 0000 		call default_layer_set
 747               	.LVL45:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 748               		.loc 1 656 5 is_stmt 1 view .LVU158
 749 004a 0F90      		pop __tmp_reg__
 750 004c 0F90      		pop __tmp_reg__
 751 004e 0F90      		pop __tmp_reg__
 752 0050 0F90      		pop __tmp_reg__
 753               	/* epilogue start */
 657:../../tmk_core/common/command.c **** }
 754               		.loc 1 657 1 is_stmt 0 view .LVU159
 755 0052 0F90      		pop __tmp_reg__
 756 0054 0F90      		pop __tmp_reg__
 757 0056 0F90      		pop __tmp_reg__
 758 0058 0F90      		pop __tmp_reg__
 759 005a DF91      		pop r29
 760 005c CF91      		pop r28
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 761               		.loc 1 656 5 view .LVU160
 762 005e 0C94 0000 		jmp clear_keyboard
 763               	.LVL46:
 764               		.cfi_endproc
 765               	.LFE23:
 767               		.section	.text.command_common,"ax",@progbits
 769               	command_common:
 770               	.LFB14:
 183:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 771               		.loc 1 183 1 is_stmt 1 view -0
 772               		.cfi_startproc
 773               	/* prologue: function */
 774               	/* frame size = 0 */
 775               	/* stack size = 0 */
 776               	.L__stack_usage = 0
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 777               		.loc 1 190 5 view .LVU162
 778 0000 8A32      		cpi r24,lo8(42)
 779 0002 00F4      		brsh .L48
 780 0004 8630      		cpi r24,lo8(6)
 781 0006 00F0      		brlo .L49
 782 0008 EAEF      		ldi r30,lo8(-6)
 783 000a E80F      		add r30,r24
 784 000c E432      		cpi r30,lo8(36)
 785 000e 00F4      		brsh .L49
 786 0010 F0E0      		ldi r31,0
 787 0012 E050      		subi r30,lo8(-(gs(.L51)))
 788 0014 F040      		sbci r31,hi8(-(gs(.L51)))
 789 0016 0C94 0000 		jmp __tablejump2__
 790               		.section	.jumptables.gcc.command_common,"a",@progbits
 791               		.p2align	1
 792               	.L51:
 793 0000 0000      		.word gs(.L60)
 794 0002 0000      		.word gs(.L59)
 795 0004 0000      		.word gs(.L49)
 796 0006 0000      		.word gs(.L49)
 797 0008 0000      		.word gs(.L49)
 798 000a 0000      		.word gs(.L58)
 799 000c 0000      		.word gs(.L49)
 800 000e 0000      		.word gs(.L49)
 801 0010 0000      		.word gs(.L57)
 802 0012 0000      		.word gs(.L49)
 803 0014 0000      		.word gs(.L56)
 804 0016 0000      		.word gs(.L49)
 805 0018 0000      		.word gs(.L49)
 806 001a 0000      		.word gs(.L49)
 807 001c 0000      		.word gs(.L49)
 808 001e 0000      		.word gs(.L49)
 809 0020 0000      		.word gs(.L55)
 810 0022 0000      		.word gs(.L49)
 811 0024 0000      		.word gs(.L49)
 812 0026 0000      		.word gs(.L54)
 813 0028 0000      		.word gs(.L49)
 814 002a 0000      		.word gs(.L53)
 815 002c 0000      		.word gs(.L49)
 816 002e 0000      		.word gs(.L49)
 817 0030 0000      		.word gs(.L52)
 818 0032 0000      		.word gs(.L52)
 819 0034 0000      		.word gs(.L52)
 820 0036 0000      		.word gs(.L52)
 821 0038 0000      		.word gs(.L52)
 822 003a 0000      		.word gs(.L52)
 823 003c 0000      		.word gs(.L52)
 824 003e 0000      		.word gs(.L52)
 825 0040 0000      		.word gs(.L52)
 826 0042 0000      		.word gs(.L50)
 827 0044 0000      		.word gs(.L49)
 828 0046 0000      		.word gs(.L50)
 829               		.section	.text.command_common
 830               	.L48:
 831 001a 8334      		cpi r24,lo8(67)
 832 001c 00F4      		brsh .L61
 833 001e 8A33      		cpi r24,lo8(58)
 834 0020 00F0      		brlo .+2
 835 0022 00C0      		rjmp .L62
 836 0024 8533      		cpi r24,lo8(53)
 837 0026 01F4      		brne .+2
 838 0028 00C0      		rjmp .L50
 839 002a 8833      		cpi r24,lo8(56)
 840 002c 01F0      		breq .L58
 841               	.L49:
 382:../../tmk_core/common/command.c ****             return false;
 842               		.loc 1 382 13 view .LVU163
 843               	.LBB71:
 382:../../tmk_core/common/command.c ****             return false;
 844               		.loc 1 382 13 view .LVU164
 382:../../tmk_core/common/command.c ****             return false;
 845               		.loc 1 382 13 view .LVU165
 846               	.LBE71:
 847 002e 80E0      		ldi r24,lo8(__c.2714)
 848 0030 90E0      		ldi r25,hi8(__c.2714)
 849 0032 0E94 0000 		call xputs
 383:../../tmk_core/common/command.c ****     }
 850               		.loc 1 383 13 view .LVU166
 383:../../tmk_core/common/command.c ****     }
 851               		.loc 1 383 20 is_stmt 0 view .LVU167
 852 0036 80E0      		ldi r24,0
 853               	/* epilogue start */
 386:../../tmk_core/common/command.c **** 
 854               		.loc 1 386 1 view .LVU168
 855 0038 0895      		ret
 856               	.L61:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 857               		.loc 1 190 5 view .LVU169
 858 003a 8334      		cpi r24,lo8(67)
 859 003c 01F4      		brne .+2
 860 003e 00C0      		rjmp .L50
 861 0040 8834      		cpi r24,lo8(72)
 862 0042 01F4      		brne .L49
 237:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 863               		.loc 1 237 13 is_stmt 1 view .LVU170
 864 0044 0E94 0000 		call clear_keyboard
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 865               		.loc 1 238 13 view .LVU171
 866               	.LBB72:
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 867               		.loc 1 238 13 view .LVU172
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 868               		.loc 1 238 13 view .LVU173
 869               	.LBE72:
 870 0048 80E0      		ldi r24,lo8(__c.2661)
 871 004a 90E0      		ldi r25,hi8(__c.2661)
 872 004c 0E94 0000 		call xputs
 239:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 873               		.loc 1 239 13 view .LVU174
 874               	.LBB73:
 875               	.LBI73:
 876               		.file 2 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 877               		.loc 2 166 1 view .LVU175
 878               	.LBB74:
 167:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	double __tmp ;
 879               		.loc 2 168 2 view .LVU176
 169:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 880               		.loc 2 172 2 view .LVU177
 173:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 881               		.loc 2 173 2 view .LVU178
 174:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 882               		.loc 2 174 2 view .LVU179
 175:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 883               		.loc 2 184 3 view .LVU180
 185:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/9.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 884               		.loc 2 187 2 view .LVU181
 885 0050 2FEF      		ldi r18,lo8(3199999)
 886 0052 83ED      		ldi r24,hi8(3199999)
 887 0054 90E3      		ldi r25,hlo8(3199999)
 888 0056 2150      	1:	subi r18,1
 889 0058 8040      		sbci r24,0
 890 005a 9040      		sbci r25,0
 891 005c 01F4      		brne 1b
 892 005e 00C0      		rjmp .
 893 0060 0000      		nop
 894               	.LBE74:
 895               	.LBE73:
 240:../../tmk_core/common/command.c ****             break;
 896               		.loc 1 240 13 view .LVU182
 897 0062 0E94 0000 		call bootloader_jump
 898               	.L78:
 241:../../tmk_core/common/command.c ****         case KC_D:
 899               		.loc 1 241 13 view .LVU183
 385:../../tmk_core/common/command.c **** }
 900               		.loc 1 385 12 is_stmt 0 view .LVU184
 901 0066 81E0      		ldi r24,lo8(1)
 241:../../tmk_core/common/command.c ****         case KC_D:
 902               		.loc 1 241 13 view .LVU185
 903 0068 0895      		ret
 904               	.L58:
 225:../../tmk_core/common/command.c ****             break;
 905               		.loc 1 225 13 is_stmt 1 view .LVU186
 906               	.LBB75:
 907               	.LBI75:
 116:../../tmk_core/common/command.c **** {
 908               		.loc 1 116 13 view .LVU187
 909               	.LBB76:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 910               		.loc 1 118 5 view .LVU188
 911               	.LBE76:
 912               	.LBE75:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 913               		.loc 1 118 5 view .LVU189
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 914               		.loc 1 118 5 view .LVU190
 915               	.LBB78:
 916               	.LBB77:
 917 006a 80E0      		ldi r24,lo8(__c.2649)
 918 006c 90E0      		ldi r25,hi8(__c.2649)
 919               	.L79:
 920               	.LBE77:
 921               	.LBE78:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 922               		.loc 1 325 13 is_stmt 0 view .LVU191
 923 006e 0E94 0000 		call xputs
 333:../../tmk_core/common/command.c ****         case KC_S:
 924               		.loc 1 333 13 is_stmt 1 view .LVU192
 925 0072 00C0      		rjmp .L78
 926               	.L60:
 228:../../tmk_core/common/command.c ****             debug_keyboard = false;
 927               		.loc 1 228 13 view .LVU193
 229:../../tmk_core/common/command.c ****             debug_mouse    = false;
 928               		.loc 1 229 13 view .LVU194
 230:../../tmk_core/common/command.c ****             debug_enable   = false;
 929               		.loc 1 230 13 view .LVU195
 231:../../tmk_core/common/command.c ****             command_console_help();
 930               		.loc 1 231 13 view .LVU196
 231:../../tmk_core/common/command.c ****             command_console_help();
 931               		.loc 1 231 28 is_stmt 0 view .LVU197
 932 0074 8091 0000 		lds r24,debug_config
 933 0078 807F      		andi r24,lo8(-16)
 934 007a 8093 0000 		sts debug_config,r24
 232:../../tmk_core/common/command.c ****             print("C> ");
 935               		.loc 1 232 13 is_stmt 1 view .LVU198
 936               	.LBB79:
 937               	.LBI79:
 392:../../tmk_core/common/command.c **** {
 938               		.loc 1 392 13 view .LVU199
 939               	.LBB80:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 940               		.loc 1 394 5 view .LVU200
 941               	.LBE80:
 942               	.LBE79:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 943               		.loc 1 394 5 view .LVU201
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 944               		.loc 1 394 5 view .LVU202
 945               	.LBB82:
 946               	.LBB81:
 947 007e 80E0      		ldi r24,lo8(__c.2719)
 948 0080 90E0      		ldi r25,hi8(__c.2719)
 949 0082 0E94 0000 		call xputs
 950               	.LBE81:
 951               	.LBE82:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 952               		.loc 1 233 13 view .LVU203
 953               	.LBB83:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 954               		.loc 1 233 13 view .LVU204
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 955               		.loc 1 233 13 view .LVU205
 956               	.LBE83:
 957 0086 80E0      		ldi r24,lo8(__c.2658)
 958 0088 90E0      		ldi r25,hi8(__c.2658)
 959 008a 0E94 0000 		call xputs
 234:../../tmk_core/common/command.c ****             break;
 960               		.loc 1 234 13 view .LVU206
 234:../../tmk_core/common/command.c ****             break;
 961               		.loc 1 234 27 is_stmt 0 view .LVU207
 962 008e 81E0      		ldi r24,lo8(1)
 963 0090 8093 0000 		sts command_state,r24
 235:../../tmk_core/common/command.c ****         case KC_PAUSE:
 964               		.loc 1 235 13 is_stmt 1 view .LVU208
 965 0094 0895      		ret
 966               	.L59:
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 967               		.loc 1 243 13 view .LVU209
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 968               		.loc 1 243 17 is_stmt 0 view .LVU210
 969 0096 8091 0000 		lds r24,debug_config
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 970               		.loc 1 243 16 view .LVU211
 971 009a 80FF      		sbrs r24,0
 972 009c 00C0      		rjmp .L65
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 973               		.loc 1 244 17 is_stmt 1 view .LVU212
 974               	.LBB84:
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 975               		.loc 1 244 17 view .LVU213
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 976               		.loc 1 244 17 view .LVU214
 977               	.LBE84:
 978 009e 80E0      		ldi r24,lo8(__c.2664)
 979 00a0 90E0      		ldi r25,hi8(__c.2664)
 980 00a2 0E94 0000 		call xputs
 245:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 981               		.loc 1 245 17 view .LVU215
 246:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 982               		.loc 1 246 17 view .LVU216
 247:../../tmk_core/common/command.c ****                 debug_enable   = false;
 983               		.loc 1 247 17 view .LVU217
 248:../../tmk_core/common/command.c ****             } else {
 984               		.loc 1 248 17 view .LVU218
 248:../../tmk_core/common/command.c ****             } else {
 985               		.loc 1 248 32 is_stmt 0 view .LVU219
 986 00a6 8091 0000 		lds r24,debug_config
 987 00aa 807F      		andi r24,lo8(-16)
 988               	.L80:
 276:../../tmk_core/common/command.c ****             } else {
 989               		.loc 1 276 30 view .LVU220
 990 00ac 8093 0000 		sts debug_config,r24
 991 00b0 00C0      		rjmp .L78
 992               	.L65:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 993               		.loc 1 250 17 is_stmt 1 view .LVU221
 994               	.LBB85:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 995               		.loc 1 250 17 view .LVU222
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 996               		.loc 1 250 17 view .LVU223
 997               	.LBE85:
 998 00b2 80E0      		ldi r24,lo8(__c.2666)
 999 00b4 90E0      		ldi r25,hi8(__c.2666)
 1000               	.L81:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1001               		.loc 1 275 17 is_stmt 0 view .LVU224
 1002 00b6 0E94 0000 		call xputs
 276:../../tmk_core/common/command.c ****             } else {
 1003               		.loc 1 276 17 is_stmt 1 view .LVU225
 276:../../tmk_core/common/command.c ****             } else {
 1004               		.loc 1 276 30 is_stmt 0 view .LVU226
 1005 00ba 8091 0000 		lds r24,debug_config
 1006 00be 8160      		ori r24,lo8(1<<0)
 1007 00c0 00C0      		rjmp .L80
 1008               	.L53:
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 1009               		.loc 1 255 13 is_stmt 1 view .LVU227
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 1010               		.loc 1 255 29 is_stmt 0 view .LVU228
 1011 00c2 9091 0000 		lds r25,debug_config
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 1012               		.loc 1 255 26 view .LVU229
 1013 00c6 892F      		mov r24,r25
 1014 00c8 8D7F      		andi r24,~(1<<1)
 1015 00ca 91FF      		sbrs r25,1
 1016 00cc 8260      		ori r24,1<<1
 1017 00ce 8093 0000 		sts debug_config,r24
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1018               		.loc 1 256 13 is_stmt 1 view .LVU230
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1019               		.loc 1 256 16 is_stmt 0 view .LVU231
 1020 00d2 81FF      		sbrs r24,1
 1021 00d4 00C0      		rjmp .L66
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 1022               		.loc 1 257 17 is_stmt 1 view .LVU232
 1023               	.LBB86:
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 1024               		.loc 1 257 17 view .LVU233
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 1025               		.loc 1 257 17 view .LVU234
 1026               	.LBE86:
 1027 00d6 80E0      		ldi r24,lo8(__c.2669)
 1028 00d8 90E0      		ldi r25,hi8(__c.2669)
 1029 00da 00C0      		rjmp .L81
 1030               	.L66:
 260:../../tmk_core/common/command.c ****             }
 1031               		.loc 1 260 17 view .LVU235
 1032               	.LBB87:
 260:../../tmk_core/common/command.c ****             }
 1033               		.loc 1 260 17 view .LVU236
 260:../../tmk_core/common/command.c ****             }
 1034               		.loc 1 260 17 view .LVU237
 1035               	.LBE87:
 1036 00dc 80E0      		ldi r24,lo8(__c.2671)
 1037 00de 90E0      		ldi r25,hi8(__c.2671)
 1038 00e0 00C0      		rjmp .L79
 1039               	.L57:
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1040               		.loc 1 264 13 view .LVU238
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1041               		.loc 1 264 31 is_stmt 0 view .LVU239
 1042 00e2 9091 0000 		lds r25,debug_config
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1043               		.loc 1 264 28 view .LVU240
 1044 00e6 892F      		mov r24,r25
 1045 00e8 8B7F      		andi r24,~(1<<2)
 1046 00ea 92FF      		sbrs r25,2
 1047 00ec 8460      		ori r24,1<<2
 1048 00ee 8093 0000 		sts debug_config,r24
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1049               		.loc 1 265 13 is_stmt 1 view .LVU241
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1050               		.loc 1 265 16 is_stmt 0 view .LVU242
 1051 00f2 82FF      		sbrs r24,2
 1052 00f4 00C0      		rjmp .L67
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1053               		.loc 1 266 17 is_stmt 1 view .LVU243
 1054               	.LBB88:
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1055               		.loc 1 266 17 view .LVU244
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1056               		.loc 1 266 17 view .LVU245
 1057               	.LBE88:
 1058 00f6 80E0      		ldi r24,lo8(__c.2674)
 1059 00f8 90E0      		ldi r25,hi8(__c.2674)
 1060 00fa 00C0      		rjmp .L81
 1061               	.L67:
 269:../../tmk_core/common/command.c ****             }
 1062               		.loc 1 269 17 view .LVU246
 1063               	.LBB89:
 269:../../tmk_core/common/command.c ****             }
 1064               		.loc 1 269 17 view .LVU247
 269:../../tmk_core/common/command.c ****             }
 1065               		.loc 1 269 17 view .LVU248
 1066               	.LBE89:
 1067 00fc 80E0      		ldi r24,lo8(__c.2676)
 1068 00fe 90E0      		ldi r25,hi8(__c.2676)
 1069 0100 00C0      		rjmp .L79
 1070               	.L56:
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1071               		.loc 1 273 13 view .LVU249
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1072               		.loc 1 273 28 is_stmt 0 view .LVU250
 1073 0102 9091 0000 		lds r25,debug_config
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1074               		.loc 1 273 25 view .LVU251
 1075 0106 892F      		mov r24,r25
 1076 0108 877F      		andi r24,~(1<<3)
 1077 010a 93FF      		sbrs r25,3
 1078 010c 8860      		ori r24,1<<3
 1079 010e 8093 0000 		sts debug_config,r24
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1080               		.loc 1 274 13 is_stmt 1 view .LVU252
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1081               		.loc 1 274 16 is_stmt 0 view .LVU253
 1082 0112 83FF      		sbrs r24,3
 1083 0114 00C0      		rjmp .L68
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1084               		.loc 1 275 17 is_stmt 1 view .LVU254
 1085               	.LBB90:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1086               		.loc 1 275 17 view .LVU255
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1087               		.loc 1 275 17 view .LVU256
 1088               	.LBE90:
 1089 0116 80E0      		ldi r24,lo8(__c.2679)
 1090 0118 90E0      		ldi r25,hi8(__c.2679)
 1091 011a 00C0      		rjmp .L81
 1092               	.L68:
 278:../../tmk_core/common/command.c ****             }
 1093               		.loc 1 278 17 view .LVU257
 1094               	.LBB91:
 278:../../tmk_core/common/command.c ****             }
 1095               		.loc 1 278 17 view .LVU258
 278:../../tmk_core/common/command.c ****             }
 1096               		.loc 1 278 17 view .LVU259
 1097               	.LBE91:
 1098 011c 80E0      		ldi r24,lo8(__c.2681)
 1099 011e 90E0      		ldi r25,hi8(__c.2681)
 1100 0120 00C0      		rjmp .L79
 1101               	.L54:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1102               		.loc 1 282 13 view .LVU260
 1103               	.LBB92:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1104               		.loc 1 282 13 view .LVU261
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1105               		.loc 1 282 13 view .LVU262
 1106               	.LBE92:
 1107 0122 80E0      		ldi r24,lo8(__c.2684)
 1108 0124 90E0      		ldi r25,hi8(__c.2684)
 1109 0126 0E94 0000 		call xputs
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1110               		.loc 1 283 13 view .LVU263
 1111               	.LBB93:
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1112               		.loc 1 283 13 view .LVU264
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1113               		.loc 1 283 13 view .LVU265
 1114               	.LBE93:
 1115 012a 80E0      		ldi r24,lo8(__c.2686)
 1116 012c 90E0      		ldi r25,hi8(__c.2686)
 1117 012e 0E94 0000 		call xputs
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1118               		.loc 1 284 13 view .LVU266
 1119               	.LBB94:
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1120               		.loc 1 284 13 view .LVU267
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1121               		.loc 1 284 13 view .LVU268
 1122               	.LBE94:
 1123 0132 80E0      		ldi r24,lo8(__c.2688)
 1124 0134 90E0      		ldi r25,hi8(__c.2688)
 1125 0136 0E94 0000 		call xputs
 287:../../tmk_core/common/command.c ****             /* build options */
 1126               		.loc 1 287 13 view .LVU269
 1127               	.LBB95:
 287:../../tmk_core/common/command.c ****             /* build options */
 1128               		.loc 1 287 13 view .LVU270
 287:../../tmk_core/common/command.c ****             /* build options */
 1129               		.loc 1 287 13 view .LVU271
 1130               	.LBE95:
 1131 013a 80E0      		ldi r24,lo8(__c.2690)
 1132 013c 90E0      		ldi r25,hi8(__c.2690)
 1133 013e 0E94 0000 		call xputs
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1134               		.loc 1 289 13 view .LVU272
 1135               	.LBB96:
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1136               		.loc 1 289 13 view .LVU273
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1137               		.loc 1 289 13 view .LVU274
 1138               	.LBE96:
 1139 0142 80E0      		ldi r24,lo8(__c.2692)
 1140 0144 90E0      		ldi r25,hi8(__c.2692)
 1141 0146 0E94 0000 		call xputs
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1142               		.loc 1 325 13 view .LVU275
 1143               	.LBB97:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1144               		.loc 1 325 13 view .LVU276
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1145               		.loc 1 325 13 view .LVU277
 1146               	.LBE97:
 1147 014a 80E0      		ldi r24,lo8(__c.2694)
 1148 014c 90E0      		ldi r25,hi8(__c.2694)
 1149 014e 00C0      		rjmp .L79
 1150               	.L55:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1151               		.loc 1 335 13 view .LVU278
 1152               	.LBB98:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1153               		.loc 1 335 13 view .LVU279
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1154               		.loc 1 335 13 view .LVU280
 1155               	.LBE98:
 1156 0150 80E0      		ldi r24,lo8(__c.2697)
 1157 0152 90E0      		ldi r25,hi8(__c.2697)
 1158 0154 0E94 0000 		call xputs
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1159               		.loc 1 336 13 view .LVU281
 1160 0158 0E94 0000 		call host_keyboard_leds
 1161               	.LBB99:
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1162               		.loc 1 336 13 view .LVU282
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1163               		.loc 1 336 13 view .LVU283
 1164               	.LBE99:
 1165 015c 1F92      		push __zero_reg__
 1166               	.LCFI51:
 1167               		.cfi_def_cfa_offset 3
 1168 015e 8F93      		push r24
 1169               	.LCFI52:
 1170               		.cfi_def_cfa_offset 4
 1171 0160 80E0      		ldi r24,lo8(__c.2699)
 1172 0162 90E0      		ldi r25,hi8(__c.2699)
 1173 0164 9F93      		push r25
 1174               	.LCFI53:
 1175               		.cfi_def_cfa_offset 5
 1176 0166 8F93      		push r24
 1177               	.LCFI54:
 1178               		.cfi_def_cfa_offset 6
 1179 0168 0E94 0000 		call __xprintf
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1180               		.loc 1 337 13 view .LVU284
 1181               	.LBB100:
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1182               		.loc 1 337 13 view .LVU285
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1183               		.loc 1 337 13 view .LVU286
 1184               	.LBE100:
 1185 016c 8091 0000 		lds r24,keyboard_protocol
 1186 0170 1F92      		push __zero_reg__
 1187               	.LCFI55:
 1188               		.cfi_def_cfa_offset 7
 1189 0172 8F93      		push r24
 1190               	.LCFI56:
 1191               		.cfi_def_cfa_offset 8
 1192 0174 80E0      		ldi r24,lo8(__c.2701)
 1193 0176 90E0      		ldi r25,hi8(__c.2701)
 1194 0178 9F93      		push r25
 1195               	.LCFI57:
 1196               		.cfi_def_cfa_offset 9
 1197 017a 8F93      		push r24
 1198               	.LCFI58:
 1199               		.cfi_def_cfa_offset 10
 1200 017c 0E94 0000 		call __xprintf
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1201               		.loc 1 338 13 view .LVU287
 1202               	.LBB101:
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1203               		.loc 1 338 13 view .LVU288
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1204               		.loc 1 338 13 view .LVU289
 1205               	.LBE101:
 1206 0180 8091 0000 		lds r24,keyboard_idle
 1207 0184 1F92      		push __zero_reg__
 1208               	.LCFI59:
 1209               		.cfi_def_cfa_offset 11
 1210 0186 8F93      		push r24
 1211               	.LCFI60:
 1212               		.cfi_def_cfa_offset 12
 1213 0188 80E0      		ldi r24,lo8(__c.2703)
 1214 018a 90E0      		ldi r25,hi8(__c.2703)
 1215 018c 9F93      		push r25
 1216               	.LCFI61:
 1217               		.cfi_def_cfa_offset 13
 1218 018e 8F93      		push r24
 1219               	.LCFI62:
 1220               		.cfi_def_cfa_offset 14
 1221 0190 0E94 0000 		call __xprintf
 342:../../tmk_core/common/command.c **** 
 1222               		.loc 1 342 13 view .LVU290
 1223 0194 0E94 0000 		call timer_read32
 1224               	.LBB102:
 342:../../tmk_core/common/command.c **** 
 1225               		.loc 1 342 13 view .LVU291
 342:../../tmk_core/common/command.c **** 
 1226               		.loc 1 342 13 view .LVU292
 1227               	.LBE102:
 1228 0198 9F93      		push r25
 1229               	.LCFI63:
 1230               		.cfi_def_cfa_offset 15
 1231 019a 8F93      		push r24
 1232               	.LCFI64:
 1233               		.cfi_def_cfa_offset 16
 1234 019c 7F93      		push r23
 1235               	.LCFI65:
 1236               		.cfi_def_cfa_offset 17
 1237 019e 6F93      		push r22
 1238               	.LCFI66:
 1239               		.cfi_def_cfa_offset 18
 1240 01a0 80E0      		ldi r24,lo8(__c.2705)
 1241 01a2 90E0      		ldi r25,hi8(__c.2705)
 1242 01a4 9F93      		push r25
 1243               	.LCFI67:
 1244               		.cfi_def_cfa_offset 19
 1245 01a6 8F93      		push r24
 1246               	.LCFI68:
 1247               		.cfi_def_cfa_offset 20
 1248 01a8 0E94 0000 		call __xprintf
 357:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1249               		.loc 1 357 13 view .LVU293
 1250 01ac 8DB7      		in r24,__SP_L__
 1251 01ae 9EB7      		in r25,__SP_H__
 1252 01b0 4296      		adiw r24,18
 1253 01b2 0FB6      		in __tmp_reg__,__SREG__
 1254 01b4 F894      		cli
 1255 01b6 9EBF      		out __SP_H__,r25
 1256 01b8 0FBE      		out __SREG__,__tmp_reg__
 1257 01ba 8DBF      		out __SP_L__,r24
 1258               	.LCFI69:
 1259               		.cfi_def_cfa_offset 2
 1260 01bc 00C0      		rjmp .L78
 1261               	.L50:
 373:../../tmk_core/common/command.c ****             break;
 1262               		.loc 1 373 13 view .LVU294
 1263 01be 80E0      		ldi r24,0
 1264               	.L82:
 379:../../tmk_core/common/command.c ****             break;
 1265               		.loc 1 379 13 is_stmt 0 view .LVU295
 1266 01c0 0E94 0000 		call switch_default_layer
 380:../../tmk_core/common/command.c ****         default:
 1267               		.loc 1 380 13 is_stmt 1 view .LVU296
 1268 01c4 00C0      		rjmp .L78
 1269               	.L52:
 376:../../tmk_core/common/command.c ****             break;
 1270               		.loc 1 376 13 view .LVU297
 1271 01c6 8D51      		subi r24,lo8(-(-29))
 1272 01c8 00C0      		rjmp .L82
 1273               	.L62:
 379:../../tmk_core/common/command.c ****             break;
 1274               		.loc 1 379 13 view .LVU298
 1275 01ca 8953      		subi r24,lo8(-(-57))
 1276 01cc 00C0      		rjmp .L82
 1277               		.cfi_endproc
 1278               	.LFE14:
 1280               		.section	.text.command_extra,"ax",@progbits
 1281               		.weak	command_extra
 1283               	command_extra:
 1284               	.LVL47:
 1285               	.LFB11:
 100:../../tmk_core/common/command.c ****     (void)code;
 1286               		.loc 1 100 1 view -0
 1287               		.cfi_startproc
 1288               	/* prologue: function */
 1289               	/* frame size = 0 */
 1290               	/* stack size = 0 */
 1291               	.L__stack_usage = 0
 101:../../tmk_core/common/command.c ****     return false;
 1292               		.loc 1 101 5 view .LVU300
 102:../../tmk_core/common/command.c **** }
 1293               		.loc 1 102 5 view .LVU301
 103:../../tmk_core/common/command.c **** 
 1294               		.loc 1 103 1 is_stmt 0 view .LVU302
 1295 0000 80E0      		ldi r24,0
 1296               	.LVL48:
 1297               	/* epilogue start */
 103:../../tmk_core/common/command.c **** 
 1298               		.loc 1 103 1 view .LVU303
 1299 0002 0895      		ret
 1300               		.cfi_endproc
 1301               	.LFE11:
 1303               		.set	command_extra.localalias,command_extra
 1304               		.section	.text.command_console_extra,"ax",@progbits
 1305               		.weak	command_console_extra
 1307               	command_console_extra:
 1308               	.LFB25:
 1309               		.cfi_startproc
 1310               	/* prologue: function */
 1311               	/* frame size = 0 */
 1312               	/* stack size = 0 */
 1313               	.L__stack_usage = 0
 1314 0000 0C94 0000 		jmp command_extra.localalias
 1315               		.cfi_endproc
 1316               	.LFE25:
 1318               		.section	.text.command_proc,"ax",@progbits
 1319               	.global	command_proc
 1321               	command_proc:
 1322               	.LFB10:
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1323               		.loc 1 71 1 is_stmt 1 view -0
 1324               		.cfi_startproc
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1325               		.loc 1 71 1 is_stmt 0 view .LVU305
 1326 0000 CF93      		push r28
 1327               	.LCFI70:
 1328               		.cfi_def_cfa_offset 3
 1329               		.cfi_offset 28, -2
 1330               	/* prologue: function */
 1331               	/* frame size = 0 */
 1332               	/* stack size = 1 */
 1333               	.L__stack_usage = 1
 1334 0002 C82F      		mov r28,r24
  72:../../tmk_core/common/command.c ****         case ONESHOT:
 1335               		.loc 1 72 5 is_stmt 1 view .LVU306
 1336 0004 8091 0000 		lds r24,command_state
 1337 0008 8130      		cpi r24,lo8(1)
 1338 000a 01F0      		breq .L86
 1339 000c 8230      		cpi r24,lo8(2)
 1340 000e 01F4      		brne .+2
 1341 0010 00C0      		rjmp .L87
 1342 0012 8111      		cpse r24,__zero_reg__
 1343 0014 00C0      		rjmp .L88
  74:../../tmk_core/common/command.c ****                 return false;
 1344               		.loc 1 74 13 view .LVU307
  74:../../tmk_core/common/command.c ****                 return false;
 1345               		.loc 1 74 18 is_stmt 0 view .LVU308
 1346 0016 67E0      		ldi r22,lo8(7)
 1347 0018 8FE0      		ldi r24,lo8(15)
 1348 001a 0E94 0000 		call matrix_is_on
  74:../../tmk_core/common/command.c ****                 return false;
 1349               		.loc 1 74 16 view .LVU309
 1350 001e 8823      		tst r24
 1351 0020 01F0      		breq .L85
 1352               	.L148:
  80:../../tmk_core/common/command.c ****             else
 1353               		.loc 1 80 17 is_stmt 1 view .LVU310
  80:../../tmk_core/common/command.c ****             else
 1354               		.loc 1 80 25 is_stmt 0 view .LVU311
 1355 0022 8C2F      		mov r24,r28
 1356 0024 0E94 0000 		call command_extra
  80:../../tmk_core/common/command.c ****             else
 1357               		.loc 1 80 45 view .LVU312
 1358 0028 8111      		cpse r24,__zero_reg__
 1359 002a 00C0      		rjmp .L115
  80:../../tmk_core/common/command.c ****             else
 1360               		.loc 1 80 48 discriminator 2 view .LVU313
 1361 002c 8C2F      		mov r24,r28
 1362 002e 0E94 0000 		call command_common
 1363               	.L93:
  82:../../tmk_core/common/command.c ****             break;
 1364               		.loc 1 82 53 discriminator 6 view .LVU314
 1365 0032 8170      		andi r24,lo8(1)
 1366               	.L85:
 1367               	/* epilogue start */
  94:../../tmk_core/common/command.c **** 
 1368               		.loc 1 94 1 view .LVU315
 1369 0034 CF91      		pop r28
 1370 0036 0895      		ret
 1371               	.L86:
  77:../../tmk_core/common/command.c ****         case CONSOLE:
 1372               		.loc 1 77 13 is_stmt 1 view .LVU316
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1373               		.loc 1 79 13 view .LVU317
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1374               		.loc 1 79 17 is_stmt 0 view .LVU318
 1375 0038 67E0      		ldi r22,lo8(7)
 1376 003a 8FE0      		ldi r24,lo8(15)
 1377 003c 0E94 0000 		call matrix_is_on
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1378               		.loc 1 79 16 view .LVU319
 1379 0040 8111      		cpse r24,__zero_reg__
 1380 0042 00C0      		rjmp .L148
  82:../../tmk_core/common/command.c ****             break;
 1381               		.loc 1 82 17 is_stmt 1 view .LVU320
  82:../../tmk_core/common/command.c ****             break;
 1382               		.loc 1 82 25 is_stmt 0 view .LVU321
 1383 0044 8C2F      		mov r24,r28
 1384 0046 0E94 0000 		call command_console_extra
  82:../../tmk_core/common/command.c ****             break;
 1385               		.loc 1 82 53 view .LVU322
 1386 004a 8111      		cpse r24,__zero_reg__
 1387 004c 00C0      		rjmp .L116
 1388               	.LBB141:
 1389               	.LBI141:
 402:../../tmk_core/common/command.c **** {
 1390               		.loc 1 402 13 is_stmt 1 view .LVU323
 1391               	.LBB142:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1392               		.loc 1 404 5 view .LVU324
 1393 004e C431      		cpi r28,lo8(20)
 1394 0050 01F0      		breq .L94
 1395 0052 00F4      		brsh .L95
 1396 0054 CB30      		cpi r28,lo8(11)
 1397 0056 01F0      		breq .L96
 1398 0058 C031      		cpi r28,lo8(16)
 1399 005a 01F0      		breq .L97
 1400               	.L98:
 421:../../tmk_core/common/command.c ****             return false;
 1401               		.loc 1 421 13 view .LVU325
 1402               	.LBE142:
 1403               	.LBE141:
 421:../../tmk_core/common/command.c ****             return false;
 1404               		.loc 1 421 13 view .LVU326
 421:../../tmk_core/common/command.c ****             return false;
 1405               		.loc 1 421 13 view .LVU327
 1406               	.LBB154:
 1407               	.LBB147:
 1408 005c 80E0      		ldi r24,lo8(__c.2733)
 1409 005e 90E0      		ldi r25,hi8(__c.2733)
 1410 0060 0E94 0000 		call xputs
 1411 0064 00C0      		rjmp .L141
 1412               	.L115:
 1413               	.LBE147:
 1414               	.LBE154:
  80:../../tmk_core/common/command.c ****             else
 1415               		.loc 1 80 45 is_stmt 0 view .LVU328
 1416 0066 81E0      		ldi r24,lo8(1)
 1417 0068 90E0      		ldi r25,0
 1418 006a 00C0      		rjmp .L93
 1419               	.L95:
 1420               	.LBB155:
 1421               	.LBB148:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1422               		.loc 1 404 5 view .LVU329
 1423 006c C932      		cpi r28,lo8(41)
 1424 006e 01F0      		breq .L94
 1425 0070 C833      		cpi r28,lo8(56)
 1426 0072 01F4      		brne .L98
 1427               	.L96:
 407:../../tmk_core/common/command.c ****             break;
 1428               		.loc 1 407 13 is_stmt 1 view .LVU330
 1429               	.LBB143:
 1430               	.LBI143:
 392:../../tmk_core/common/command.c **** {
 1431               		.loc 1 392 13 view .LVU331
 1432               	.LBB144:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1433               		.loc 1 394 5 view .LVU332
 1434               	.LBE144:
 1435               	.LBE143:
 1436               	.LBE148:
 1437               	.LBE155:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1438               		.loc 1 394 5 view .LVU333
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1439               		.loc 1 394 5 view .LVU334
 1440               	.LBB156:
 1441               	.LBB149:
 1442               	.LBB146:
 1443               	.LBB145:
 1444 0074 80E0      		ldi r24,lo8(__c.2719)
 1445 0076 90E0      		ldi r25,hi8(__c.2719)
 1446 0078 0E94 0000 		call xputs
 1447               	.LBE145:
 1448               	.LBE146:
 408:../../tmk_core/common/command.c ****         case KC_Q:
 1449               		.loc 1 408 13 view .LVU335
 424:../../tmk_core/common/command.c ****     return true;
 1450               		.loc 1 424 5 view .LVU336
 1451               	.LBE149:
 1452               	.LBE156:
 424:../../tmk_core/common/command.c ****     return true;
 1453               		.loc 1 424 5 view .LVU337
 424:../../tmk_core/common/command.c ****     return true;
 1454               		.loc 1 424 5 view .LVU338
 1455               	.LBB157:
 1456               	.LBB150:
 1457 007c 80E0      		ldi r24,lo8(__c.2735)
 1458 007e 90E0      		ldi r25,hi8(__c.2735)
 1459 0080 0E94 0000 		call xputs
 425:../../tmk_core/common/command.c **** }
 1460               		.loc 1 425 5 view .LVU339
 1461               	.L116:
 1462               	.LBE150:
 1463               	.LBE157:
  82:../../tmk_core/common/command.c ****             break;
 1464               		.loc 1 82 53 is_stmt 0 view .LVU340
 1465 0084 81E0      		ldi r24,lo8(1)
 1466 0086 00C0      		rjmp .L93
 1467               	.L94:
 1468               	.LBB158:
 1469               	.LBB151:
 411:../../tmk_core/common/command.c ****             return false;
 1470               		.loc 1 411 13 is_stmt 1 view .LVU341
 411:../../tmk_core/common/command.c ****             return false;
 1471               		.loc 1 411 27 is_stmt 0 view .LVU342
 1472 0088 1092 0000 		sts command_state,__zero_reg__
 412:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1473               		.loc 1 412 13 is_stmt 1 view .LVU343
 1474               	.L141:
 422:../../tmk_core/common/command.c ****     }
 1475               		.loc 1 422 13 view .LVU344
 1476               	.LBE151:
 1477               	.LBE158:
  82:../../tmk_core/common/command.c ****             break;
 1478               		.loc 1 82 53 is_stmt 0 view .LVU345
 1479 008c 80E0      		ldi r24,0
 1480 008e 00C0      		rjmp .L93
 1481               	.L97:
 1482               	.LBB159:
 1483               	.LBB152:
 415:../../tmk_core/common/command.c ****             print("M> ");
 1484               		.loc 1 415 13 is_stmt 1 view .LVU346
 1485 0090 0E94 0000 		call mousekey_console_help
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1486               		.loc 1 416 13 view .LVU347
 1487               	.LBE152:
 1488               	.LBE159:
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1489               		.loc 1 416 13 view .LVU348
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1490               		.loc 1 416 13 view .LVU349
 1491               	.LBB160:
 1492               	.LBB153:
 1493 0094 80E0      		ldi r24,lo8(__c.2730)
 1494 0096 90E0      		ldi r25,hi8(__c.2730)
 1495 0098 0E94 0000 		call xputs
 417:../../tmk_core/common/command.c ****             return true;
 1496               		.loc 1 417 13 view .LVU350
 417:../../tmk_core/common/command.c ****             return true;
 1497               		.loc 1 417 27 is_stmt 0 view .LVU351
 1498 009c 82E0      		ldi r24,lo8(2)
 1499 009e 8093 0000 		sts command_state,r24
 418:../../tmk_core/common/command.c **** #endif
 1500               		.loc 1 418 13 is_stmt 1 view .LVU352
 1501 00a2 00C0      		rjmp .L116
 1502               	.L87:
 1503               	.LBE153:
 1504               	.LBE160:
  83:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1505               		.loc 1 83 13 view .LVU353
  86:../../tmk_core/common/command.c ****             break;
 1506               		.loc 1 86 13 view .LVU354
 1507               	.LBB161:
 1508               	.LBI161:
 567:../../tmk_core/common/command.c **** {
 1509               		.loc 1 567 13 view .LVU355
 1510               	.LBB162:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1511               		.loc 1 569 5 view .LVU356
 1512 00a4 C932      		cpi r28,lo8(41)
 1513 00a6 01F4      		brne .+2
 1514 00a8 00C0      		rjmp .L99
 1515 00aa 00F4      		brsh .L100
 1516 00ac C331      		cpi r28,lo8(19)
 1517 00ae 01F4      		brne .+2
 1518 00b0 00C0      		rjmp .L101
 1519 00b2 00F4      		brsh .L102
 1520 00b4 C730      		cpi r28,lo8(7)
 1521 00b6 01F4      		brne .+2
 1522 00b8 00C0      		rjmp .L103
 1523 00ba CB30      		cpi r28,lo8(11)
 1524 00bc 01F0      		breq .L104
 1525               	.L105:
 617:../../tmk_core/common/command.c ****             return false;
 1526               		.loc 1 617 13 view .LVU357
 1527               	.LBE162:
 1528               	.LBE161:
 617:../../tmk_core/common/command.c ****             return false;
 1529               		.loc 1 617 13 view .LVU358
 617:../../tmk_core/common/command.c ****             return false;
 1530               		.loc 1 617 13 view .LVU359
 1531               	.LBB230:
 1532               	.LBB204:
 1533 00be 80E0      		ldi r24,lo8(__c.2857)
 1534 00c0 90E0      		ldi r25,hi8(__c.2857)
 1535               	.L145:
 623:../../tmk_core/common/command.c ****     }
 1536               		.loc 1 623 9 is_stmt 0 view .LVU360
 1537 00c2 0E94 0000 		call xputs
 1538 00c6 00C0      		rjmp .L144
 1539               	.L102:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1540               		.loc 1 569 5 view .LVU361
 1541 00c8 C431      		cpi r28,lo8(20)
 1542 00ca 01F0      		breq .L99
 1543 00cc CE51      		subi r28,lo8(-(-30))
 1544 00ce C630      		cpi r28,lo8(6)
 1545 00d0 00F4      		brsh .L105
 593:../../tmk_core/common/command.c ****             break;
 1546               		.loc 1 593 13 is_stmt 1 view .LVU362
 1547               	.LBB163:
 1548               	.LBI163:
 634:../../tmk_core/common/command.c **** {
 1549               		.loc 1 634 16 view .LVU363
 1550               	.LBE163:
 1551               	.LBE204:
 1552               	.LBE230:
 636:../../tmk_core/common/command.c ****         case KC_1: return 1;
 1553               		.loc 1 636 5 view .LVU364
 1554               	.LBB231:
 1555               	.LBB205:
 593:../../tmk_core/common/command.c ****             break;
 1556               		.loc 1 593 28 is_stmt 0 view .LVU365
 1557 00d2 EC2F      		mov r30,r28
 1558 00d4 F0E0      		ldi r31,0
 1559 00d6 E050      		subi r30,lo8(-(CSWTCH.57))
 1560 00d8 F040      		sbci r31,hi8(-(CSWTCH.57))
 1561 00da 8081      		ld r24,Z
 1562 00dc 8093 0000 		sts mousekey_param,r24
 594:../../tmk_core/common/command.c ****         case KC_UP:
 1563               		.loc 1 594 13 is_stmt 1 view .LVU366
 1564               	.L106:
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1565               		.loc 1 620 5 view .LVU367
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1566               		.loc 1 620 9 is_stmt 0 view .LVU368
 1567 00e0 8091 0000 		lds r24,mousekey_param
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1568               		.loc 1 620 8 view .LVU369
 1569 00e4 8823      		tst r24
 1570 00e6 01F4      		brne .+2
 1571 00e8 00C0      		rjmp .L113
 621:../../tmk_core/common/command.c ****     } else {
 1572               		.loc 1 621 9 is_stmt 1 view .LVU370
 1573               	.LBE205:
 1574               	.LBE231:
 621:../../tmk_core/common/command.c ****     } else {
 1575               		.loc 1 621 9 view .LVU371
 621:../../tmk_core/common/command.c ****     } else {
 1576               		.loc 1 621 9 view .LVU372
 1577               	.LBB232:
 1578               	.LBB206:
 1579 00ea 1F92      		push __zero_reg__
 1580               	.LCFI71:
 1581               		.cfi_def_cfa_offset 4
 1582 00ec 8F93      		push r24
 1583               	.LCFI72:
 1584               		.cfi_def_cfa_offset 5
 1585 00ee 80E0      		ldi r24,lo8(__c.2859)
 1586 00f0 90E0      		ldi r25,hi8(__c.2859)
 1587 00f2 9F93      		push r25
 1588               	.LCFI73:
 1589               		.cfi_def_cfa_offset 6
 1590 00f4 8F93      		push r24
 1591               	.LCFI74:
 1592               		.cfi_def_cfa_offset 7
 1593 00f6 0E94 0000 		call __xprintf
 1594 00fa 0F90      		pop __tmp_reg__
 1595 00fc 0F90      		pop __tmp_reg__
 1596 00fe 0F90      		pop __tmp_reg__
 1597 0100 0F90      		pop __tmp_reg__
 1598               	.LCFI75:
 1599               		.cfi_def_cfa_offset 3
 1600               	.L144:
 1601               	.LBE206:
 1602               	.LBE232:
  93:../../tmk_core/common/command.c **** }
 1603               		.loc 1 93 12 is_stmt 0 view .LVU373
 1604 0102 81E0      		ldi r24,lo8(1)
 1605 0104 00C0      		rjmp .L85
 1606               	.L100:
 1607               	.LBB233:
 1608               	.LBB207:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1609               		.loc 1 569 5 view .LVU374
 1610 0106 CE34      		cpi r28,lo8(78)
 1611 0108 01F4      		brne .+2
 1612 010a 00C0      		rjmp .L107
 1613 010c 00F4      		brsh .L108
 1614 010e C833      		cpi r28,lo8(56)
 1615 0110 01F0      		breq .L104
 602:../../tmk_core/common/command.c ****             break;
 1616               		.loc 1 602 13 view .LVU375
 1617 0112 6AE0      		ldi r22,lo8(10)
 569:../../tmk_core/common/command.c ****         case KC_H:
 1618               		.loc 1 569 5 view .LVU376
 1619 0114 CB34      		cpi r28,lo8(75)
 1620 0116 01F4      		brne .L105
 1621               	.L142:
 602:../../tmk_core/common/command.c ****             break;
 1622               		.loc 1 602 13 view .LVU377
 1623 0118 8091 0000 		lds r24,mousekey_param
 1624 011c 0E94 0000 		call mousekey_param_inc
 603:../../tmk_core/common/command.c ****         case KC_PGDN:
 1625               		.loc 1 603 13 is_stmt 1 view .LVU378
 1626 0120 00C0      		rjmp .L106
 1627               	.L108:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1628               		.loc 1 569 5 is_stmt 0 view .LVU379
 1629 0122 C135      		cpi r28,lo8(81)
 1630 0124 01F4      		brne .+2
 1631 0126 00C0      		rjmp .L110
 596:../../tmk_core/common/command.c ****             break;
 1632               		.loc 1 596 13 view .LVU380
 1633 0128 61E0      		ldi r22,lo8(1)
 569:../../tmk_core/common/command.c ****         case KC_H:
 1634               		.loc 1 569 5 view .LVU381
 1635 012a C235      		cpi r28,lo8(82)
 1636 012c 01F0      		breq .L142
 1637 012e 00C0      		rjmp .L105
 1638               	.L104:
 572:../../tmk_core/common/command.c ****             break;
 1639               		.loc 1 572 13 is_stmt 1 view .LVU382
 1640 0130 0E94 0000 		call mousekey_console_help
 573:../../tmk_core/common/command.c ****         case KC_Q:
 1641               		.loc 1 573 13 view .LVU383
 1642 0134 00C0      		rjmp .L106
 1643               	.L99:
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1644               		.loc 1 576 13 view .LVU384
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1645               		.loc 1 576 16 is_stmt 0 view .LVU385
 1646 0136 8091 0000 		lds r24,mousekey_param
 1647 013a 8823      		tst r24
 1648 013c 01F0      		breq .L112
 577:../../tmk_core/common/command.c ****             } else {
 1649               		.loc 1 577 17 is_stmt 1 view .LVU386
 577:../../tmk_core/common/command.c ****             } else {
 1650               		.loc 1 577 32 is_stmt 0 view .LVU387
 1651 013e 1092 0000 		sts mousekey_param,__zero_reg__
 583:../../tmk_core/common/command.c ****         case KC_P:
 1652               		.loc 1 583 13 is_stmt 1 view .LVU388
 1653 0142 00C0      		rjmp .L106
 1654               	.L112:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1655               		.loc 1 579 17 view .LVU389
 1656               	.LBE207:
 1657               	.LBE233:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1658               		.loc 1 579 17 view .LVU390
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1659               		.loc 1 579 17 view .LVU391
 1660               	.LBB234:
 1661               	.LBB208:
 1662 0144 80E0      		ldi r24,lo8(__c.2840)
 1663 0146 90E0      		ldi r25,hi8(__c.2840)
 1664 0148 0E94 0000 		call xputs
 580:../../tmk_core/common/command.c ****                 return false;
 1665               		.loc 1 580 17 view .LVU392
 580:../../tmk_core/common/command.c ****                 return false;
 1666               		.loc 1 580 31 is_stmt 0 view .LVU393
 1667 014c 81E0      		ldi r24,lo8(1)
 1668 014e 8093 0000 		sts command_state,r24
 581:../../tmk_core/common/command.c ****             }
 1669               		.loc 1 581 17 is_stmt 1 view .LVU394
 581:../../tmk_core/common/command.c ****             }
 1670               		.loc 1 581 24 is_stmt 0 view .LVU395
 1671 0152 00C0      		rjmp .L85
 1672               	.L101:
 585:../../tmk_core/common/command.c ****             break;
 1673               		.loc 1 585 13 is_stmt 1 view .LVU396
 1674               	.LBB164:
 1675               	.LBI164:
 435:../../tmk_core/common/command.c **** {
 1676               		.loc 1 435 13 view .LVU397
 1677               	.LBB165:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1678               		.loc 1 437 5 view .LVU398
 1679               	.LBE165:
 1680               	.LBE164:
 1681               	.LBE208:
 1682               	.LBE234:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1683               		.loc 1 437 5 view .LVU399
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1684               		.loc 1 437 5 view .LVU400
 1685               	.LBB235:
 1686               	.LBB209:
 1687               	.LBB185:
 1688               	.LBB166:
 1689 0154 80E0      		ldi r24,lo8(__c.2741)
 1690 0156 90E0      		ldi r25,hi8(__c.2741)
 1691 0158 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1692               		.loc 1 438 5 view .LVU401
 1693               	.LBE166:
 1694               	.LBE185:
 1695               	.LBE209:
 1696               	.LBE235:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1697               		.loc 1 438 5 view .LVU402
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1698               		.loc 1 438 5 view .LVU403
 1699               	.LBB236:
 1700               	.LBB210:
 1701               	.LBB186:
 1702               	.LBB167:
 1703 015c 80E0      		ldi r24,lo8(__c.2743)
 1704 015e 90E0      		ldi r25,hi8(__c.2743)
 1705 0160 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1706               		.loc 1 438 33 view .LVU404
 1707               	.LBE167:
 1708               	.LBE186:
 1709               	.LBE210:
 1710               	.LBE236:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1711               		.loc 1 438 33 view .LVU405
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1712               		.loc 1 438 33 view .LVU406
 1713               	.LBB237:
 1714               	.LBB211:
 1715               	.LBB187:
 1716               	.LBB168:
 1717 0164 8091 0000 		lds r24,mk_delay
 1718 0168 1F92      		push __zero_reg__
 1719               	.LCFI76:
 1720               		.cfi_def_cfa_offset 4
 1721 016a 8F93      		push r24
 1722               	.LCFI77:
 1723               		.cfi_def_cfa_offset 5
 1724 016c 80E0      		ldi r24,lo8(__c.2745)
 1725 016e 90E0      		ldi r25,hi8(__c.2745)
 1726 0170 9F93      		push r25
 1727               	.LCFI78:
 1728               		.cfi_def_cfa_offset 6
 1729 0172 8F93      		push r24
 1730               	.LCFI79:
 1731               		.cfi_def_cfa_offset 7
 1732 0174 0E94 0000 		call __xprintf
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1733               		.loc 1 438 49 view .LVU407
 1734               	.LBE168:
 1735               	.LBE187:
 1736               	.LBE211:
 1737               	.LBE237:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1738               		.loc 1 438 49 view .LVU408
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1739               		.loc 1 438 49 view .LVU409
 1740               	.LBB238:
 1741               	.LBB212:
 1742               	.LBB188:
 1743               	.LBB169:
 1744 0178 80E0      		ldi r24,lo8(__c.2747)
 1745 017a 90E0      		ldi r25,hi8(__c.2747)
 1746 017c 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1747               		.loc 1 439 5 view .LVU410
 1748               	.LBE169:
 1749               	.LBE188:
 1750               	.LBE212:
 1751               	.LBE238:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1752               		.loc 1 439 5 view .LVU411
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1753               		.loc 1 439 5 view .LVU412
 1754               	.LBB239:
 1755               	.LBB213:
 1756               	.LBB189:
 1757               	.LBB170:
 1758 0180 80E0      		ldi r24,lo8(__c.2749)
 1759 0182 90E0      		ldi r25,hi8(__c.2749)
 1760 0184 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1761               		.loc 1 439 33 view .LVU413
 1762               	.LBE170:
 1763               	.LBE189:
 1764               	.LBE213:
 1765               	.LBE239:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1766               		.loc 1 439 33 view .LVU414
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1767               		.loc 1 439 33 view .LVU415
 1768               	.LBB240:
 1769               	.LBB214:
 1770               	.LBB190:
 1771               	.LBB171:
 1772 0188 8091 0000 		lds r24,mk_interval
 1773 018c 1F92      		push __zero_reg__
 1774               	.LCFI80:
 1775               		.cfi_def_cfa_offset 8
 1776 018e 8F93      		push r24
 1777               	.LCFI81:
 1778               		.cfi_def_cfa_offset 9
 1779 0190 80E0      		ldi r24,lo8(__c.2751)
 1780 0192 90E0      		ldi r25,hi8(__c.2751)
 1781 0194 9F93      		push r25
 1782               	.LCFI82:
 1783               		.cfi_def_cfa_offset 10
 1784 0196 8F93      		push r24
 1785               	.LCFI83:
 1786               		.cfi_def_cfa_offset 11
 1787 0198 0E94 0000 		call __xprintf
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1788               		.loc 1 439 52 view .LVU416
 1789               	.LBE171:
 1790               	.LBE190:
 1791               	.LBE214:
 1792               	.LBE240:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1793               		.loc 1 439 52 view .LVU417
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1794               		.loc 1 439 52 view .LVU418
 1795               	.LBB241:
 1796               	.LBB215:
 1797               	.LBB191:
 1798               	.LBB172:
 1799 019c 80E0      		ldi r24,lo8(__c.2753)
 1800 019e 90E0      		ldi r25,hi8(__c.2753)
 1801 01a0 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1802               		.loc 1 440 5 view .LVU419
 1803               	.LBE172:
 1804               	.LBE191:
 1805               	.LBE215:
 1806               	.LBE241:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1807               		.loc 1 440 5 view .LVU420
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1808               		.loc 1 440 5 view .LVU421
 1809               	.LBB242:
 1810               	.LBB216:
 1811               	.LBB192:
 1812               	.LBB173:
 1813 01a4 80E0      		ldi r24,lo8(__c.2755)
 1814 01a6 90E0      		ldi r25,hi8(__c.2755)
 1815 01a8 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1816               		.loc 1 440 30 view .LVU422
 1817               	.LBE173:
 1818               	.LBE192:
 1819               	.LBE216:
 1820               	.LBE242:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1821               		.loc 1 440 30 view .LVU423
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1822               		.loc 1 440 30 view .LVU424
 1823               	.LBB243:
 1824               	.LBB217:
 1825               	.LBB193:
 1826               	.LBB174:
 1827 01ac 8091 0000 		lds r24,mk_max_speed
 1828 01b0 1F92      		push __zero_reg__
 1829               	.LCFI84:
 1830               		.cfi_def_cfa_offset 12
 1831 01b2 8F93      		push r24
 1832               	.LCFI85:
 1833               		.cfi_def_cfa_offset 13
 1834 01b4 80E0      		ldi r24,lo8(__c.2757)
 1835 01b6 90E0      		ldi r25,hi8(__c.2757)
 1836 01b8 9F93      		push r25
 1837               	.LCFI86:
 1838               		.cfi_def_cfa_offset 14
 1839 01ba 8F93      		push r24
 1840               	.LCFI87:
 1841               		.cfi_def_cfa_offset 15
 1842 01bc 0E94 0000 		call __xprintf
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1843               		.loc 1 440 50 view .LVU425
 1844               	.LBE174:
 1845               	.LBE193:
 1846               	.LBE217:
 1847               	.LBE243:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1848               		.loc 1 440 50 view .LVU426
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1849               		.loc 1 440 50 view .LVU427
 1850               	.LBB244:
 1851               	.LBB218:
 1852               	.LBB194:
 1853               	.LBB175:
 1854 01c0 80E0      		ldi r24,lo8(__c.2759)
 1855 01c2 90E0      		ldi r25,hi8(__c.2759)
 1856 01c4 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1857               		.loc 1 441 5 view .LVU428
 1858               	.LBE175:
 1859               	.LBE194:
 1860               	.LBE218:
 1861               	.LBE244:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1862               		.loc 1 441 5 view .LVU429
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1863               		.loc 1 441 5 view .LVU430
 1864               	.LBB245:
 1865               	.LBB219:
 1866               	.LBB195:
 1867               	.LBB176:
 1868 01c8 80E0      		ldi r24,lo8(__c.2761)
 1869 01ca 90E0      		ldi r25,hi8(__c.2761)
 1870 01cc 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1871               		.loc 1 441 32 view .LVU431
 1872               	.LBE176:
 1873               	.LBE195:
 1874               	.LBE219:
 1875               	.LBE245:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1876               		.loc 1 441 32 view .LVU432
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1877               		.loc 1 441 32 view .LVU433
 1878               	.LBB246:
 1879               	.LBB220:
 1880               	.LBB196:
 1881               	.LBB177:
 1882 01d0 8091 0000 		lds r24,mk_time_to_max
 1883 01d4 1F92      		push __zero_reg__
 1884               	.LCFI88:
 1885               		.cfi_def_cfa_offset 16
 1886 01d6 8F93      		push r24
 1887               	.LCFI89:
 1888               		.cfi_def_cfa_offset 17
 1889 01d8 80E0      		ldi r24,lo8(__c.2763)
 1890 01da 90E0      		ldi r25,hi8(__c.2763)
 1891 01dc 9F93      		push r25
 1892               	.LCFI90:
 1893               		.cfi_def_cfa_offset 18
 1894 01de 8F93      		push r24
 1895               	.LCFI91:
 1896               		.cfi_def_cfa_offset 19
 1897 01e0 0E94 0000 		call __xprintf
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1898               		.loc 1 441 54 view .LVU434
 1899               	.LBE177:
 1900               	.LBE196:
 1901               	.LBE220:
 1902               	.LBE246:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1903               		.loc 1 441 54 view .LVU435
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1904               		.loc 1 441 54 view .LVU436
 1905               	.LBB247:
 1906               	.LBB221:
 1907               	.LBB197:
 1908               	.LBB178:
 1909 01e4 80E0      		ldi r24,lo8(__c.2765)
 1910 01e6 90E0      		ldi r25,hi8(__c.2765)
 1911 01e8 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1912               		.loc 1 442 5 view .LVU437
 1913               	.LBE178:
 1914               	.LBE197:
 1915               	.LBE221:
 1916               	.LBE247:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1917               		.loc 1 442 5 view .LVU438
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1918               		.loc 1 442 5 view .LVU439
 1919               	.LBB248:
 1920               	.LBB222:
 1921               	.LBB198:
 1922               	.LBB179:
 1923 01ec 80E0      		ldi r24,lo8(__c.2767)
 1924 01ee 90E0      		ldi r25,hi8(__c.2767)
 1925 01f0 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1926               		.loc 1 442 36 view .LVU440
 1927               	.LBE179:
 1928               	.LBE198:
 1929               	.LBE222:
 1930               	.LBE248:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1931               		.loc 1 442 36 view .LVU441
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1932               		.loc 1 442 36 view .LVU442
 1933               	.LBB249:
 1934               	.LBB223:
 1935               	.LBB199:
 1936               	.LBB180:
 1937 01f4 8091 0000 		lds r24,mk_wheel_max_speed
 1938 01f8 1F92      		push __zero_reg__
 1939               	.LCFI92:
 1940               		.cfi_def_cfa_offset 20
 1941 01fa 8F93      		push r24
 1942               	.LCFI93:
 1943               		.cfi_def_cfa_offset 21
 1944 01fc 80E0      		ldi r24,lo8(__c.2769)
 1945 01fe 90E0      		ldi r25,hi8(__c.2769)
 1946 0200 9F93      		push r25
 1947               	.LCFI94:
 1948               		.cfi_def_cfa_offset 22
 1949 0202 8F93      		push r24
 1950               	.LCFI95:
 1951               		.cfi_def_cfa_offset 23
 1952 0204 0E94 0000 		call __xprintf
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1953               		.loc 1 442 62 view .LVU443
 1954               	.LBE180:
 1955               	.LBE199:
 1956               	.LBE223:
 1957               	.LBE249:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1958               		.loc 1 442 62 view .LVU444
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1959               		.loc 1 442 62 view .LVU445
 1960               	.LBB250:
 1961               	.LBB224:
 1962               	.LBB200:
 1963               	.LBB181:
 1964 0208 80E0      		ldi r24,lo8(__c.2771)
 1965 020a 90E0      		ldi r25,hi8(__c.2771)
 1966 020c 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1967               		.loc 1 443 5 view .LVU446
 1968               	.LBE181:
 1969               	.LBE200:
 1970               	.LBE224:
 1971               	.LBE250:
 443:../../tmk_core/common/command.c **** }
 1972               		.loc 1 443 5 view .LVU447
 443:../../tmk_core/common/command.c **** }
 1973               		.loc 1 443 5 view .LVU448
 1974               	.LBB251:
 1975               	.LBB225:
 1976               	.LBB201:
 1977               	.LBB182:
 1978 0210 80E0      		ldi r24,lo8(__c.2773)
 1979 0212 90E0      		ldi r25,hi8(__c.2773)
 1980 0214 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1981               		.loc 1 443 38 view .LVU449
 1982               	.LBE182:
 1983               	.LBE201:
 1984               	.LBE225:
 1985               	.LBE251:
 443:../../tmk_core/common/command.c **** }
 1986               		.loc 1 443 38 view .LVU450
 443:../../tmk_core/common/command.c **** }
 1987               		.loc 1 443 38 view .LVU451
 1988               	.LBB252:
 1989               	.LBB226:
 1990               	.LBB202:
 1991               	.LBB183:
 1992 0218 8091 0000 		lds r24,mk_wheel_time_to_max
 1993 021c 1F92      		push __zero_reg__
 1994               	.LCFI96:
 1995               		.cfi_def_cfa_offset 24
 1996 021e 8F93      		push r24
 1997               	.LCFI97:
 1998               		.cfi_def_cfa_offset 25
 1999 0220 80E0      		ldi r24,lo8(__c.2775)
 2000 0222 90E0      		ldi r25,hi8(__c.2775)
 2001 0224 9F93      		push r25
 2002               	.LCFI98:
 2003               		.cfi_def_cfa_offset 26
 2004 0226 8F93      		push r24
 2005               	.LCFI99:
 2006               		.cfi_def_cfa_offset 27
 2007 0228 0E94 0000 		call __xprintf
 443:../../tmk_core/common/command.c **** }
 2008               		.loc 1 443 66 view .LVU452
 2009               	.LBE183:
 2010               	.LBE202:
 2011               	.LBE226:
 2012               	.LBE252:
 443:../../tmk_core/common/command.c **** }
 2013               		.loc 1 443 66 view .LVU453
 443:../../tmk_core/common/command.c **** }
 2014               		.loc 1 443 66 view .LVU454
 2015               	.LBB253:
 2016               	.LBB227:
 2017               	.LBB203:
 2018               	.LBB184:
 2019 022c 80E0      		ldi r24,lo8(__c.2777)
 2020 022e 90E0      		ldi r25,hi8(__c.2777)
 2021 0230 0E94 0000 		call xputs
 444:../../tmk_core/common/command.c **** 
 2022               		.loc 1 444 1 is_stmt 0 view .LVU455
 2023 0234 8DB7      		in r24,__SP_L__
 2024 0236 9EB7      		in r25,__SP_H__
 2025 0238 4896      		adiw r24,24
 2026 023a 0FB6      		in __tmp_reg__,__SREG__
 2027 023c F894      		cli
 2028 023e 9EBF      		out __SP_H__,r25
 2029 0240 0FBE      		out __SREG__,__tmp_reg__
 2030 0242 8DBF      		out __SP_L__,r24
 2031               	.LCFI100:
 2032               		.cfi_def_cfa_offset 3
 2033 0244 00C0      		rjmp .L106
 2034               	.L110:
 2035               	.LBE184:
 2036               	.LBE203:
 599:../../tmk_core/common/command.c ****             break;
 2037               		.loc 1 599 13 is_stmt 1 view .LVU456
 2038 0246 61E0      		ldi r22,lo8(1)
 2039               	.L143:
 605:../../tmk_core/common/command.c ****             break;
 2040               		.loc 1 605 13 is_stmt 0 view .LVU457
 2041 0248 8091 0000 		lds r24,mousekey_param
 2042 024c 0E94 0000 		call mousekey_param_dec
 606:../../tmk_core/common/command.c ****         case KC_D:
 2043               		.loc 1 606 13 is_stmt 1 view .LVU458
 2044 0250 00C0      		rjmp .L106
 2045               	.L107:
 605:../../tmk_core/common/command.c ****             break;
 2046               		.loc 1 605 13 view .LVU459
 2047 0252 6AE0      		ldi r22,lo8(10)
 2048 0254 00C0      		rjmp .L143
 2049               	.L103:
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2050               		.loc 1 608 13 view .LVU460
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2051               		.loc 1 608 22 is_stmt 0 view .LVU461
 2052 0256 8EE1      		ldi r24,lo8(30)
 2053 0258 8093 0000 		sts mk_delay,r24
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2054               		.loc 1 609 13 is_stmt 1 view .LVU462
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2055               		.loc 1 609 25 is_stmt 0 view .LVU463
 2056 025c 82E3      		ldi r24,lo8(50)
 2057 025e 8093 0000 		sts mk_interval,r24
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2058               		.loc 1 610 13 is_stmt 1 view .LVU464
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2059               		.loc 1 610 26 is_stmt 0 view .LVU465
 2060 0262 8AE0      		ldi r24,lo8(10)
 2061 0264 8093 0000 		sts mk_max_speed,r24
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2062               		.loc 1 611 13 is_stmt 1 view .LVU466
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2063               		.loc 1 611 28 is_stmt 0 view .LVU467
 2064 0268 84E1      		ldi r24,lo8(20)
 2065 026a 8093 0000 		sts mk_time_to_max,r24
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2066               		.loc 1 612 13 is_stmt 1 view .LVU468
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2067               		.loc 1 612 32 is_stmt 0 view .LVU469
 2068 026e 88E0      		ldi r24,lo8(8)
 2069 0270 8093 0000 		sts mk_wheel_max_speed,r24
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2070               		.loc 1 613 13 is_stmt 1 view .LVU470
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2071               		.loc 1 613 34 is_stmt 0 view .LVU471
 2072 0274 88E2      		ldi r24,lo8(40)
 2073 0276 8093 0000 		sts mk_wheel_time_to_max,r24
 614:../../tmk_core/common/command.c ****             break;
 2074               		.loc 1 614 13 is_stmt 1 view .LVU472
 2075               	.LBE227:
 2076               	.LBE253:
 614:../../tmk_core/common/command.c ****             break;
 2077               		.loc 1 614 13 view .LVU473
 614:../../tmk_core/common/command.c ****             break;
 2078               		.loc 1 614 13 view .LVU474
 2079               	.LBB254:
 2080               	.LBB228:
 2081 027a 80E0      		ldi r24,lo8(__c.2854)
 2082 027c 90E0      		ldi r25,hi8(__c.2854)
 2083 027e 0E94 0000 		call xputs
 615:../../tmk_core/common/command.c ****         default:
 2084               		.loc 1 615 13 view .LVU475
 2085 0282 00C0      		rjmp .L106
 2086               	.L113:
 623:../../tmk_core/common/command.c ****     }
 2087               		.loc 1 623 9 view .LVU476
 2088               	.LBE228:
 2089               	.LBE254:
 623:../../tmk_core/common/command.c ****     }
 2090               		.loc 1 623 9 view .LVU477
 623:../../tmk_core/common/command.c ****     }
 2091               		.loc 1 623 9 view .LVU478
 2092               	.LBB255:
 2093               	.LBB229:
 2094 0284 80E0      		ldi r24,lo8(__c.2861)
 2095 0286 90E0      		ldi r25,hi8(__c.2861)
 2096 0288 00C0      		rjmp .L145
 2097               	.L88:
 2098               	.LBE229:
 2099               	.LBE255:
  90:../../tmk_core/common/command.c ****             return false;
 2100               		.loc 1 90 13 view .LVU479
  90:../../tmk_core/common/command.c ****             return false;
 2101               		.loc 1 90 27 is_stmt 0 view .LVU480
 2102 028a 1092 0000 		sts command_state,__zero_reg__
  91:../../tmk_core/common/command.c ****     }
 2103               		.loc 1 91 13 is_stmt 1 view .LVU481
  91:../../tmk_core/common/command.c ****     }
 2104               		.loc 1 91 20 is_stmt 0 view .LVU482
 2105 028e 80E0      		ldi r24,0
 2106 0290 00C0      		rjmp .L85
 2107               		.cfi_endproc
 2108               	.LFE10:
 2110               		.section	.rodata.CSWTCH.57,"a"
 2113               	CSWTCH.57:
 2114 0000 01        		.byte	1
 2115 0001 02        		.byte	2
 2116 0002 03        		.byte	3
 2117 0003 04        		.byte	4
 2118 0004 05        		.byte	5
 2119 0005 06        		.byte	6
 2120 0006 07        		.byte	7
 2121 0007 08        		.byte	8
 2122 0008 09        		.byte	9
 2123 0009 00        		.byte	0
 2124               		.section	.progmem.data.__c.2823,"a"
 2127               	__c.2823:
 2128 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2128      6865 656C 
 2128      5F74 696D 
 2128      655F 746F 
 2128      5F6D 6178 
 2129               		.section	.progmem.data.__c.2820,"a"
 2132               	__c.2820:
 2133 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2133      6865 656C 
 2133      5F6D 6178 
 2133      5F73 7065 
 2133      6564 203D 
 2134               		.section	.progmem.data.__c.2817,"a"
 2137               	__c.2817:
 2138 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2138      696D 655F 
 2138      746F 5F6D 
 2138      6178 203D 
 2138      2025 640A 
 2139               		.section	.progmem.data.__c.2814,"a"
 2142               	__c.2814:
 2143 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2143      6178 5F73 
 2143      7065 6564 
 2143      203D 2025 
 2143      640A 00
 2144               		.section	.progmem.data.__c.2811,"a"
 2147               	__c.2811:
 2148 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2148      6E74 6572 
 2148      7661 6C20 
 2148      3D20 2564 
 2148      0A00 
 2149               		.section	.progmem.data.__c.2807,"a"
 2152               	__c.2807:
 2153 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2153      656C 6179 
 2153      203D 2025 
 2153      640A 00
 2154               		.section	.progmem.data.__c.2800,"a"
 2157               	__c.2800:
 2158 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2158      6865 656C 
 2158      5F74 696D 
 2158      655F 746F 
 2158      5F6D 6178 
 2159               		.section	.progmem.data.__c.2797,"a"
 2162               	__c.2797:
 2163 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2163      6865 656C 
 2163      5F6D 6178 
 2163      5F73 7065 
 2163      6564 203D 
 2164               		.section	.progmem.data.__c.2794,"a"
 2167               	__c.2794:
 2168 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2168      696D 655F 
 2168      746F 5F6D 
 2168      6178 203D 
 2168      2025 640A 
 2169               		.section	.progmem.data.__c.2791,"a"
 2172               	__c.2791:
 2173 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2173      6178 5F73 
 2173      7065 6564 
 2173      203D 2025 
 2173      640A 00
 2174               		.section	.progmem.data.__c.2788,"a"
 2177               	__c.2788:
 2178 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2178      6E74 6572 
 2178      7661 6C20 
 2178      3D20 2564 
 2178      0A00 
 2179               		.section	.progmem.data.__c.2784,"a"
 2182               	__c.2784:
 2183 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2183      656C 6179 
 2183      203D 2025 
 2183      640A 00
 2184               		.section	.progmem.data.__c.2777,"a"
 2187               	__c.2777:
 2188 0000 0A00      		.string	"\n"
 2189               		.section	.progmem.data.__c.2775,"a"
 2192               	__c.2775:
 2193 0000 2575 00   		.string	"%u"
 2194               		.section	.progmem.data.__c.2773,"a"
 2197               	__c.2773:
 2198 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2198      6865 656C 
 2198      5F74 696D 
 2198      655F 746F 
 2198      5F6D 6178 
 2199               		.section	.progmem.data.__c.2771,"a"
 2202               	__c.2771:
 2203 0000 0A00      		.string	"\n"
 2204               		.section	.progmem.data.__c.2769,"a"
 2207               	__c.2769:
 2208 0000 2575 00   		.string	"%u"
 2209               		.section	.progmem.data.__c.2767,"a"
 2212               	__c.2767:
 2213 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2213      6865 656C 
 2213      5F6D 6178 
 2213      5F73 7065 
 2213      6564 3A20 
 2214               		.section	.progmem.data.__c.2765,"a"
 2217               	__c.2765:
 2218 0000 0A00      		.string	"\n"
 2219               		.section	.progmem.data.__c.2763,"a"
 2222               	__c.2763:
 2223 0000 2575 00   		.string	"%u"
 2224               		.section	.progmem.data.__c.2761,"a"
 2227               	__c.2761:
 2228 0000 343A 2074 		.string	"4: time_to_max: "
 2228      696D 655F 
 2228      746F 5F6D 
 2228      6178 3A20 
 2228      00
 2229               		.section	.progmem.data.__c.2759,"a"
 2232               	__c.2759:
 2233 0000 0A00      		.string	"\n"
 2234               		.section	.progmem.data.__c.2757,"a"
 2237               	__c.2757:
 2238 0000 2575 00   		.string	"%u"
 2239               		.section	.progmem.data.__c.2755,"a"
 2242               	__c.2755:
 2243 0000 333A 206D 		.string	"3: max_speed: "
 2243      6178 5F73 
 2243      7065 6564 
 2243      3A20 00
 2244               		.section	.progmem.data.__c.2753,"a"
 2247               	__c.2753:
 2248 0000 0A00      		.string	"\n"
 2249               		.section	.progmem.data.__c.2751,"a"
 2252               	__c.2751:
 2253 0000 2575 00   		.string	"%u"
 2254               		.section	.progmem.data.__c.2749,"a"
 2257               	__c.2749:
 2258 0000 323A 2069 		.string	"2: interval(ms): "
 2258      6E74 6572 
 2258      7661 6C28 
 2258      6D73 293A 
 2258      2000 
 2259               		.section	.progmem.data.__c.2747,"a"
 2262               	__c.2747:
 2263 0000 0A00      		.string	"\n"
 2264               		.section	.progmem.data.__c.2745,"a"
 2267               	__c.2745:
 2268 0000 2575 00   		.string	"%u"
 2269               		.section	.progmem.data.__c.2743,"a"
 2272               	__c.2743:
 2273 0000 313A 2064 		.string	"1: delay(*10ms): "
 2273      656C 6179 
 2273      282A 3130 
 2273      6D73 293A 
 2273      2000 
 2274               		.section	.progmem.data.__c.2741,"a"
 2277               	__c.2741:
 2278 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 2278      5661 6C75 
 2278      6573 202D 
 2278      0A00 
 2279               		.section	.progmem.data.__c.2861,"a"
 2282               	__c.2861:
 2283 0000 4D3E 00   		.string	"M>"
 2284               		.section	.progmem.data.__c.2859,"a"
 2287               	__c.2859:
 2288 0000 4D25 643E 		.string	"M%d> "
 2288      2000 
 2289               		.section	.progmem.data.__c.2857,"a"
 2292               	__c.2857:
 2293 0000 3F00      		.string	"?"
 2294               		.section	.progmem.data.__c.2854,"a"
 2297               	__c.2854:
 2298 0000 7365 7420 		.string	"set default\n"
 2298      6465 6661 
 2298      756C 740A 
 2298      00
 2299               		.section	.progmem.data.__c.2840,"a"
 2302               	__c.2840:
 2303 0000 433E 2000 		.string	"C> "
 2304               		.section	.progmem.data.__c.2830,"a"
 2307               	__c.2830:
 2308 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 2308      6520 6465 
 2308      6C74 613A 
 2308      2063 7572 
 2308      736F 723D 
 2309               		.section	.progmem.data.__c.2828,"a"
 2312               	__c.2828:
 2313 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 2313      4D6F 7573 
 2313      656B 6579 
 2313      202D 0A45 
 2313      5343 2F71 
 2314               		.section	.progmem.data.__c.2733,"a"
 2317               	__c.2733:
 2318 0000 3F00      		.string	"?"
 2319               		.section	.progmem.data.__c.2730,"a"
 2322               	__c.2730:
 2323 0000 4D3E 2000 		.string	"M> "
 2324               		.section	.progmem.data.__c.2735,"a"
 2327               	__c.2735:
 2328 0000 433E 2000 		.string	"C> "
 2329               		.section	.progmem.data.__c.2879,"a"
 2332               	__c.2879:
 2333 0000 4C25 640A 		.string	"L%d\n"
 2333      00
 2334               		.section	.progmem.data.__c.2719,"a"
 2337               	__c.2719:
 2338 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 2338      436F 6E73 
 2338      6F6C 6520 
 2338      2D0A 4553 
 2338      432F 713A 
 2339               		.section	.progmem.data.__c.2649,"a"
 2342               	__c.2649:
 2343 0000 0A09 2D20 		.string	"\n\t- Magic -\nd:\tdebug\nx:\tdebug matrix\nk:\tdebug keyboard\nm:\tdebug mouse\nv:\tvers
 2343      4D61 6769 
 2343      6320 2D0A 
 2343      643A 0964 
 2343      6562 7567 
 2344               		.section	.progmem.data.__c.2714,"a"
 2347               	__c.2714:
 2348 0000 3F00      		.string	"?"
 2349               		.section	.progmem.data.__c.2705,"a"
 2352               	__c.2705:
 2353 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 2353      725F 7265 
 2353      6164 3332 
 2353      2829 3A20 
 2353      2530 346C 
 2354               		.section	.progmem.data.__c.2703,"a"
 2357               	__c.2703:
 2358 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 2358      6F61 7264 
 2358      5F69 646C 
 2358      653A 2025 
 2358      580A 00
 2359               		.section	.progmem.data.__c.2701,"a"
 2362               	__c.2701:
 2363 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 2363      6F61 7264 
 2363      5F70 726F 
 2363      746F 636F 
 2363      6C3A 2025 
 2364               		.section	.progmem.data.__c.2699,"a"
 2367               	__c.2699:
 2368 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 2368      5F6B 6579 
 2368      626F 6172 
 2368      645F 6C65 
 2368      6473 2829 
 2369               		.section	.progmem.data.__c.2697,"a"
 2372               	__c.2697:
 2373 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 2373      5374 6174 
 2373      7573 202D 
 2373      0A00 
 2374               		.section	.progmem.data.__c.2694,"a"
 2377               	__c.2694:
 2378 0000 4743 433A 		.string	"GCC: 9.1.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 2378      2039 2E31 
 2378      2E30 2041 
 2378      5652 2D4C 
 2378      4942 433A 
 2379               		.section	.progmem.data.__c.2692,"a"
 2382               	__c.2692:
 2383 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND KEYMAP_SECTION 4096\n"
 2383      4F4E 533A 
 2383      204C 5546 
 2383      4120 4D4F 
 2383      5553 454B 
 2384               		.section	.progmem.data.__c.2690,"a"
 2387               	__c.2690:
 2388 0000 4255 494C 		.string	"BUILD: f5e487bc (19:18:02 Sep 10 2019)\n"
 2388      443A 2066 
 2388      3565 3438 
 2388      3762 6320 
 2388      2831 393A 
 2389               		.section	.progmem.data.__c.2688,"a"
 2392               	__c.2688:
 2393 0000 5649 443A 		.string	"VID: 0xFEED(t.m.k.) PID: 0x0ADB(ADB keyboard converter) VER: 0x0101\n"
 2393      2030 7846 
 2393      4545 4428 
 2393      742E 6D2E 
 2393      6B2E 2920 
 2394               		.section	.progmem.data.__c.2686,"a"
 2397               	__c.2686:
 2398 0000 4445 5343 		.string	"DESC: convert ADB keyboard to USB\n"
 2398      3A20 636F 
 2398      6E76 6572 
 2398      7420 4144 
 2398      4220 6B65 
 2399               		.section	.progmem.data.__c.2684,"a"
 2402               	__c.2684:
 2403 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 2403      5665 7273 
 2403      696F 6E20 
 2403      2D0A 00
 2404               		.section	.progmem.data.__c.2681,"a"
 2407               	__c.2681:
 2408 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 2408      7365 3A20 
 2408      6F66 660A 
 2408      00
 2409               		.section	.progmem.data.__c.2679,"a"
 2412               	__c.2679:
 2413 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 2413      7365 3A20 
 2413      6F6E 0A00 
 2414               		.section	.progmem.data.__c.2676,"a"
 2417               	__c.2676:
 2418 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 2418      626F 6172 
 2418      643A 206F 
 2418      6666 0A00 
 2419               		.section	.progmem.data.__c.2674,"a"
 2422               	__c.2674:
 2423 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 2423      626F 6172 
 2423      643A 206F 
 2423      6E0A 00
 2424               		.section	.progmem.data.__c.2671,"a"
 2427               	__c.2671:
 2428 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 2428      7269 783A 
 2428      206F 6666 
 2428      0A00 
 2429               		.section	.progmem.data.__c.2669,"a"
 2432               	__c.2669:
 2433 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 2433      7269 783A 
 2433      206F 6E0A 
 2433      00
 2434               		.section	.progmem.data.__c.2666,"a"
 2437               	__c.2666:
 2438 0000 0A64 6562 		.string	"\ndebug: on\n"
 2438      7567 3A20 
 2438      6F6E 0A00 
 2439               		.section	.progmem.data.__c.2664,"a"
 2442               	__c.2664:
 2443 0000 0A64 6562 		.string	"\ndebug: off\n"
 2443      7567 3A20 
 2443      6F66 660A 
 2443      00
 2444               		.section	.progmem.data.__c.2661,"a"
 2447               	__c.2661:
 2448 0000 0A0A 626F 		.string	"\n\nbootloader... "
 2448      6F74 6C6F 
 2448      6164 6572 
 2448      2E2E 2E20 
 2448      00
 2449               		.section	.progmem.data.__c.2658,"a"
 2452               	__c.2658:
 2453 0000 433E 2000 		.string	"C> "
 2454               		.section	.bss.mousekey_param,"aw",@nobits
 2457               	mousekey_param:
 2458 0000 00        		.zero	1
 2459               	.global	command_state
 2460               		.section	.bss.command_state,"aw",@nobits
 2463               	command_state:
 2464 0000 00        		.zero	1
 2465               		.text
 2466               	.Letext0:
 2467               		.file 3 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdint.h"
 2468               		.file 4 "../../tmk_core/common/report.h"
 2469               		.file 5 "../../tmk_core/common/host.h"
 2470               		.file 6 "../../tmk_core/common/avr/xprintf.h"
 2471               		.file 7 "../../tmk_core/common/debug.h"
 2472               		.file 8 "../../tmk_core/common/timer.h"
 2473               		.file 9 "../../tmk_core/common/action_layer.h"
 2474               		.file 10 "../../tmk_core/common/action_util.h"
 2475               		.file 11 "../../tmk_core/common/command.h"
 2476               		.file 12 "../../tmk_core/common/mousekey.h"
 2477               		.file 13 "../../tmk_core/common/action.h"
 2478               		.file 14 "../../tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:4      *ABS*:000000000000003f __SREG__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2312   .progmem.data.__c.2828:0000000000000000 __c.2828
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2307   .progmem.data.__c.2830:0000000000000000 __c.2830
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2182   .progmem.data.__c.2784:0000000000000000 __c.2784
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2177   .progmem.data.__c.2788:0000000000000000 __c.2788
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2172   .progmem.data.__c.2791:0000000000000000 __c.2791
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2167   .progmem.data.__c.2794:0000000000000000 __c.2794
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2162   .progmem.data.__c.2797:0000000000000000 __c.2797
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2157   .progmem.data.__c.2800:0000000000000000 __c.2800
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:407    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2152   .progmem.data.__c.2807:0000000000000000 __c.2807
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2147   .progmem.data.__c.2811:0000000000000000 __c.2811
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2142   .progmem.data.__c.2814:0000000000000000 __c.2814
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2137   .progmem.data.__c.2817:0000000000000000 __c.2817
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2132   .progmem.data.__c.2820:0000000000000000 __c.2820
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2127   .progmem.data.__c.2823:0000000000000000 __c.2823
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:679    .text.switch_default_layer:0000000000000000 switch_default_layer
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2332   .progmem.data.__c.2879:0000000000000000 __c.2879
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:769    .text.command_common:0000000000000000 command_common
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2347   .progmem.data.__c.2714:0000000000000000 __c.2714
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2447   .progmem.data.__c.2661:0000000000000000 __c.2661
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2342   .progmem.data.__c.2649:0000000000000000 __c.2649
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2337   .progmem.data.__c.2719:0000000000000000 __c.2719
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2452   .progmem.data.__c.2658:0000000000000000 __c.2658
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2463   .bss.command_state:0000000000000000 command_state
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2442   .progmem.data.__c.2664:0000000000000000 __c.2664
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2437   .progmem.data.__c.2666:0000000000000000 __c.2666
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2432   .progmem.data.__c.2669:0000000000000000 __c.2669
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2427   .progmem.data.__c.2671:0000000000000000 __c.2671
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2422   .progmem.data.__c.2674:0000000000000000 __c.2674
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2417   .progmem.data.__c.2676:0000000000000000 __c.2676
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2412   .progmem.data.__c.2679:0000000000000000 __c.2679
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2407   .progmem.data.__c.2681:0000000000000000 __c.2681
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2402   .progmem.data.__c.2684:0000000000000000 __c.2684
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2397   .progmem.data.__c.2686:0000000000000000 __c.2686
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2392   .progmem.data.__c.2688:0000000000000000 __c.2688
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2387   .progmem.data.__c.2690:0000000000000000 __c.2690
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2382   .progmem.data.__c.2692:0000000000000000 __c.2692
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2377   .progmem.data.__c.2694:0000000000000000 __c.2694
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2372   .progmem.data.__c.2697:0000000000000000 __c.2697
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2367   .progmem.data.__c.2699:0000000000000000 __c.2699
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2362   .progmem.data.__c.2701:0000000000000000 __c.2701
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2357   .progmem.data.__c.2703:0000000000000000 __c.2703
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2352   .progmem.data.__c.2705:0000000000000000 __c.2705
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:1283   .text.command_extra:0000000000000000 command_extra
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:1283   .text.command_extra:0000000000000000 command_extra.localalias
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:1307   .text.command_console_extra:0000000000000000 command_console_extra
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:1321   .text.command_proc:0000000000000000 command_proc
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2317   .progmem.data.__c.2733:0000000000000000 __c.2733
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2327   .progmem.data.__c.2735:0000000000000000 __c.2735
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2322   .progmem.data.__c.2730:0000000000000000 __c.2730
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2292   .progmem.data.__c.2857:0000000000000000 __c.2857
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2113   .rodata.CSWTCH.57:0000000000000000 CSWTCH.57
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2457   .bss.mousekey_param:0000000000000000 mousekey_param
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2287   .progmem.data.__c.2859:0000000000000000 __c.2859
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2302   .progmem.data.__c.2840:0000000000000000 __c.2840
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2277   .progmem.data.__c.2741:0000000000000000 __c.2741
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2272   .progmem.data.__c.2743:0000000000000000 __c.2743
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2267   .progmem.data.__c.2745:0000000000000000 __c.2745
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2262   .progmem.data.__c.2747:0000000000000000 __c.2747
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2257   .progmem.data.__c.2749:0000000000000000 __c.2749
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2252   .progmem.data.__c.2751:0000000000000000 __c.2751
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2247   .progmem.data.__c.2753:0000000000000000 __c.2753
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2242   .progmem.data.__c.2755:0000000000000000 __c.2755
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2237   .progmem.data.__c.2757:0000000000000000 __c.2757
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2232   .progmem.data.__c.2759:0000000000000000 __c.2759
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2227   .progmem.data.__c.2761:0000000000000000 __c.2761
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2222   .progmem.data.__c.2763:0000000000000000 __c.2763
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2217   .progmem.data.__c.2765:0000000000000000 __c.2765
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2212   .progmem.data.__c.2767:0000000000000000 __c.2767
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2207   .progmem.data.__c.2769:0000000000000000 __c.2769
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2202   .progmem.data.__c.2771:0000000000000000 __c.2771
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2197   .progmem.data.__c.2773:0000000000000000 __c.2773
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2192   .progmem.data.__c.2775:0000000000000000 __c.2775
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2187   .progmem.data.__c.2777:0000000000000000 __c.2777
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2297   .progmem.data.__c.2854:0000000000000000 __c.2854
/var/folders/cl/jr07md_52y31f_27z07pkw7h0000gp/T//ccFAe6x0.s:2282   .progmem.data.__c.2861:0000000000000000 __c.2861

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
__tablejump2__
bootloader_jump
debug_config
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
matrix_is_on
__do_copy_data
__do_clear_bss
